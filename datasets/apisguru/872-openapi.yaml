openapi: 3.0.0
servers:
  - url: /API
x-hasEquivalentPaths: true
info:
  title: Visma Net API
  version: 9.66.02.1023
  x-apisguru-categories:
    - enterprise
  x-logo:
    url: https://assets-global.website-files.com/6305e092bc95bebe63ae6578/638e0482f8330e6e1039283e_mle_16-9-full-4487_169.jpg
  x-origin:
    - format: swagger
      url: https://integration.visma.net/API-index/doc/swagger
      version: "2.0"
  x-providerName: visma.net
paths:
  /controller/api/v1/GeneralLedgerTransactions:
    get:
      operationId: GeneralLedgerTransactions_GetAll
      parameters:
        - description: The branch CD
          in: query
          name: branch
          required: false
          schema:
            type: string
        - description: Mandatory. The ledger in which you want to view the account balances.
          in: query
          name: ledger
          required: true
          schema:
            type: string
        - description: The financial period that begins the date range of the batches you want to view. Format YYYYPP
          in: query
          name: fromPeriod
          required: false
          schema:
            type: string
        - description: The financial period that ends the date range of the batches you want to view. Format YYYYPP
          in: query
          name: toPeriod
          required: false
          schema:
            type: string
        - description: The account CD for which you want to view activities in the selected financial period.
          in: query
          name: account
          required: false
          schema:
            type: string
        - description: The Subaccount
          in: query
          name: subaccountId
          required: false
          schema:
            type: string
        - description: The first date of the interval within the period. Format YYYY-MM-DD
          in: query
          name: fromDate
          required: false
          schema:
            type: string
        - description: The last date of the interval within the selected period. Format YYYY-MM-DD
          in: query
          name: toDate
          required: false
          schema:
            type: string
        - description: Checkmark indicating if unposted batches are included.
          in: query
          name: includeUnposted
          required: false
          schema:
            type: boolean
        - description: Checkmark indicating if unreleased (balanced) batches are included.
          in: query
          name: includeUnreleased
          required: false
          schema:
            type: boolean
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: "By default, if no value is provided, False and the account information will include only Number, Description, Type and GlConsolAccountCD.\r

            If True, each transaction returned will include extended information about account."
          in: query
          name: expandAccountInfo
          required: false
          schema:
            type: boolean
        - description: "By default, if no value is provided, False and branch information will include only branch number.\r

            If True, each transaction returned will include extended information about Branch (number and name)."
          in: query
          name: expandBranchInfo
          required: false
          schema:
            type: boolean
        - description: "By default, if no value is provided, False and the transactions returned will not include their balances (fields BegBalance, EndingBalance, CurrBegBalance, CurrEndingBalance)\r

            If True, each transaction returned will include its balance."
          in: query
          name: includeTransactionBalance
          required: false
          schema:
            type: boolean
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GeneralLedgerTransactionDetailsDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/GeneralLedgerTransactionDetailsDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of General Ledger Transactions - ScreenId=GL404000\r

        Please use a page size lower or equal to the allowed max page size which is returned under metadata. \r

        If pagesize is greater than the max page size, it will be limited to max page size."
      tags:
        - GeneralLedgerTransactions
  /controller/api/v1/KitSpecifications:
    get:
      operationId: KitSpecifications_GetAll
      parameters:
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: kitInventoryID
          required: false
          schema:
            type: string
        - in: query
          name: revisionID
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfKitSpecificationDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfKitSpecificationDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Kit Specifications - ScreenId = IN209500
      tags:
        - KitSpecifications
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: KitSpecifications_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KitSpecificationUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/KitSpecificationUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/KitSpecificationUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/KitSpecificationUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/KitSpecificationUpdateDto"
        description: Defines the data for the KitSpecification to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates a KitSpecification
      tags:
        - KitSpecifications
  "/controller/api/v1/KitSpecifications/{kitInventoryID}":
    get:
      description: Data for the  INKitSpecHdr
      operationId: KitSpecifications_GetBykitInventoryID
      parameters:
        - description: kitInventoryID
          in: path
          name: kitInventoryID
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfKitSpecificationDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfKitSpecificationDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all revisions for a specific KitSpecification
      tags:
        - KitSpecifications
  "/controller/api/v1/KitSpecifications/{kitInventoryID}/{revisionID}":
    get:
      description: Data for the  INKitSpecHdr
      operationId: KitSpecifications_GetBykitInventoryIDrevisionID
      parameters:
        - description: kitInventoryID
          in: path
          name: kitInventoryID
          required: true
          schema:
            type: string
        - description: revisionID
          in: path
          name: revisionID
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KitSpecificationDto"
            text/json:
              schema:
                $ref: "#/components/schemas/KitSpecificationDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific KitSpecification
      tags:
        - KitSpecifications
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: KitSpecifications_PutBykitInventoryIDrevisionID
      parameters:
        - description: kitInventoryID
          in: path
          name: kitInventoryID
          required: true
          schema:
            type: string
        - description: revisionID
          in: path
          name: revisionID
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KitSpecificationUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/KitSpecificationUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/KitSpecificationUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/KitSpecificationUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/KitSpecificationUpdateDto"
        description: The data to update for the KitSpecification
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates a specific KitSpecification
      tags:
        - KitSpecifications
  /controller/api/v1/PurchaseReceipt:
    get:
      operationId: PurchaseReceipt_GetAllReceiptBasic
      parameters:
        - in: query
          name: receiptType
          required: false
          schema:
            enum:
              - PoReceipt
              - PoReturn
              - TransferReceipt
            type: string
        - in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Released
            type: string
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: supplier
          required: false
          schema:
            type: string
        - in: query
          name: poOrderNbr
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PurchaseReceiptDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/PurchaseReceiptDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Purchase Receipts - ScreenId=PO302000\r

        Please use a page size lower or equal to the allowed max page size which is 500"
      tags:
        - PurchaseReceipt
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: PurchaseReceipt_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptUpdateDto"
        description: Defines the data for the  Purchase Receipt to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Purchase Receipt
      tags:
        - PurchaseReceipt
  "/controller/api/v1/PurchaseReceipt/{receiptNumber}":
    get:
      operationId: PurchaseReceipt_GetPurchaseReceiptBasicByreceiptNumber
      parameters:
        - description: Identifies the Purchase Receipt
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseReceiptDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PurchaseReceiptDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Purchase Receipt
      tags:
        - PurchaseReceipt
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: PurchaseReceipt_PutByreceiptNumber
      parameters:
        - description: Identifies the  Purchase Receipt  to update
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptUpdateDto"
        description: Defines the data for the  Purchase Receipt  to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Purchase Receipt
      tags:
        - PurchaseReceipt
  "/controller/api/v1/PurchaseReceipt/{receiptNumber}/action/addpurchaseorder":
    post:
      description: The action result DTO contains information about the result of running the action
      operationId: PurchaseReceipt_AddPurchaseOrdersByreceiptNumber
      parameters:
        - description: Reference number of the receipt to which to add the orders
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptOrderListUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptOrderListUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptOrderListUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptOrderListUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptOrderListUpdateDto"
        description: Object containing an array of reference numbers of the orders to be added to the receipt
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddOrdersToPurchaseReceiptActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/AddOrdersToPurchaseReceiptActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/AddOrdersToPurchaseReceiptActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/AddOrdersToPurchaseReceiptActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Add purchase orders to receipt
      tags:
        - PurchaseReceipt
  "/controller/api/v1/PurchaseReceipt/{receiptNumber}/action/addpurchaseorderlines":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: PurchaseReceipt_AddPurchaseOrderLinesByreceiptNumber
      parameters:
        - description: Reference number of the receipt to which to add the orders
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptOrderLinesListUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptOrderLinesListUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptOrderLinesListUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptOrderLinesListUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptOrderLinesListUpdateDto"
        description: Object containing an array of reference numbers of the orders to be added to the receipt
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddOrderLinesToPurchaseReceiptActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/AddOrderLinesToPurchaseReceiptActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/AddOrderLinesToPurchaseReceiptActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/AddOrderLinesToPurchaseReceiptActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Add purchase order lines to receipt
      tags:
        - PurchaseReceipt
  "/controller/api/v1/PurchaseReceipt/{receiptNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: PurchaseReceipt_ReleaseInvoiceByreceiptNumber
      parameters:
        - description: Reference number of the receipt to be released
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleasePurchaseReceiptActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleasePurchaseReceiptActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleasePurchaseReceiptActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleasePurchaseReceiptActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release purchase receipt operation
      tags:
        - PurchaseReceipt
  "/controller/api/v1/PurchaseReceipt/{receiptNumber}/print":
    get:
      operationId: PurchaseReceipt_PrintPurchaseReceiptByreceiptNumber
      parameters:
        - description: Identifies the receipt
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get the print report of a Purchase Receipt
      tags:
        - PurchaseReceipt
  /controller/api/v1/PurchaseReceiptBasic:
    get:
      operationId: PurchaseReceiptBasic_GetAllReceiptBasic
      parameters:
        - in: query
          name: receiptType
          required: false
          schema:
            enum:
              - PoReceipt
              - PoReturn
              - TransferReceipt
            type: string
        - in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Released
            type: string
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: supplier
          required: false
          schema:
            type: string
        - in: query
          name: poOrderNbr
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PurchaseReceiptBasicDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/PurchaseReceiptBasicDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range with purchase receipts, ScreenId=PO302000\r

        Please use a page size lower or equal to the allowed max page size which is 500"
      tags:
        - PurchaseReceiptBasic
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: PurchaseReceiptBasic_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptBasicUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptBasicUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptBasicUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptBasicUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptBasicUpdateDto"
        description: Defines the data for the  Purchase Receipt to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Purchase Receipt
      tags:
        - PurchaseReceiptBasic
  "/controller/api/v1/PurchaseReceiptBasic/{receiptNumber}":
    get:
      operationId: PurchaseReceiptBasic_GetPurchaseReceiptBasicByreceiptNumber
      parameters:
        - description: Identifies the Purchase Receipt
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseReceiptBasicDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PurchaseReceiptBasicDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Purchase Receipt
      tags:
        - PurchaseReceiptBasic
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: PurchaseReceiptBasic_PutByreceiptNumber
      parameters:
        - description: Identifies the  Purchase Receipt  to update
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptBasicUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptBasicUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptBasicUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptBasicUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/PurchaseReceiptBasicUpdateDto"
        description: Defines the data for the  Purchase Receipt  to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Purchase Receipt
      tags:
        - PurchaseReceiptBasic
  "/controller/api/v1/PurchaseReceiptBasic/{receiptNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: PurchaseReceiptBasic_ReleaseInvoiceByreceiptNumber
      parameters:
        - description: Reference number of the receipt to be released
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleasePurchaseReceiptActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleasePurchaseReceiptActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleasePurchaseReceiptActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleasePurchaseReceiptActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release purchase receipt operation
      tags:
        - PurchaseReceiptBasic
  /controller/api/v1/account:
    get:
      operationId: Account_GetAll
      parameters:
        - description: Set to True to select active accounts.
          in: query
          name: active
          required: false
          schema:
            type: boolean
        - description: Enter the from-value for Account no.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: Filter by the Public code 1, authorities mapped code to the account.
          in: query
          name: publicCode
          required: false
          schema:
            format: int32
            type: integer
        - description: Filter by External code 1 (field used for sorting and inquiries.)
          in: query
          name: externalCode1
          required: false
          schema:
            type: string
        - description: Filter by External code 2 (field used for sorting and inquiries.)
          in: query
          name: externalCode2
          required: false
          schema:
            type: string
        - description: Filter by Analysis code (field used for sorting and inquiries.)
          in: query
          name: analysisCode
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AccountDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AccountDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/AccountDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/AccountDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of General ledger accounts - ScreenId=GL202500
      tags:
        - Account
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Account_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AccountUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/AccountUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/AccountUpdateDto"
        description: Defines the fields and field values to be set on created account
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an account
      tags:
        - Account
  "/controller/api/v1/account/{accountCd}":
    get:
      operationId: Account_GetByaccountCd
      parameters:
        - description: Return the Information from Chart of account for the specified AccountCD
          in: path
          name: accountCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/AccountDto"
            text/json:
              schema:
                $ref: "#/components/schemas/AccountDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/AccountDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Account - ScreenId=GL202500
      tags:
        - Account
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Account_PutByaccountCd
      parameters:
        - description: Identifies the account to update
          in: path
          name: accountCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AccountUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/AccountUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/AccountUpdateDto"
        description: Defines the fields and field values to be updated
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates an account
      tags:
        - Account
  "/controller/api/v1/attachment/{attachmentId}":
    get:
      operationId: Attachment_GetByattachmentId
      parameters:
        - description: Identifies the attachment
          in: path
          name: attachmentId
          required: true
          schema:
            format: uuid
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2: []
      summary: Get latest revision of a specific Attachment
      tags:
        - Attachment
    put:
      description: The the Response Message has StatusCode NoContent if Put operation succeed
      operationId: Attachment_PutByattachmentId
      parameters:
        - description: Identifies the Attachment to update
          in: path
          name: attachmentId
          required: true
          schema:
            format: uuid
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttachmentMetadataUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AttachmentMetadataUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/AttachmentMetadataUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/AttachmentMetadataUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/AttachmentMetadataUpdateDto"
        description: Defines the data for the Attachment to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2: []
      summary: Update a specific Attachment
      tags:
        - Attachment
  /controller/api/v1/attribute:
    get:
      operationId: Attribute_GetAttributes
      parameters:
        - in: query
          name: attributeID
          required: false
          schema:
            type: string
        - in: query
          name: controlType
          required: false
          schema:
            type: string
        - in: query
          name: internal
          required: false
          schema:
            type: boolean
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AttributeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/AttributeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2: []
      summary: "Get a range of General ledger attributes - screen ID: CS205000.\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - Attribute
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Attribute_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AttributeUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/AttributeUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/AttributeUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/AttributeUpdateDto"
        description: Defines the fields and field values to be set on created attribute
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2: []
      summary: Creates an attribute
      tags:
        - Attribute
  "/controller/api/v1/attribute/{attributeId}":
    delete:
      description: Response Message has StatusCode NoContent if DEL operation succeed
      operationId: Attribute_DeleteByattributeId
      parameters:
        - description: Identifies the attribute to delete
          in: path
          name: attributeId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2: []
      summary: Deletes an attribute
      tags:
        - Attribute
    get:
      operationId: Attribute_GetAttributeByattributeId
      parameters:
        - description: Identifies the attribute
          in: path
          name: attributeId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeDto"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2: []
      summary: Get specific Attribute
      tags:
        - Attribute
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Attribute_PutByattributeId
      parameters:
        - description: Identifies the attribute to update
          in: path
          name: attributeId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AttributeUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/AttributeUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/AttributeUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/AttributeUpdateDto"
        description: Defines the fields and field values to be updated
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2: []
      summary: Updates an attribute
      tags:
        - Attribute
  "/controller/api/v1/background/{requestId}":
    get:
      operationId: Background_GetBackgroundApiOperationByrequestId
      parameters:
        - description: ""
          in: path
          name: requestId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundRequestStateDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundRequestStateDto"
          description: OK
        "403":
          description: State request was not done by same company/user as for the background operation request.
        "404":
          description: No background operation state was found.
      security:
        - oauth2: []
      summary: Gets the state of a previously started background API operation
      tags:
        - Background
  "/controller/api/v1/background/{requestId}/content":
    get:
      operationId: Background_GetBackgroundApiOperationContentByrequestId
      parameters:
        - description: ""
          in: path
          name: requestId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Gets response content for a finished background operation, if any.
        "403":
          description: State request was not done by same company/user as for the background operation request.
        "404":
          description: No background operation response content was found.
        "410":
          description: State for background operation has been removed after 24 hours.
      security:
        - oauth2: []
      summary: Gets the response content, if any, of a previously started background API operation that has finished
      tags:
        - Background
  /controller/api/v1/branch:
    get:
      operationId: Branch_GetAllBranches
      parameters:
        - description: Filter by branch ID (number) greater than.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: Order by Branch ID
          in: query
          name: orderBy
          required: false
          schema:
            enum:
              - Id
              - Number
              - Name
              - OrganizationId
              - LastModifiedDateTime
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            format: date-time
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: True to get main address for branch.
          in: query
          name: expandAddress
          required: false
          schema:
            type: boolean
        - description: True to get main contact for a branch.
          in: query
          name: expandContact
          required: false
          schema:
            type: boolean
        - description: True to get base currency for a branch.
          in: query
          name: expandCurrency
          required: false
          schema:
            type: boolean
        - description: True to get vat zone for a branch.
          in: query
          name: expandVatZone
          required: false
          schema:
            type: boolean
        - description: True to get ledger for a branch.
          in: query
          name: expandLedger
          required: false
          schema:
            type: boolean
        - description: True to get industry code for a branch.
          in: query
          name: expandIndustryCode
          required: false
          schema:
            type: boolean
        - description: True to get delivery address for a branch.
          in: query
          name: expandDeliveryAddress
          required: false
          schema:
            type: boolean
        - description: True to get delivery contact for a branch.
          in: query
          name: expandDeliveryContact
          required: false
          schema:
            type: boolean
        - description: True to get default country for a branch.
          in: query
          name: expandDefaultCountry
          required: false
          schema:
            type: boolean
        - description: True to get payment settings for Branch.
          in: query
          name: expandBankSettings
          required: false
          schema:
            type: boolean
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BranchDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/BranchDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Branches - ScreenId=CS101500
      tags:
        - Branch
  "/controller/api/v1/branch/{branchNumber}":
    get:
      operationId: Branch_GetSpecificBranchBybranchNumber
      parameters:
        - description: Identifies the branch
          in: path
          name: branchNumber
          required: true
          schema:
            type: string
        - description: True to get main address for branch.
          in: query
          name: expandAddress
          required: false
          schema:
            type: boolean
        - description: True to get main contact for a branch.
          in: query
          name: expandContact
          required: false
          schema:
            type: boolean
        - description: True to get base currency for a branch.
          in: query
          name: expandCurrency
          required: false
          schema:
            type: boolean
        - description: True to get vat zone for a branch.
          in: query
          name: expandVatZone
          required: false
          schema:
            type: boolean
        - description: True to get ledger for a branch.
          in: query
          name: expandLedger
          required: false
          schema:
            type: boolean
        - description: True to get industry code for a branch.
          in: query
          name: expandIndustryCode
          required: false
          schema:
            type: boolean
        - description: True to get delivery address for a branch.
          in: query
          name: expandDeliveryAddress
          required: false
          schema:
            type: boolean
        - description: True to get delivery contact for a branch.
          in: query
          name: expandDeliveryContact
          required: false
          schema:
            type: boolean
        - description: True to get default country for a branch.
          in: query
          name: expandDefaultCountry
          required: false
          schema:
            type: boolean
        - description: True to get payment settings for Branch.
          in: query
          name: expandBankSettings
          required: false
          schema:
            type: boolean
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BranchDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific branch
      tags:
        - Branch
  "/controller/api/v1/branch/{branchNumber}/BankSettings":
    put:
      description: Response Message has StatusCode No Content if PUT operation succeed
      operationId: Branch_PutBankSettingsForBranchBybranchNumber
      parameters:
        - description: branch number to update
          in: path
          name: branchNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BankSettingsUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update bank settings for branch.
      tags:
        - Branch
  /controller/api/v1/budget:
    get:
      operationId: Budget_GetAll
      parameters:
        - description: Filter by from date.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: Order by Last modified date and time.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Mandatory. Filter by budgets Branch.
          in: query
          name: branch
          required: false
          schema:
            type: string
        - description: Mandatory. The budgets Ledger
          in: query
          name: ledger
          required: false
          schema:
            type: string
        - description: The budgets financial year.
          in: query
          name: financialYear
          required: false
          schema:
            type: string
        - description: The Subaccount of the budget article.
          in: query
          name: subaccount
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BudgetDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/BudgetDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of General Ledger Budget Figures - ScreenId=GL302010
      tags:
        - Budget
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Budget_CreateBudget
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BudgetUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/BudgetUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/BudgetUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/BudgetUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/BudgetUpdateDto"
        description: Defines the data for the Budget to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Budget
      tags:
        - Budget
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Budget_Put
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BudgetUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/BudgetUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/BudgetUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/BudgetUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/BudgetUpdateDto"
        description: Defines the data for the Budget to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Budget
      tags:
        - Budget
  /controller/api/v1/carrier:
    get:
      operationId: Carrier_GetAllCarriers
      parameters:
        - description: Enter the number of records to read.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: Enter the number of records to skip.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "System generated value for last modification of transaction/record. Use format: YYYY-MM-DD HH:MM (date and time) to filter from date to present."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CarrierDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CarrierDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CarrierDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CarrierDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Carriers - ScreeId=CS207500
      tags:
        - Carrier
  "/controller/api/v1/carrier/{carrierName}":
    get:
      operationId: Carrier_GetCarrierBycarrierName
      parameters:
        - description: Identifies the Carrier
          in: path
          name: carrierName
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/CarrierDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/CarrierDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Carrier
      tags:
        - Carrier
  /controller/api/v1/cashTransaction:
    get:
      operationId: CashTransaction_GetAll
      parameters:
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CashTransactionDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CashTransactionDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all Transaction - ScreenID=CA304000
      tags:
        - CashTransaction
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CashTransaction_CreateCashTransaction
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CashTransactionUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CashTransactionUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CashTransactionUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CashTransactionUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CashTransactionUpdateDto"
        description: Defines the data for the Cash Transaction to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Cash Transaction- ScreenID=CA304000
      tags:
        - CashTransaction
  "/controller/api/v1/cashTransaction/{referenceNbr}":
    get:
      operationId: CashTransaction_GetByreferenceNbr
      parameters:
        - description: Returns data for the selected Cash transaction
          in: path
          name: referenceNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CashTransactionDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CashTransactionDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Transaction - ScreenID=CA304000
      tags:
        - CashTransaction
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: CashTransaction_PutByreferenceNbr
      parameters:
        - description: Identifies the Cash Transaction to update
          in: path
          name: referenceNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CashTransactionUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CashTransactionUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CashTransactionUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CashTransactionUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CashTransactionUpdateDto"
        description: Defines the data for the Cash Transaction to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific CashTransaction - ScreenID=CA304000
      tags:
        - CashTransaction
  "/controller/api/v1/cashTransaction/{referenceNbr}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CashTransaction_ReleaseByreferenceNbr
      parameters:
        - description: Reference number of the cash transaction to be released.
          in: path
          name: referenceNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseCashTransactionActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleaseCashTransactionActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseCashTransactionActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleaseCashTransactionActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release cash transaction - ScreenID=CA304000
      tags:
        - CashTransaction
  "/controller/api/v1/cashTransaction/{referenceNbr}/action/reverse":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CashTransaction_ReverseByreferenceNbr
      parameters:
        - description: Reference number of the cash transaction to be reversed.
          in: path
          name: referenceNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReverseCashTransactionActionDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ReverseCashTransactionActionDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ReverseCashTransactionActionDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ReverseCashTransactionActionDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ReverseCashTransactionActionDto"
        description: The action dto use to condition the action
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReverseCashTransactionActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReverseCashTransactionActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Reverse a Cash Transaction- ScreenID=CA304000
      tags:
        - CashTransaction
  /controller/api/v1/cashaccount:
    get:
      operationId: CashAccount_GetAll
      parameters:
        - description: Filter Cass account identifier greater than.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CashAccountDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CashAccountDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all Cash Accounts - ScreenId=CA202000
      tags:
        - CashAccount
  "/controller/api/v1/cashaccount/{accountNumber}":
    get:
      operationId: CashAccount_GetByaccountNumber
      parameters:
        - description: Identifies the cash account
          in: path
          name: accountNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CashAccountDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CashAccountDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific cash account
      tags:
        - CashAccount
  /controller/api/v1/cashsale:
    get:
      operationId: CashSale_GetAllCashSales
      parameters:
        - description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - DebitNote
              - CreditNote
              - Payment
              - VoidPayment
              - Prepayment
              - Refund
              - FinCharge
              - SmallBalanceWo
              - SmallCreditWo
              - CashSale
              - CashReturn
              - Undefined
              - NoUpdate
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: The dunning level of the document.
          in: query
          name: dunningLevel
          required: false
          schema:
            format: int32
            type: integer
        - description: The date of the closing of the financial period.
          in: query
          name: closedFinancialPeriod
          required: false
          schema:
            type: string
        - description: The date and time for when the document last released a dunning letter.
          in: query
          name: dunningLetterDateTime
          required: false
          schema:
            type: string
        - description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          in: query
          name: dunningLetterDateTimeCondition
          required: false
          schema:
            type: string
        - description: The project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: True if you want to see all dunning information regarding this document.
          in: query
          name: expandApplications
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDunningInformation
          required: false
          schema:
            type: boolean
        - description: True if you want to see all attachments regarding this document.
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: True if you want to see all VAT details regarding this document.
          in: query
          name: expandTaxDetails
          required: false
          schema:
            type: boolean
        - description: True if you want to see all information regarding the invoice address for this document.
          in: query
          name: expandInvoiceAddress
          required: false
          schema:
            type: boolean
        - description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          in: query
          name: financialPeriod
          required: false
          schema:
            type: string
        - description: The date when payment for the document is due, in accordance with the credit terms.
          in: query
          name: documentDueDate
          required: false
          schema:
            format: date-time
            type: string
        - description: The status of the document. Use the dropdown to select status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - PendingPrint
              - PendingEmail
              - CreditHold
              - CcHold
              - Reserved
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: externalReference
          required: false
          schema:
            type: string
        - description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          in: query
          name: paymentReference
          required: false
          schema:
            type: string
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: customerRefNumber
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CashSaleDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CashSaleDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Cash Sales - ScreenId=AR304000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        Change log:\r

        2021-October:Added forced pagination"
      tags:
        - CashSale
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CashSale_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CashSaleUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CashSaleUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CashSaleUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CashSaleUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CashSaleUpdateDto"
        description: Defines the data for the Cash Sale to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Cash Sale
      tags:
        - CashSale
  "/controller/api/v1/cashsale/{documentNumber}":
    get:
      operationId: CashSale_GetBydocumentNumber
      parameters:
        - description: Identifies the Cash Sale Document
          in: path
          name: documentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CashSaleDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CashSaleDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Cash Sale
      tags:
        - CashSale
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: CashSale_PutBydocumentNumber
      parameters:
        - description: Identifies the Cash Sale to update
          in: path
          name: documentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CashSaleUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CashSaleUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CashSaleUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CashSaleUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CashSaleUpdateDto"
        description: Defines the data for the Cash Sale to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Cash Sale
      tags:
        - CashSale
  /controller/api/v1/contact:
    get:
      operationId: Contact_GetAllContacts
      parameters:
        - in: query
          name: displayName
          required: false
          schema:
            type: string
        - in: query
          name: active
          required: false
          schema:
            type: string
        - in: query
          name: firstName
          required: false
          schema:
            type: string
        - in: query
          name: lastName
          required: false
          schema:
            type: string
        - in: query
          name: businessAccount
          required: false
          schema:
            type: string
        - in: query
          name: email
          required: false
          schema:
            type: string
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContactDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContactDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Contacts - ScreenId=CR302000
      tags:
        - Contact
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Contact_CreateContact
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ContactUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ContactUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ContactUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ContactUpdateDto"
        description: Defines the data for the Contact to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Contact
      tags:
        - Contact
  "/controller/api/v1/contact/{contactId}":
    get:
      operationId: Contact_GetBycontactId
      parameters:
        - description: Identifies the Contact
          in: path
          name: contactId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ContactDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Contact
      tags:
        - Contact
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Contact_PutBycontactId
      parameters:
        - description: Identifies the Contact to update
          in: path
          name: contactId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ContactUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ContactUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ContactUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ContactUpdateDto"
        description: Defines the data for the Contact to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Contact
      tags:
        - Contact
  /controller/api/v1/contractTemplate:
    get:
      operationId: ContractTemplate_GetAll
      parameters:
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: expandAttributes
          required: false
          schema:
            type: boolean
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContractTemplateDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContractTemplateDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Contract Templates - ScreenId=CT202000
      tags:
        - ContractTemplate
  /controller/api/v1/contractUsage:
    get:
      operationId: ContractUsage_GetAll
      parameters:
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContractUsageDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContractUsageDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Contract Usage - ScreenId=CT303000
      tags:
        - ContractUsage
  "/controller/api/v1/contractUsage/{contractId}":
    get:
      operationId: ContractUsage_GetSpecificBycontractId
      parameters:
        - description: Identify the Contract Usage
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractUsageDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ContractUsageDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Contract Usage
      tags:
        - ContractUsage
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: ContractUsage_PutBycontractId
      parameters:
        - description: Identifies the Contract Usage to update
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContractUsageUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ContractUsageUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ContractUsageUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ContractUsageUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ContractUsageUpdateDto"
        description: Defines the data for the Contract Usage to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Contract Usage
      tags:
        - ContractUsage
  /controller/api/v1/country:
    get:
      operationId: Country_GetCountries
      parameters:
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CountryDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CountryDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Countries - ScreenId=CS20400S\r

        Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - Country
  "/controller/api/v1/country/{countryId}":
    get:
      operationId: Country_GetCountryBycountryId
      parameters:
        - description: Identifies the Country
          in: path
          name: countryId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountryDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CountryDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Country
      tags:
        - Country
  /controller/api/v1/creditNote:
    get:
      deprecated: true
      operationId: CreditNote_GetAllCreditNotesDto
      parameters:
        - description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - DebitNote
              - CreditNote
              - Payment
              - VoidPayment
              - Prepayment
              - Refund
              - FinCharge
              - SmallBalanceWo
              - SmallCreditWo
              - CashSale
              - CashReturn
              - Undefined
              - NoUpdate
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: The dunning level of the document.
          in: query
          name: dunningLevel
          required: false
          schema:
            format: int32
            type: integer
        - description: The date of the closing of the financial period.
          in: query
          name: closedFinancialPeriod
          required: false
          schema:
            type: string
        - description: The date and time for when the document last released a dunning letter.
          in: query
          name: dunningLetterDateTime
          required: false
          schema:
            type: string
        - description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          in: query
          name: dunningLetterDateTimeCondition
          required: false
          schema:
            type: string
        - description: The project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: True if you want to see all dunning information regarding this document.
          in: query
          name: expandApplications
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDunningInformation
          required: false
          schema:
            type: boolean
        - description: True if you want to see all attachments regarding this document.
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: True if you want to see all VAT details regarding this document.
          in: query
          name: expandTaxDetails
          required: false
          schema:
            type: boolean
        - description: True if you want to see all information regarding the invoice address for this document.
          in: query
          name: expandInvoiceAddress
          required: false
          schema:
            type: boolean
        - description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          in: query
          name: financialPeriod
          required: false
          schema:
            type: string
        - description: The date when payment for the document is due, in accordance with the credit terms.
          in: query
          name: documentDueDate
          required: false
          schema:
            format: date-time
            type: string
        - description: The status of the document. Use the dropdown to select status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - PendingPrint
              - PendingEmail
              - CreditHold
              - CcHold
              - Reserved
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: externalReference
          required: false
          schema:
            type: string
        - description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          in: query
          name: paymentReference
          required: false
          schema:
            type: string
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: customerRefNumber
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CreditNoteDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CreditNoteDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Credit Notes - Method is deprecated start using the new method in endpoint Customer Credit Note
      tags:
        - CreditNote
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CreditNote_CreateCreditNote
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditNoteUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreditNoteUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CreditNoteUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CreditNoteUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CreditNoteUpdateDto"
        description: Defines the data for the Credit Note to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Credit Note - Method is deprecated start using the new method in endpoint Customer Credit Note
      tags:
        - CreditNote
  "/controller/api/v1/creditNote/{creditNoteNumber}":
    get:
      deprecated: true
      operationId: CreditNote_GetBycreditNoteNumber
      parameters:
        - description: Identifies the Credit Note
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditNoteDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CreditNoteDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Credit Note - Method is deprecated start using the new method in endpoint Customer Credit Note
      tags:
        - CreditNote
    put:
      deprecated: true
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: CreditNote_PutBycreditNoteNumber
      parameters:
        - description: Identifies the Credit Note to update
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditNoteUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreditNoteUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CreditNoteUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CreditNoteUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CreditNoteUpdateDto"
        description: Defines the data for the Credit Note to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Credit Note - Method is deprecated start using the new method in endpoint Customer Credit Note
      tags:
        - CreditNote
  "/controller/api/v1/creditNote/{creditNoteNumber}/action/release":
    post:
      deprecated: true
      description: The action result dto contains information about the result of running the action
      operationId: CreditNote_ReleaseInvoiceBycreditNoteNumber
      parameters:
        - description: Reference number of the credit note to be released
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseInvoiceActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleaseInvoiceActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseInvoiceActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleaseInvoiceActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release credit note operation - Method is deprecated start using the new method in endpoint Customer Credit Note
      tags:
        - CreditNote
  "/controller/api/v1/creditNote/{creditNoteNumber}/attachment":
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CreditNote_CreateHeaderAttachmentBycreditNoteNumber
      parameters:
        - description: Identifies the Credit Note
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: "Creates an attachment and associates it with a Credit Note. If the file already exists, a new revision is created.\r

        \ - Method is deprecated start using the new method in endpoint Customer Credit Note"
      tags:
        - CreditNote
  "/controller/api/v1/creditNote/{creditNoteNumber}/{lineNumber}/attachment":
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CreditNote_CreateLineAttachmentBycreditNoteNumberlineNumber
      parameters:
        - description: Identifies the Credit Note
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: "Creates an attachment and associates it with a certain Credit Note line. If the file already exists, a new revision is created.\r

        \ - Method is deprecated start using the new method in endpoint Customer Credit Note"
      tags:
        - CreditNote
  /controller/api/v1/creditTerm:
    get:
      operationId: CreditTerm_GetCreditTerms
      parameters:
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: System retrieved information for created date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: termsId
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfCreditTermDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfCreditTermDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of credit terms - ScreenId=CS206500
      tags:
        - CreditTerm
  /controller/api/v1/currency:
    get:
      operationId: Currency_GetAll
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all available Currencies - ScreenId=CM202000
      tags:
        - Currency
  "/controller/api/v1/currency/{curyId}":
    get:
      operationId: Currency_GetSpecificCurrencyBycuryId
      parameters:
        - description: Returns data for the selected CurrencyId
          in: path
          name: curyId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrencyDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/CurrencyDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CurrencyDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/CurrencyDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Currency - ScreenId=CM202000
      tags:
        - Currency
  /controller/api/v1/customer:
    get:
      operationId: Customer_GetAll
      parameters:
        - description: This field does not work and has been deprecated. It will be removed in future versions.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "[This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.]\r

            Tells the service to return only {numberToRead} number of records."
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: "[This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.]\r

            Tells the service to return only records after the first {skipRecords} number of records."
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: Equals Customer name.
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Drop down and select Status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Active
              - OnHold
              - CreditHold
              - Inactive
              - OneTime
            type: string
        - description: Equals Corporate ID from Delivery settings tab.
          in: query
          name: corporateId
          required: false
          schema:
            type: string
        - description: Equals VAT registration ID from Delivery settings tab.
          in: query
          name: vatRegistrationId
          required: false
          schema:
            type: string
        - description: Equals Email for customer.
          in: query
          name: email
          required: false
          schema:
            type: string
        - description: Equals Phone 1 for customer.
          in: query
          name: phone
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: expandAccountInformation
          required: false
          schema:
            type: boolean
        - in: query
          name: expandPaymentMethods
          required: false
          schema:
            type: boolean
        - description: Expand direct debit info
          in: query
          name: expandDirectDebit
          required: false
          schema:
            type: boolean
        - description: " Attributes (additional information) connected to the entity.\r

            \ Examples:\r

            {{base}}/customer?attributes={\"AttributeID\":\"ValueID\",\"AttributeID\":\"ValueID\"}\r

            {{base}}/customer?attributes={\"AttributeID\":\"ValueID1,ValueID2\"}"
          in: query
          name: attributes
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of customers - ScreenId=AR303000
      tags:
        - Customer
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Customer_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomerUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CustomerUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CustomerUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CustomerUpdateDto"
        description: Defines the data for the customer to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates a customer
      tags:
        - Customer
  "/controller/api/v1/customer/action/changeCustomerCd/{internalId}":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: Customer_ChangeCustomerNrActionByinternalId
      parameters:
        - description: Internal identifier of the Customer for which the Customer Nr will be changed
          in: path
          name: internalId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeCustomerCdActionDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ChangeCustomerCdActionDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ChangeCustomerCdActionDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ChangeCustomerCdActionDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ChangeCustomerCdActionDto"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeCustomerCdActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ChangeCustomerCdActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ChangeCustomerCdActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ChangeCustomerCdActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates the CustomerNr for the specified Customer
      tags:
        - Customer
  /controller/api/v1/customer/balance:
    get:
      operationId: Customer_GetAllCustomerBalance
      parameters:
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerBalanceDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerBalanceDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerBalanceDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerBalanceDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get the balance for a range of customers
      tags:
        - Customer
  /controller/api/v1/customer/customerClass:
    get:
      operationId: Customer_GetCustomerClasses
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerClassDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerClassDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get Customer Classes - ScreenId=AR201000
      tags:
        - Customer
  "/controller/api/v1/customer/customerClass/{customerClassId}":
    get:
      operationId: Customer_GetSpecificCustomerClassBycustomerClassId
      parameters:
        - description: Identifies the customer class
          in: path
          name: customerClassId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerClassDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerClassDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific customer class - ScreenId=AR201000
      tags:
        - Customer
  "/controller/api/v1/customer/internal/{internalID}":
    get:
      operationId: Customer_GetByinternalID
      parameters:
        - description: Identifies the customer
          in: path
          name: internalID
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific customer by internalID
      tags:
        - Customer
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Customer_PutByinternalID
      parameters:
        - description: Identifies the customer to update by its internalID
          in: path
          name: internalID
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CustomerUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates a specific customer using the internalID
      tags:
        - Customer
  "/controller/api/v1/customer/{customerCd}":
    get:
      operationId: Customer_GetBycustomerCd
      parameters:
        - description: Identifies the customer
          in: path
          name: customerCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific customer
      tags:
        - Customer
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Customer_PutBycustomerCd
      parameters:
        - description: Identifies the customer to update
          in: path
          name: customerCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CustomerUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates a specific customer
      tags:
        - Customer
  "/controller/api/v1/customer/{customerCd}/balance":
    get:
      operationId: Customer_GetCustomerBalanceBycustomerCd
      parameters:
        - description: Identifies the customer for which to return data
          in: path
          name: customerCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerBalanceDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomerBalanceDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerBalanceDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomerBalanceDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific customer's balance - ScreenId=AR303000
      tags:
        - Customer
  "/controller/api/v1/customer/{customerCd}/contact":
    get:
      operationId: Customer_GetAllContactsForCustomerBycustomerCd
      parameters:
        - description: ""
          in: path
          name: customerCd
          required: true
          schema:
            type: string
        - in: query
          name: displayName
          required: false
          schema:
            type: string
        - in: query
          name: active
          required: false
          schema:
            type: string
        - in: query
          name: firstName
          required: false
          schema:
            type: string
        - in: query
          name: lastName
          required: false
          schema:
            type: string
        - in: query
          name: businessAccount
          required: false
          schema:
            type: string
        - in: query
          name: email
          required: false
          schema:
            type: string
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContactDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContactDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Contacts of a specific customer
      tags:
        - Customer
  "/controller/api/v1/customer/{customerCd}/directdebit":
    get:
      operationId: Customer_GetCustomerDirectDebitBycustomerCd
      parameters:
        - description: Identifies the customer for which to return data
          in: path
          name: customerCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDirectDebitDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDirectDebitDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDirectDebitDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDirectDebitDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get direct debit information for a specific customer(only for Netherlands)
      tags:
        - Customer
  "/controller/api/v1/customer/{customerCd}/note":
    get:
      operationId: Customer_GetCustomerNoteBycustomerCd
      parameters:
        - description: Identifies the customer for which to return data
          in: path
          name: customerCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoteDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/NoteDto"
            text/json:
              schema:
                $ref: "#/components/schemas/NoteDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/NoteDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific customer's note
      tags:
        - Customer
  "/controller/api/v1/customer/{customerCd}/salesorder":
    get:
      operationId: Customer_GetAllOrderForCustomerBycustomerCd
      parameters:
        - description: ""
          in: path
          name: customerCd
          required: true
          schema:
            type: string
        - description: Filter by Order type.
          in: query
          name: orderType
          required: false
          schema:
            type: string
        - description: Select to filter on status on order.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Open
              - Hold
              - CreditHold
              - Completed
              - Cancelled
              - BackOrder
              - Shipping
              - Invoiced
              - PendingApproval
              - Voided
            type: string
        - description: Filter on Order no. greater than value.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: Set to true to include notes.
          in: query
          name: showNotes
          required: false
          schema:
            type: boolean
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of SO Orders of a specific customer
      tags:
        - Customer
  "/controller/api/v1/customer/{customerCd}/salesorderbasic":
    get:
      operationId: Customer_GetAllSalesOrderBasicForCustomerBycustomerCd
      parameters:
        - description: ""
          in: path
          name: customerCd
          required: true
          schema:
            type: string
        - description: Filter by Order type.
          in: query
          name: orderType
          required: false
          schema:
            type: string
        - description: Select to filter on status on order.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Open
              - Hold
              - CreditHold
              - Completed
              - Cancelled
              - BackOrder
              - Shipping
              - Invoiced
              - PendingApproval
              - Voided
            type: string
        - description: Filter on Order no. greater than value.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: Set to true to include notes.
          in: query
          name: showNotes
          required: false
          schema:
            type: boolean
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderBasicDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderBasicDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of SO Orders Basic of a specific customer
      tags:
        - Customer
  "/controller/api/v1/customer/{customerCd}/salespersons":
    get:
      operationId: Customer_GetSalesPersonsForCustomerBycustomerCd
      parameters:
        - description: ""
          in: path
          name: customerCd
          required: true
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustSalesPersonsDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustSalesPersonsDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Sales Persons of a specific customer
      tags:
        - Customer
  "/controller/api/v1/customer/{customerNumber}/cashSale":
    get:
      operationId: Customer_GetAllCashSalesForCustomerBycustomerNumber
      parameters:
        - description: Identifies the customer for which to return data
          in: path
          name: customerNumber
          required: true
          schema:
            type: string
        - description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - DebitNote
              - CreditNote
              - Payment
              - VoidPayment
              - Prepayment
              - Refund
              - FinCharge
              - SmallBalanceWo
              - SmallCreditWo
              - CashSale
              - CashReturn
              - Undefined
              - NoUpdate
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: The dunning level of the document.
          in: query
          name: dunningLevel
          required: false
          schema:
            format: int32
            type: integer
        - description: The date of the closing of the financial period.
          in: query
          name: closedFinancialPeriod
          required: false
          schema:
            type: string
        - description: The date and time for when the document last released a dunning letter.
          in: query
          name: dunningLetterDateTime
          required: false
          schema:
            type: string
        - description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          in: query
          name: dunningLetterDateTimeCondition
          required: false
          schema:
            type: string
        - description: The project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: True if you want to see all dunning information regarding this document.
          in: query
          name: expandApplications
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDunningInformation
          required: false
          schema:
            type: boolean
        - description: True if you want to see all attachments regarding this document.
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: True if you want to see all VAT details regarding this document.
          in: query
          name: expandTaxDetails
          required: false
          schema:
            type: boolean
        - description: True if you want to see all information regarding the invoice address for this document.
          in: query
          name: expandInvoiceAddress
          required: false
          schema:
            type: boolean
        - description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          in: query
          name: financialPeriod
          required: false
          schema:
            type: string
        - description: The date when payment for the document is due, in accordance with the credit terms.
          in: query
          name: documentDueDate
          required: false
          schema:
            format: date-time
            type: string
        - description: The status of the document. Use the dropdown to select status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - PendingPrint
              - PendingEmail
              - CreditHold
              - CcHold
              - Reserved
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: externalReference
          required: false
          schema:
            type: string
        - description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          in: query
          name: paymentReference
          required: false
          schema:
            type: string
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: customerRefNumber
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CashSaleDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CashSaleDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of cash sales for a specific customer
      tags:
        - Customer
  "/controller/api/v1/customer/{customerNumber}/document":
    get:
      operationId: Customer_GetAllDocumentsForCustomerBycustomerNumber
      parameters:
        - description: Identifies the customer for which to return data
          in: path
          name: customerNumber
          required: true
          schema:
            type: string
        - description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - DebitNote
              - CreditNote
              - Payment
              - VoidPayment
              - Prepayment
              - Refund
              - FinCharge
              - SmallBalanceWo
              - SmallCreditWo
              - CashSale
              - CashReturn
              - Undefined
              - NoUpdate
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: The dunning level of the document.
          in: query
          name: dunningLevel
          required: false
          schema:
            format: int32
            type: integer
        - description: The date of the closing of the financial period.
          in: query
          name: closedFinancialPeriod
          required: false
          schema:
            type: string
        - description: The date and time for when the document last released a dunning letter.
          in: query
          name: dunningLetterDateTime
          required: false
          schema:
            type: string
        - description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          in: query
          name: dunningLetterDateTimeCondition
          required: false
          schema:
            type: string
        - description: The project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: True if you want to see all dunning information regarding this document.
          in: query
          name: expandApplications
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDunningInformation
          required: false
          schema:
            type: boolean
        - description: True if you want to see all attachments regarding this document.
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: True if you want to see all VAT details regarding this document.
          in: query
          name: expandTaxDetails
          required: false
          schema:
            type: boolean
        - description: True if you want to see all information regarding the invoice address for this document.
          in: query
          name: expandInvoiceAddress
          required: false
          schema:
            type: boolean
        - description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          in: query
          name: financialPeriod
          required: false
          schema:
            type: string
        - description: The date when payment for the document is due, in accordance with the credit terms.
          in: query
          name: documentDueDate
          required: false
          schema:
            format: date-time
            type: string
        - description: The status of the document. Use the dropdown to select status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - PendingPrint
              - PendingEmail
              - CreditHold
              - CcHold
              - Reserved
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: externalReference
          required: false
          schema:
            type: string
        - description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          in: query
          name: paymentReference
          required: false
          schema:
            type: string
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: customerRefNumber
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDocumentDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDocumentDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Gets a range of documents for a specific customer
      tags:
        - Customer
  "/controller/api/v1/customer/{customerNumber}/invoice":
    get:
      operationId: Customer_GetAllInvoicesForCustomerBycustomerNumber
      parameters:
        - description: Identifies the customer for which to return data
          in: path
          name: customerNumber
          required: true
          schema:
            type: string
        - description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - DebitNote
              - CreditNote
              - Payment
              - VoidPayment
              - Prepayment
              - Refund
              - FinCharge
              - SmallBalanceWo
              - SmallCreditWo
              - CashSale
              - CashReturn
              - Undefined
              - NoUpdate
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: The dunning level of the document.
          in: query
          name: dunningLevel
          required: false
          schema:
            format: int32
            type: integer
        - description: The date of the closing of the financial period.
          in: query
          name: closedFinancialPeriod
          required: false
          schema:
            type: string
        - description: The date and time for when the document last released a dunning letter.
          in: query
          name: dunningLetterDateTime
          required: false
          schema:
            type: string
        - description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          in: query
          name: dunningLetterDateTimeCondition
          required: false
          schema:
            type: string
        - description: The project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: True if you want to see all dunning information regarding this document.
          in: query
          name: expandApplications
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDunningInformation
          required: false
          schema:
            type: boolean
        - description: True if you want to see all attachments regarding this document.
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: True if you want to see all VAT details regarding this document.
          in: query
          name: expandTaxDetails
          required: false
          schema:
            type: boolean
        - description: True if you want to see all information regarding the invoice address for this document.
          in: query
          name: expandInvoiceAddress
          required: false
          schema:
            type: boolean
        - description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          in: query
          name: financialPeriod
          required: false
          schema:
            type: string
        - description: The date when payment for the document is due, in accordance with the credit terms.
          in: query
          name: documentDueDate
          required: false
          schema:
            format: date-time
            type: string
        - description: The status of the document. Use the dropdown to select status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - PendingPrint
              - PendingEmail
              - CreditHold
              - CcHold
              - Reserved
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: externalReference
          required: false
          schema:
            type: string
        - description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          in: query
          name: paymentReference
          required: false
          schema:
            type: string
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: customerRefNumber
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerInvoiceDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerInvoiceDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of invoices for a specific customer
      tags:
        - Customer
  "/controller/api/v1/customer/{customer}/action/createDunningLetter":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: Customer_CreateDunningLetterActionBycustomer
      parameters:
        - description: Reference number of the customer for which the dunning letters will be created
          in: path
          name: customer
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDunningLetterActionDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateDunningLetterActionDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CreateDunningLetterActionDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CreateDunningLetterActionDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CreateDunningLetterActionDto"
        description: Defines the data for the dunning letters to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDunningLetterActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/CreateDunningLetterActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CreateDunningLetterActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDunningLetterActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates dunning letters for a specific customer
      tags:
        - Customer
  /controller/api/v1/customerContract:
    get:
      operationId: CustomerContract_GetAll
      parameters:
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: contractTemplate
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            enum:
              - Draft
              - InApproval
              - Active
              - Expired
              - Canceled
              - Completed
              - InUpgrade
              - PendingActivation
            type: string
        - in: query
          name: customer
          required: false
          schema:
            type: string
        - in: query
          name: expandSummary
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDetails
          required: false
          schema:
            type: boolean
        - description: " Attributes (additional information) connected to the entity.\r

            \ Examples:\r

            {{base}}/customerContract?attributes={\"AttributeID\":\"ValueID\",\"AttributeID\":\"ValueID\"}\r

            {{base}}/customerContract?attributes={\"AttributeID\":\"ValueID1,ValueID2\"}"
          in: query
          name: attributes
          required: false
          schema:
            type: string
        - in: query
          name: expandAttributes
          required: false
          schema:
            type: boolean
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerContractDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerContractDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Customer Contracts, a filter needs to be specified - ScreenId=CT301000
      tags:
        - CustomerContract
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerContract_CreateCustomerContract
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerContractUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomerContractUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CustomerContractUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CustomerContractUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CustomerContractUpdateDto"
        description: Defines the data for the CustomerContract to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a CustomerContract
      tags:
        - CustomerContract
  "/controller/api/v1/customerContract/{contractId}":
    get:
      operationId: CustomerContract_GetCustomerContractBycontractId
      parameters:
        - description: Identifies the customer contract
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerContractDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerContractDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Customer Contract
      tags:
        - CustomerContract
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: CustomerContract_PutBycontractId
      parameters:
        - description: Identifies the CustomerContract to update
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerContractUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomerContractUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CustomerContractUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CustomerContractUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CustomerContractUpdateDto"
        description: Defines the data for the CustomerContract to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific CustomerContract
      tags:
        - CustomerContract
  "/controller/api/v1/customerContract/{contractId}/action/activateContract":
    post:
      description: Response Message has StatusCode BadRequest or InternalServerError if POST operation failed
      operationId: CustomerContract_ActivateContractBycontractId
      parameters:
        - description: Reference number of the customer contract to be activated
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: Optional Activation Date
          in: query
          name: activationDate
          required: false
          schema:
            format: date-time
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Activate contract operation
      tags:
        - CustomerContract
  "/controller/api/v1/customerContract/{contractId}/action/activateUpgrade":
    post:
      description: Response Message has StatusCode BadRequest or InternalServerError if POST operation failed
      operationId: CustomerContract_ActivateUpgradeBycontractId
      parameters:
        - description: Reference number of the customer contract to be activated
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: Optional Activation Date
          in: query
          name: activationDate
          required: false
          schema:
            format: date-time
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Activate upgrade contract operation
      tags:
        - CustomerContract
  "/controller/api/v1/customerContract/{contractId}/action/setupAndActivateContract":
    post:
      description: Response Message has StatusCode BadRequest or InternalServerError if POST operation failed
      operationId: CustomerContract_SetupAndActivateContractBycontractId
      parameters:
        - description: Reference number of the customer contract to be setup and activated
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: Optional Activation Date
          in: query
          name: activationDate
          required: false
          schema:
            format: date-time
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Setup and Activate contract operation
      tags:
        - CustomerContract
  "/controller/api/v1/customerContract/{contractId}/action/setupContract":
    post:
      description: Response Message has StatusCode BadRequest or InternalServerError if POST operation failed
      operationId: CustomerContract_SetupContractBycontractId
      parameters:
        - description: Reference number of the customer contract to be set up
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: Optional Setup Date
          in: query
          name: setupDate
          required: false
          schema:
            format: date-time
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Setup contract operation
      tags:
        - CustomerContract
  "/controller/api/v1/customerContract/{contractId}/action/terminateContract":
    post:
      description: Response Message has StatusCode BadRequest or InternalServerError if POST operation failed
      operationId: CustomerContract_TerminateContractBycontractId
      parameters:
        - description: Reference number of the customer contract to be terminated
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: Optional Termination Date
          in: query
          name: terminationDate
          required: false
          schema:
            format: date-time
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Terminate contract operation
      tags:
        - CustomerContract
  "/controller/api/v1/customerContract/{contractId}/action/upgradeContract":
    post:
      description: Response Message has StatusCode BadRequest or InternalServerError if POST operation failed
      operationId: CustomerContract_UpgradeContractBycontractId
      parameters:
        - description: Reference number of the customer contract to be upgraded
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Upgrade contract operation
      tags:
        - CustomerContract
  "/controller/api/v1/customerContract/{contractId}/details":
    get:
      operationId: CustomerContract_GetCustomerContractDetailsBycontractId
      parameters:
        - description: Identifies the customer contract
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerContractDetailsDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomerContractDetailsDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerContractDetailsDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomerContractDetailsDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Customer Contract Details
      tags:
        - CustomerContract
  "/controller/api/v1/customerContract/{contractId}/recurringSummary":
    get:
      operationId: CustomerContract_GetCustomerContractRecurringSummaryBycontractId
      parameters:
        - description: Identifies the customer contract
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerContractRecurringSummaryDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomerContractRecurringSummaryDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerContractRecurringSummaryDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomerContractRecurringSummaryDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Customer Contract Recurring Summary
      tags:
        - CustomerContract
  "/controller/api/v1/customerContract/{contractId}/summary":
    get:
      operationId: CustomerContract_GetCustomerContractSummaryBycontractId
      parameters:
        - description: Identifies the customer contract
          in: path
          name: contractId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerContractSummaryDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomerContractSummaryDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerContractSummaryDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomerContractSummaryDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Customer Contract Summary
      tags:
        - CustomerContract
  /controller/api/v1/customerCreditNote:
    get:
      description: Data for Customer Credit Note
      operationId: CustomerCreditNote_GetAll
      parameters:
        - description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - DebitNote
              - CreditNote
              - Payment
              - VoidPayment
              - Prepayment
              - Refund
              - FinCharge
              - SmallBalanceWo
              - SmallCreditWo
              - CashSale
              - CashReturn
              - Undefined
              - NoUpdate
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: The dunning level of the document.
          in: query
          name: dunningLevel
          required: false
          schema:
            format: int32
            type: integer
        - description: The date of the closing of the financial period.
          in: query
          name: closedFinancialPeriod
          required: false
          schema:
            type: string
        - description: The date and time for when the document last released a dunning letter.
          in: query
          name: dunningLetterDateTime
          required: false
          schema:
            type: string
        - description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          in: query
          name: dunningLetterDateTimeCondition
          required: false
          schema:
            type: string
        - description: The project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: True if you want to see all dunning information regarding this document.
          in: query
          name: expandApplications
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDunningInformation
          required: false
          schema:
            type: boolean
        - description: True if you want to see all attachments regarding this document.
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: True if you want to see all VAT details regarding this document.
          in: query
          name: expandTaxDetails
          required: false
          schema:
            type: boolean
        - description: True if you want to see all information regarding the invoice address for this document.
          in: query
          name: expandInvoiceAddress
          required: false
          schema:
            type: boolean
        - description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          in: query
          name: financialPeriod
          required: false
          schema:
            type: string
        - description: The date when payment for the document is due, in accordance with the credit terms.
          in: query
          name: documentDueDate
          required: false
          schema:
            format: date-time
            type: string
        - description: The status of the document. Use the dropdown to select status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - PendingPrint
              - PendingEmail
              - CreditHold
              - CcHold
              - Reserved
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: externalReference
          required: false
          schema:
            type: string
        - description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          in: query
          name: paymentReference
          required: false
          schema:
            type: string
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: customerRefNumber
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerCreditNoteDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerCreditNoteDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Customer Credit Notes - ScreenId=AR301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - CustomerCreditNote
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerCreditNote_Create
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CustomerCreditNoteUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Credit Note. Method is deprecated and will be removed starting May 2021 - start using new method CustomerCreditNoteV2 endpoint.
      tags:
        - CustomerCreditNote
  "/controller/api/v1/customerCreditNote/{creditNoteNumber}":
    delete:
      description: Response Message has StatusCode NoContent if DELETE operation succeed
      operationId: CustomerCreditNote_DeleteBycreditNoteNumber
      parameters:
        - description: Identifies the Customer Credit Note to delete
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:delete
      summary: Deletes a specific Customer Credit Note
      tags:
        - CustomerCreditNote
    get:
      description: Data for Customer Credit Note
      operationId: CustomerCreditNote_GetBycreditNoteNumber
      parameters:
        - description: Identifies the Customer Credit Note
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerCreditNoteDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerCreditNoteDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Customer Credit Note
      tags:
        - CustomerCreditNote
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: CustomerCreditNote_UpdateBycreditNoteNumber
      parameters:
        - description: Identifies the Credit Note to update
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerCreditNoteUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomerCreditNoteUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CustomerCreditNoteUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CustomerCreditNoteUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CustomerCreditNoteUpdateDto"
        description: Defines the data for the Credit Note to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Credit Note
      tags:
        - CustomerCreditNote
  "/controller/api/v1/customerCreditNote/{creditNoteNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CustomerCreditNote_ReleaseDocumentBycreditNoteNumber
      parameters:
        - description: Reference number of the credit note to be released
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseCustomerCreditNoteActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseCustomerCreditNoteActionResultDto"
          description: If invoked without header erp-api-background set, operation starts in the background and 200-OK is returned with a reference. No notification is sent when action is done.
        "202":
          description: If invoked with header erp-api-background set, operation starts in the background, 202-Accepted will be returned and a webhook will be posted upon action done event.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release credit note operation
      tags:
        - CustomerCreditNote
  "/controller/api/v1/customerCreditNote/{creditNoteNumber}/action/sendToAutoInvoice":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CustomerCreditNote_SendToAutoInvoiceBycreditNoteNumber
      parameters:
        - description: Reference number of the credit note to be send to AutoInvoice
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: SendToAutoInvoice credit note operation
      tags:
        - CustomerCreditNote
  "/controller/api/v1/customerCreditNote/{creditNoteNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerCreditNote_CreateHeaderAttachmentBycreditNoteNumber
      parameters:
        - description: Identifies the credit note
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a credit note. If the file already exists, a new revision is created.
      tags:
        - CustomerCreditNote
  "/controller/api/v1/customerCreditNote/{creditNoteNumber}/print":
    get:
      description: The File is in Content of the message
      operationId: CustomerCreditNote_PrintBycreditNoteNumber
      parameters:
        - description: Identifies the customer credit note
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get the print report of a Customer Credit Note
      tags:
        - CustomerCreditNote
  "/controller/api/v1/customerCreditNote/{creditNoteNumber}/{lineNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerCreditNote_CreateLineAttachmentBycreditNoteNumberlineNumber
      parameters:
        - description: Identifies the credit note
          in: path
          name: creditNoteNumber
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a certain credit note line. If the file already exists, a new revision is created.
      tags:
        - CustomerCreditNote
  /controller/api/v1/customerCreditWriteOff:
    get:
      description: Data for Customer Credit WriteOff
      operationId: CustomerCreditWriteOff_GetAll
      parameters:
        - description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - DebitNote
              - CreditNote
              - Payment
              - VoidPayment
              - Prepayment
              - Refund
              - FinCharge
              - SmallBalanceWo
              - SmallCreditWo
              - CashSale
              - CashReturn
              - Undefined
              - NoUpdate
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: The dunning level of the document.
          in: query
          name: dunningLevel
          required: false
          schema:
            format: int32
            type: integer
        - description: The date of the closing of the financial period.
          in: query
          name: closedFinancialPeriod
          required: false
          schema:
            type: string
        - description: The date and time for when the document last released a dunning letter.
          in: query
          name: dunningLetterDateTime
          required: false
          schema:
            type: string
        - description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          in: query
          name: dunningLetterDateTimeCondition
          required: false
          schema:
            type: string
        - description: The project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: True if you want to see all dunning information regarding this document.
          in: query
          name: expandApplications
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDunningInformation
          required: false
          schema:
            type: boolean
        - description: True if you want to see all attachments regarding this document.
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: True if you want to see all VAT details regarding this document.
          in: query
          name: expandTaxDetails
          required: false
          schema:
            type: boolean
        - description: True if you want to see all information regarding the invoice address for this document.
          in: query
          name: expandInvoiceAddress
          required: false
          schema:
            type: boolean
        - description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          in: query
          name: financialPeriod
          required: false
          schema:
            type: string
        - description: The date when payment for the document is due, in accordance with the credit terms.
          in: query
          name: documentDueDate
          required: false
          schema:
            format: date-time
            type: string
        - description: The status of the document. Use the dropdown to select status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - PendingPrint
              - PendingEmail
              - CreditHold
              - CcHold
              - Reserved
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: externalReference
          required: false
          schema:
            type: string
        - description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          in: query
          name: paymentReference
          required: false
          schema:
            type: string
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: customerRefNumber
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerCreditWriteOffDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerCreditWriteOffDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Customer Credit WriteOffs - ScreenId=AR301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - CustomerCreditWriteOff
  "/controller/api/v1/customerCreditWriteOff/{creditWriteOffNumber}":
    get:
      description: Data for Customer Credit WriteOff
      operationId: CustomerCreditWriteOff_GetBycreditWriteOffNumber
      parameters:
        - description: Identifies the Customer Credit WriteOff
          in: path
          name: creditWriteOffNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerCreditWriteOffDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerCreditWriteOffDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Customer Credit WriteOff
      tags:
        - CustomerCreditWriteOff
  /controller/api/v1/customerDebitNote:
    get:
      description: Data for Customer Debit Note
      operationId: CustomerDebitNote_GetAll
      parameters:
        - description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - DebitNote
              - CreditNote
              - Payment
              - VoidPayment
              - Prepayment
              - Refund
              - FinCharge
              - SmallBalanceWo
              - SmallCreditWo
              - CashSale
              - CashReturn
              - Undefined
              - NoUpdate
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: The dunning level of the document.
          in: query
          name: dunningLevel
          required: false
          schema:
            format: int32
            type: integer
        - description: The date of the closing of the financial period.
          in: query
          name: closedFinancialPeriod
          required: false
          schema:
            type: string
        - description: The date and time for when the document last released a dunning letter.
          in: query
          name: dunningLetterDateTime
          required: false
          schema:
            type: string
        - description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          in: query
          name: dunningLetterDateTimeCondition
          required: false
          schema:
            type: string
        - description: The project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: True if you want to see all dunning information regarding this document.
          in: query
          name: expandApplications
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDunningInformation
          required: false
          schema:
            type: boolean
        - description: True if you want to see all attachments regarding this document.
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: True if you want to see all VAT details regarding this document.
          in: query
          name: expandTaxDetails
          required: false
          schema:
            type: boolean
        - description: True if you want to see all information regarding the invoice address for this document.
          in: query
          name: expandInvoiceAddress
          required: false
          schema:
            type: boolean
        - description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          in: query
          name: financialPeriod
          required: false
          schema:
            type: string
        - description: The date when payment for the document is due, in accordance with the credit terms.
          in: query
          name: documentDueDate
          required: false
          schema:
            format: date-time
            type: string
        - description: The status of the document. Use the dropdown to select status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - PendingPrint
              - PendingEmail
              - CreditHold
              - CcHold
              - Reserved
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: externalReference
          required: false
          schema:
            type: string
        - description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          in: query
          name: paymentReference
          required: false
          schema:
            type: string
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: customerRefNumber
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDebitNoteDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDebitNoteDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Customer Debit Notes - ScreenId=AR301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - CustomerDebitNote
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerDebitNote_Create
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CustomerDebitNoteUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Debit Note. Method is deprecated and will be removed starting May 2021 - start using new method CustomerDebitNoteV2 endpoint.
      tags:
        - CustomerDebitNote
  "/controller/api/v1/customerDebitNote/{debitNoteNumber}":
    get:
      description: Data for Customer Debit Note
      operationId: CustomerDebitNote_GetBydebitNoteNumber
      parameters:
        - description: Identifies the Customer Debit Note
          in: path
          name: debitNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerDebitNoteDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerDebitNoteDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Customer Debit Note
      tags:
        - CustomerDebitNote
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: CustomerDebitNote_UpdateBydebitNoteNumber
      parameters:
        - description: Identifies the Debit Note to update
          in: path
          name: debitNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerDebitNoteUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomerDebitNoteUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CustomerDebitNoteUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CustomerDebitNoteUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CustomerDebitNoteUpdateDto"
        description: Defines the data for the Debit Note to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Debit Note
      tags:
        - CustomerDebitNote
  "/controller/api/v1/customerDebitNote/{debitNoteNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CustomerDebitNote_ReleaseDocumentBydebitNoteNumber
      parameters:
        - description: Reference number of the debit note to be released
          in: path
          name: debitNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseCustomerDebitNoteActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseCustomerDebitNoteActionResultDto"
          description: If invoked without header erp-api-background set, operation starts in the background and 200-OK is returned with a reference. No notification is sent when action is done.
        "202":
          description: If invoked with header erp-api-background set, operation starts in the background, 202-Accepted will be returned and a webhook will be posted upon action done event.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release debit note operation
      tags:
        - CustomerDebitNote
  "/controller/api/v1/customerDebitNote/{debitNoteNumber}/action/sendToAutoInvoice":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CustomerDebitNote_SendToAutoInvoiceBydebitNoteNumber
      parameters:
        - description: Reference number of the debit note to be send to AutoInvoice
          in: path
          name: debitNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: SendToAutoInvoice debit note operation
      tags:
        - CustomerDebitNote
  "/controller/api/v1/customerDebitNote/{debitNoteNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerDebitNote_CreateHeaderAttachmentBydebitNoteNumber
      parameters:
        - description: Identifies the debit note
          in: path
          name: debitNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a debit note. If the file already exists, a new revision is created.
      tags:
        - CustomerDebitNote
  "/controller/api/v1/customerDebitNote/{debitNoteNumber}/print":
    get:
      description: The File is in Content of the message
      operationId: CustomerDebitNote_PrintBydebitNoteNumber
      parameters:
        - description: Identifies the customer debit note
          in: path
          name: debitNoteNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get the print report of a Customer Debit Note
      tags:
        - CustomerDebitNote
  "/controller/api/v1/customerDebitNote/{debitNoteNumber}/{lineNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerDebitNote_CreateLineAttachmentBydebitNoteNumberlineNumber
      parameters:
        - description: Identifies the debit note
          in: path
          name: debitNoteNumber
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a certain debit note line. If the file already exists, a new revision is created.
      tags:
        - CustomerDebitNote
  /controller/api/v1/customerOverdueCharge:
    get:
      description: Data for Customer Overdue Charge
      operationId: CustomerOverdueCharge_GetAll
      parameters:
        - description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - DebitNote
              - CreditNote
              - Payment
              - VoidPayment
              - Prepayment
              - Refund
              - FinCharge
              - SmallBalanceWo
              - SmallCreditWo
              - CashSale
              - CashReturn
              - Undefined
              - NoUpdate
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: The dunning level of the document.
          in: query
          name: dunningLevel
          required: false
          schema:
            format: int32
            type: integer
        - description: The date of the closing of the financial period.
          in: query
          name: closedFinancialPeriod
          required: false
          schema:
            type: string
        - description: The date and time for when the document last released a dunning letter.
          in: query
          name: dunningLetterDateTime
          required: false
          schema:
            type: string
        - description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          in: query
          name: dunningLetterDateTimeCondition
          required: false
          schema:
            type: string
        - description: The project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: True if you want to see all dunning information regarding this document.
          in: query
          name: expandApplications
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDunningInformation
          required: false
          schema:
            type: boolean
        - description: True if you want to see all attachments regarding this document.
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: True if you want to see all VAT details regarding this document.
          in: query
          name: expandTaxDetails
          required: false
          schema:
            type: boolean
        - description: True if you want to see all information regarding the invoice address for this document.
          in: query
          name: expandInvoiceAddress
          required: false
          schema:
            type: boolean
        - description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          in: query
          name: financialPeriod
          required: false
          schema:
            type: string
        - description: The date when payment for the document is due, in accordance with the credit terms.
          in: query
          name: documentDueDate
          required: false
          schema:
            format: date-time
            type: string
        - description: The status of the document. Use the dropdown to select status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - PendingPrint
              - PendingEmail
              - CreditHold
              - CcHold
              - Reserved
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: externalReference
          required: false
          schema:
            type: string
        - description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          in: query
          name: paymentReference
          required: false
          schema:
            type: string
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: customerRefNumber
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerOverdueChargeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerOverdueChargeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Customer Overdue Charges - ScreenId=AR301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - CustomerOverdueCharge
  "/controller/api/v1/customerOverdueCharge/{overdueChargeNumber}":
    get:
      description: Data for Customer Overdue Charge
      operationId: CustomerOverdueCharge_GetByoverdueChargeNumber
      parameters:
        - description: Identifies the Customer Overdue Charge
          in: path
          name: overdueChargeNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerOverdueChargeDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerOverdueChargeDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Customer Overdue Charge
      tags:
        - CustomerOverdueCharge
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: CustomerOverdueCharge_UpdateByoverdueChargeNumber
      parameters:
        - description: Identifies the Overdue Charge to update
          in: path
          name: overdueChargeNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerOverdueChargeUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomerOverdueChargeUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CustomerOverdueChargeUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CustomerOverdueChargeUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CustomerOverdueChargeUpdateDto"
        description: Defines the data for the Overdue Charge to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Overdue Charge
      tags:
        - CustomerOverdueCharge
  "/controller/api/v1/customerOverdueCharge/{overdueChargeNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CustomerOverdueCharge_ReleaseDocumentByoverdueChargeNumber
      parameters:
        - description: Reference number of the overdue charge to be released
          in: path
          name: overdueChargeNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseCustomerOverdueChargeActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseCustomerOverdueChargeActionResultDto"
          description: If invoked without header erp-api-background set, operation starts in the background and 200-OK is returned with a reference. No notification is sent when action is done.
        "202":
          description: If invoked with header erp-api-background set, operation starts in the background, 202-Accepted will be returned and a webhook will be posted upon action done event.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release overdue charge operation
      tags:
        - CustomerOverdueCharge
  "/controller/api/v1/customerOverdueCharge/{overdueChargeNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerOverdueCharge_CreateHeaderAttachmentByoverdueChargeNumber
      parameters:
        - description: Identifies the overdue charge
          in: path
          name: overdueChargeNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with an overdue charge. If the file already exists, a new revision is created.
      tags:
        - CustomerOverdueCharge
  "/controller/api/v1/customerOverdueCharge/{overdueChargeNumber}/{lineNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerOverdueCharge_CreateLineAttachmentByoverdueChargeNumberlineNumber
      parameters:
        - description: Identifies the overdue charge
          in: path
          name: overdueChargeNumber
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a certain overdue charge line. If the file already exists, a new revision is created.
      tags:
        - CustomerOverdueCharge
  /controller/api/v1/customerPayment:
    get:
      operationId: CustomerPayment_GetAllPayments
      parameters:
        - description: Payment number
          in: query
          name: paymentNbr
          required: false
          schema:
            type: string
        - description: Select Type
          in: query
          name: paymentType
          required: false
          schema:
            enum:
              - Payment
              - CreditNote
              - Prepayment
              - Refund
              - VoidPayment
              - SmallBalanceWo
              - VoidRefund
              - Undefined
            type: string
        - description: Enter Customer
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: Enter the from-value for Ref. no.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: Enter Invoice Ref Nbr
          in: query
          name: invoiceRefNbr
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: Enter field to order your records by.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PaymentDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/PaymentDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Payments. - SceenId=AR302000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - CustomerPayment
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerPayment_CreatePayment
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PaymentUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Payment
      tags:
        - CustomerPayment
  "/controller/api/v1/customerPayment/{paymentNumber}":
    get:
      operationId: CustomerPayment_GetBypaymentNumber
      parameters:
        - description: Identifies the Payment
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PaymentDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Payment
      tags:
        - CustomerPayment
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: CustomerPayment_PutBypaymentNumber
      parameters:
        - description: Identifies the Payment to update
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PaymentUpdateDto2"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Payment
      tags:
        - CustomerPayment
  "/controller/api/v1/customerPayment/{paymentNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CustomerPayment_ReleasePaymentBypaymentNumber
      parameters:
        - description: Reference number of the payment to be released
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ReleasePaymentActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release payment operation
      tags:
        - CustomerPayment
  "/controller/api/v1/customerPayment/{paymentNumber}/action/void":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CustomerPayment_VoidPaymentBypaymentNumber
      parameters:
        - description: Reference number of the payment to be released
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/VoidPaymentActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoidPaymentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/VoidPaymentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Void payment operation
      tags:
        - CustomerPayment
  /controller/api/v1/customerSalesPrice:
    get:
      operationId: CustomerSalesPrice_GetCustomerSalesPrices
      parameters:
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: priceType
          required: false
          schema:
            enum:
              - All
              - Base
              - Customer
              - CustomerPriceClass
            type: string
        - in: query
          name: priceCode
          required: false
          schema:
            type: string
        - in: query
          name: inventoryId
          required: false
          schema:
            type: string
        - in: query
          name: effectiveAsOf
          required: false
          schema:
            format: date-time
            type: string
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerSalesPriceDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerSalesPriceDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Customer Sales Prices - ScreenId=AR202000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - CustomerSalesPrice
  /controller/api/v1/customerdocument:
    get:
      description: Data for Customer Document
      operationId: CustomerDocument_GetAllDocuments
      parameters:
        - description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - DebitNote
              - CreditNote
              - Payment
              - VoidPayment
              - Prepayment
              - Refund
              - FinCharge
              - SmallBalanceWo
              - SmallCreditWo
              - CashSale
              - CashReturn
              - Undefined
              - NoUpdate
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: The dunning level of the document.
          in: query
          name: dunningLevel
          required: false
          schema:
            format: int32
            type: integer
        - description: The date of the closing of the financial period.
          in: query
          name: closedFinancialPeriod
          required: false
          schema:
            type: string
        - description: The date and time for when the document last released a dunning letter.
          in: query
          name: dunningLetterDateTime
          required: false
          schema:
            type: string
        - description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          in: query
          name: dunningLetterDateTimeCondition
          required: false
          schema:
            type: string
        - description: The project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: True if you want to see all dunning information regarding this document.
          in: query
          name: expandApplications
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDunningInformation
          required: false
          schema:
            type: boolean
        - description: True if you want to see all attachments regarding this document.
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: True if you want to see all VAT details regarding this document.
          in: query
          name: expandTaxDetails
          required: false
          schema:
            type: boolean
        - description: True if you want to see all information regarding the invoice address for this document.
          in: query
          name: expandInvoiceAddress
          required: false
          schema:
            type: boolean
        - description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          in: query
          name: financialPeriod
          required: false
          schema:
            type: string
        - description: The date when payment for the document is due, in accordance with the credit terms.
          in: query
          name: documentDueDate
          required: false
          schema:
            format: date-time
            type: string
        - description: The status of the document. Use the dropdown to select status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - PendingPrint
              - PendingEmail
              - CreditHold
              - CcHold
              - Reserved
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: externalReference
          required: false
          schema:
            type: string
        - description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          in: query
          name: paymentReference
          required: false
          schema:
            type: string
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: customerRefNumber
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDocumentDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerDocumentDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Gets a range of Customer Documents - ScreenId=AR301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        Change log:\r

        2020-May:Added forced pagination"
      tags:
        - CustomerDocument
  /controller/api/v1/customerinvoice:
    get:
      description: Data for Customer Invoice
      operationId: CustomerInvoice_GetAll
      parameters:
        - description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - DebitNote
              - CreditNote
              - Payment
              - VoidPayment
              - Prepayment
              - Refund
              - FinCharge
              - SmallBalanceWo
              - SmallCreditWo
              - CashSale
              - CashReturn
              - Undefined
              - NoUpdate
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: The dunning level of the document.
          in: query
          name: dunningLevel
          required: false
          schema:
            format: int32
            type: integer
        - description: The date of the closing of the financial period.
          in: query
          name: closedFinancialPeriod
          required: false
          schema:
            type: string
        - description: The date and time for when the document last released a dunning letter.
          in: query
          name: dunningLetterDateTime
          required: false
          schema:
            type: string
        - description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          in: query
          name: dunningLetterDateTimeCondition
          required: false
          schema:
            type: string
        - description: The project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: True if you want to see all dunning information regarding this document.
          in: query
          name: expandApplications
          required: false
          schema:
            type: boolean
        - in: query
          name: expandDunningInformation
          required: false
          schema:
            type: boolean
        - description: True if you want to see all attachments regarding this document.
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: True if you want to see all VAT details regarding this document.
          in: query
          name: expandTaxDetails
          required: false
          schema:
            type: boolean
        - description: True if you want to see all information regarding the invoice address for this document.
          in: query
          name: expandInvoiceAddress
          required: false
          schema:
            type: boolean
        - description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          in: query
          name: financialPeriod
          required: false
          schema:
            type: string
        - description: The date when payment for the document is due, in accordance with the credit terms.
          in: query
          name: documentDueDate
          required: false
          schema:
            format: date-time
            type: string
        - description: The status of the document. Use the dropdown to select status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - PendingPrint
              - PendingEmail
              - CreditHold
              - CcHold
              - Reserved
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: externalReference
          required: false
          schema:
            type: string
        - description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          in: query
          name: paymentReference
          required: false
          schema:
            type: string
        - description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          in: query
          name: customerRefNumber
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerInvoiceDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerInvoiceDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Invoices - ScreenId=AR301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        Change log:\r

        2020-May:Added forced pagination"
      tags:
        - CustomerInvoice
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerInvoice_Create
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CustomerInvoiceUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create an Invoice. Method is deprecated and will be removed starting May 2021 - start using new method CustomerInvoiceV2 endpoint.
      tags:
        - CustomerInvoice
  /controller/api/v1/customerinvoice/worktypes:
    get:
      description: Data for the Work Type
      operationId: CustomerInvoice_GetWorkTypes
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/WorkTypeDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/WorkTypeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/WorkTypeDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/WorkTypeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all Work Types
      tags:
        - CustomerInvoice
  "/controller/api/v1/customerinvoice/{invoiceNumber}":
    delete:
      description: Response Message has StatusCode NoContent if DELETE operation succeed
      operationId: CustomerInvoice_DeleteByinvoiceNumber
      parameters:
        - description: Identifies the Customer Invoice to delete
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:delete
      summary: Deletes a specific Customer Invoice
      tags:
        - CustomerInvoice
    get:
      description: Data for Customer Invoice
      operationId: CustomerInvoice_GetByinvoiceNumber
      parameters:
        - description: Identifies the Invoice
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerInvoiceDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerInvoiceDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Invoice
      tags:
        - CustomerInvoice
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: CustomerInvoice_UpdateByinvoiceNumber
      parameters:
        - description: Identifies the Invoice to update
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerInvoiceUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomerInvoiceUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CustomerInvoiceUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CustomerInvoiceUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CustomerInvoiceUpdateDto"
        description: Defines the data for the Invoice to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Invoice
      tags:
        - CustomerInvoice
  "/controller/api/v1/customerinvoice/{invoiceNumber}/action/correct":
    post:
      description: Response Message has StatusCode BadRequest or InternalServerError if POST operation failed
      operationId: CustomerInvoice_CorrectInvoiceByinvoiceNumber
      parameters:
        - description: ""
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CorrectArDocumentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/CorrectArDocumentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CorrectArDocumentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/CorrectArDocumentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Create a correction document for a released document
      tags:
        - CustomerInvoice
  "/controller/api/v1/customerinvoice/{invoiceNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CustomerInvoice_ReleaseInvoiceByinvoiceNumber
      parameters:
        - description: Reference number of the invoice to be released
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseInvoiceActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseInvoiceActionResultDto"
          description: If invoked without header erp-api-background set, operation starts in the background and 200-OK is returned with a reference. No notification is sent when action is done.
        "202":
          description: If invoked with header erp-api-background set, operation starts in the background, 202-Accepted will be returned and a webhook will be posted upon action done event.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release invoice operation
      tags:
        - CustomerInvoice
  "/controller/api/v1/customerinvoice/{invoiceNumber}/action/reverse":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CustomerInvoice_ReverseInvoiceByinvoiceNumber
      parameters:
        - description: Reference number of the released invoice to be reversed
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ReverseInvoiceActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReverseInvoiceActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReverseInvoiceActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Reverse an Invoice
      tags:
        - CustomerInvoice
  "/controller/api/v1/customerinvoice/{invoiceNumber}/action/reverseandapplytonote":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CustomerInvoice_ReverseInvoiceAndApplyToNoteByinvoiceNumber
      parameters:
        - description: Reference number of the released invoice to be reversed and applied to Memo
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ReverseInvoiceActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Reverse and Apply to Note
      tags:
        - CustomerInvoice
  "/controller/api/v1/customerinvoice/{invoiceNumber}/action/sendToAutoInvoice":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: CustomerInvoice_SendToAutoInvoiceByinvoiceNumber
      parameters:
        - description: Reference number of the invoice to be send to AutoInvoice
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/SendToAutoInvoiceArDocumentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: SendToAutoInvoice invoice operation
      tags:
        - CustomerInvoice
  "/controller/api/v1/customerinvoice/{invoiceNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerInvoice_CreateHeaderAttachmentByinvoiceNumber
      parameters:
        - description: Identifies the invoice
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with an invoice. If the file already exists, a new revision is created.
      tags:
        - CustomerInvoice
  "/controller/api/v1/customerinvoice/{invoiceNumber}/{lineNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerInvoice_CreateLineAttachmentByinvoiceNumberlineNumber
      parameters:
        - description: Identifies the invoice
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a certain invoice line. If the file already exists, a new revision is created.
      tags:
        - CustomerInvoice
  "/controller/api/v1/customerinvoice/{refNbr}/print":
    get:
      description: The File is in Content of the message
      operationId: CustomerInvoice_PrintInvoiceByrefNbr
      parameters:
        - description: Identifies the customer invoice
          in: path
          name: refNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get the print report of a Customer Invoice
      tags:
        - CustomerInvoice
  "/controller/api/v1/customerinvoice/{refNbr}/rotrut":
    get:
      description: Data for the Rot Rut
      operationId: CustomerInvoice_GetRotRutByrefNbr
      parameters:
        - description: Identify the customer invoice for which to return data
          in: path
          name: refNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RotRutDto"
            text/json:
              schema:
                $ref: "#/components/schemas/RotRutDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get Rot Rut informations for a Customer Invoice
      tags:
        - CustomerInvoice
  /controller/api/v1/customerpaymentmethod:
    get:
      operationId: CustomerPaymentMethod_GetCustomerPaymentMethods
      parameters:
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerPaymentMethodsDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerPaymentMethodsDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get Customer payment methods
      tags:
        - CustomerPaymentMethod
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerPaymentMethod_CreateCustomerPaymentMethod
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPaymentMethodCreateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomerPaymentMethodCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CustomerPaymentMethodCreateDto"
        description: Defines the data for the Customer payment method to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Customer payment method
      tags:
        - CustomerPaymentMethod
  "/controller/api/v1/customerpaymentmethod/{customerId}":
    get:
      operationId: CustomerPaymentMethod_GetCustomerPaymentMethodsBycustomerId
      parameters:
        - description: Identifies the Customer
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerPaymentMethodDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CustomerPaymentMethodDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all Customer payment methods for one specific customer. ScreenId=AR303010 and AR303000
      tags:
        - CustomerPaymentMethod
  "/controller/api/v1/customerpaymentmethod/{customerId}/{customerPaymentMethodId}":
    get:
      operationId: CustomerPaymentMethod_GetCustomerPaymentMethodBycustomerIdcustomerPaymentMethodId
      parameters:
        - description: Identifies the Customer
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Identifies the Customer payment method
          in: path
          name: customerPaymentMethodId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPaymentMethodDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerPaymentMethodDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get one specific Customer payment method for one specific customer. ScreenId=AR303010
      tags:
        - CustomerPaymentMethod
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: CustomerPaymentMethod_UpdateCustomerPaymentMethodBycustomerIdcustomerPaymentMethodId
      parameters:
        - description: Identifies the Customer
          in: path
          name: customerId
          required: true
          schema:
            type: string
        - description: Identifies the Customer payment method to update
          in: path
          name: customerPaymentMethodId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPaymentMethodUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CustomerPaymentMethodUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CustomerPaymentMethodUpdateDto"
        description: Defines the data for the Customer payment method to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Customer payment method
      tags:
        - CustomerPaymentMethod
  /controller/api/v1/deferralCode:
    get:
      operationId: DeferralCode_GetDeferralCodes
      parameters:
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DeferralCodeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/DeferralCodeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of DeferralCodes - ScreenId=DR2020PL\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - DeferralCode
  "/controller/api/v1/deferralCode/{deferralCodeId}":
    get:
      operationId: DeferralCode_GetDeferralCodeBydeferralCodeId
      parameters:
        - description: Identifies the DeferralCode
          in: path
          name: deferralCodeId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeferralCodeDto"
            text/json:
              schema:
                $ref: "#/components/schemas/DeferralCodeDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific DeferralCode
      tags:
        - DeferralCode
  /controller/api/v1/department:
    get:
      operationId: Department_GetAllDepartmentDtos
      parameters:
        - description: Greater-than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DepartmentDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/DepartmentDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/DepartmentDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/DepartmentDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of departments - ScreenId=EP201500
      tags:
        - Department
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Department_CreateDepartment
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepartmentUpdateBaseDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DepartmentUpdateBaseDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/DepartmentUpdateBaseDto"
          text/json:
            schema:
              $ref: "#/components/schemas/DepartmentUpdateBaseDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/DepartmentUpdateBaseDto"
        description: Defines the data for the department to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates a department
      tags:
        - Department
  "/controller/api/v1/department/{departmentId}":
    get:
      operationId: Department_GetDepartmentBydepartmentId
      parameters:
        - description: Identifies the department
          in: path
          name: departmentId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepartmentDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/DepartmentDto"
            text/json:
              schema:
                $ref: "#/components/schemas/DepartmentDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/DepartmentDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific department
      tags:
        - Department
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Department_UpdateDepartmentBydepartmentId
      parameters:
        - description: Identifies the department to update
          in: path
          name: departmentId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DepartmentUpdateBaseDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DepartmentUpdateBaseDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/DepartmentUpdateBaseDto"
          text/json:
            schema:
              $ref: "#/components/schemas/DepartmentUpdateBaseDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/DepartmentUpdateBaseDto"
        description: The data to update the department with
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates a specific department
      tags:
        - Department
  /controller/api/v1/dimension:
    get:
      operationId: Dimension_GetDimensionList
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a list of all Dimension names/IDs ScreenId=CS202000
      tags:
        - Dimension
  "/controller/api/v1/dimension/{dimensionId}":
    get:
      operationId: Dimension_GetDimensionBydimensionId
      parameters:
        - description: Identifies the dimension
          in: path
          name: dimensionId
          required: true
          schema:
            type: string
        - description: Greater-than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.        ///
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Flag can be used to return data without the segment values.
          in: query
          name: expandSegmentsValues
          required: false
          schema:
            type: boolean
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DtoDimension"
            application/xml:
              schema:
                $ref: "#/components/schemas/DtoDimension"
            text/json:
              schema:
                $ref: "#/components/schemas/DtoDimension"
            text/xml:
              schema:
                $ref: "#/components/schemas/DtoDimension"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Dimension
      tags:
        - Dimension
  "/controller/api/v1/dimension/{dimensionId}/{segmentId}":
    get:
      operationId: Dimension_GetSegmentBydimensionIdsegmentId
      parameters:
        - description: Identifies the Dimension
          in: path
          name: dimensionId
          required: true
          schema:
            type: string
        - description: Identifies the Segment
          in: path
          name: segmentId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DtoSegment"
            application/xml:
              schema:
                $ref: "#/components/schemas/DtoSegment"
            text/json:
              schema:
                $ref: "#/components/schemas/DtoSegment"
            text/xml:
              schema:
                $ref: "#/components/schemas/DtoSegment"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Segment for a specific Dimension
      tags:
        - Dimension
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Dimension_UpdateSegmentBydimensionIdsegmentId
      parameters:
        - description: Identifies the Dimension for which the Segment is defined
          in: path
          name: dimensionId
          required: true
          schema:
            type: string
        - description: Identifies the Segment
          in: path
          name: segmentId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DtoSegmentUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DtoSegmentUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/DtoSegmentUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/DtoSegmentUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/DtoSegmentUpdateDto"
        description: Defines the data for the Segment to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a Segment
      tags:
        - Dimension
  "/controller/api/v1/dimension/{dimensionId}/{segmentId}/publicid/{publicId}":
    get:
      operationId: Dimension_GetSegmentValueBydimensionIdsegmentIdpublicId
      parameters:
        - description: Identifies the Dimension
          in: path
          name: dimensionId
          required: true
          schema:
            type: string
        - description: Identifies the Segment
          in: path
          name: segmentId
          required: true
          schema:
            format: int32
            type: integer
        - description: Identifies the SegmentValue by its publicId
          in: path
          name: publicId
          required: true
          schema:
            format: uuid
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DtoSegmentValue"
            application/xml:
              schema:
                $ref: "#/components/schemas/DtoSegmentValue"
            text/json:
              schema:
                $ref: "#/components/schemas/DtoSegmentValue"
            text/xml:
              schema:
                $ref: "#/components/schemas/DtoSegmentValue"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific SegmentValue for a specific Segment for a specific Dimension
      tags:
        - Dimension
  "/controller/api/v1/dimension/{dimensionId}/{segmentId}/{valueId}":
    get:
      operationId: Dimension_GetSegmentValueBydimensionIdsegmentIdvalueId
      parameters:
        - description: Identifies the Dimension
          in: path
          name: dimensionId
          required: true
          schema:
            type: string
        - description: Identifies the Segment
          in: path
          name: segmentId
          required: true
          schema:
            format: int32
            type: integer
        - description: Identifies the SegmentValue by Id. Must be Base64 encoded.
          in: path
          name: valueId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DtoSegmentValue"
            application/xml:
              schema:
                $ref: "#/components/schemas/DtoSegmentValue"
            text/json:
              schema:
                $ref: "#/components/schemas/DtoSegmentValue"
            text/xml:
              schema:
                $ref: "#/components/schemas/DtoSegmentValue"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific SegmentValue for a specific Segment for a specific Dimension
      tags:
        - Dimension
  /controller/api/v1/discount:
    get:
      operationId: Discount_GetDiscounts
      parameters:
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: System retrieved information for created date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: discountCode
          required: false
          schema:
            type: string
        - in: query
          name: series
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfDiscountDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfDiscountDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of discounts - ScreenId=AR209500
      tags:
        - Discount
    post:
      operationId: Discount_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DiscountUpdateDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      tags:
        - Discount
  "/controller/api/v1/discount/{discountCode}/{series}":
    delete:
      operationId: Discount_DeleteBydiscountCodeseries
      parameters:
        - in: path
          name: discountCode
          required: true
          schema:
            type: string
        - in: path
          name: series
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:delete
      tags:
        - Discount
    put:
      operationId: Discount_PutBydiscountCodeseries
      parameters:
        - in: path
          name: discountCode
          required: true
          schema:
            type: string
        - in: path
          name: series
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DiscountUpdateDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      tags:
        - Discount
  "/controller/api/v1/discount/{discountCode}/{series}/action/updateDiscounts":
    post:
      operationId: Discount_UpdateDiscountsBydiscountCodeseries
      parameters:
        - in: path
          name: discountCode
          required: true
          schema:
            type: string
        - in: path
          name: series
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDiscountsActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/UpdateDiscountsActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/UpdateDiscountsActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateDiscountsActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      tags:
        - Discount
  "/controller/api/v1/discount/{discountCode}/{series}/{filerDate}/action/updateDiscounts":
    post:
      operationId: Discount_UpdateDiscountsBydiscountCodeseriesfilerDate
      parameters:
        - in: path
          name: discountCode
          required: true
          schema:
            type: string
        - in: path
          name: series
          required: true
          schema:
            type: string
        - in: query
          name: filterDate
          required: true
          schema:
            format: date-time
            type: string
        - in: path
          name: filerDate
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDiscountsActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/UpdateDiscountsActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/UpdateDiscountsActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateDiscountsActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      tags:
        - Discount
  /controller/api/v1/discountCode:
    get:
      operationId: DiscountCode_GetDiscountCodes
      parameters:
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: System retrieved information for created date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: discountCode
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfDiscountCodeDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfDiscountCodeDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of discount codes - ScreenId=AR209000
      tags:
        - DiscountCode
  /controller/api/v1/earningtype:
    get:
      operationId: EarningType_GetAllEarningTypeDtos
      parameters:
        - description: Greater-than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/EarningTypeDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/EarningTypeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/EarningTypeDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/EarningTypeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of earningtypes - ScreenId=EP102000
      tags:
        - EarningType
  "/controller/api/v1/earningtype/{typeCd}":
    get:
      operationId: EarningType_GetEarningTypeBytypeCd
      parameters:
        - description: Identifies the earning type
          in: path
          name: typeCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EarningTypeDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/EarningTypeDto"
            text/json:
              schema:
                $ref: "#/components/schemas/EarningTypeDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/EarningTypeDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific earning type
      tags:
        - EarningType
  /controller/api/v1/employee:
    get:
      operationId: Employee_GetAllEmployees
      parameters:
        - description: If the employee is linked to a user.
          in: query
          name: linkedToUser
          required: false
          schema:
            type: boolean
        - description: Greater-than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/EmployeeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/EmployeeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of employees - ScreenId=EP203000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        Change log:\r

        2021-October:Added forced pagination"
      tags:
        - Employee
    post:
      operationId: Employee_CreateEmployee
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployeeCreateDTO"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/EmployeeCreateDTO"
          application/xml:
            schema:
              $ref: "#/components/schemas/EmployeeCreateDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/EmployeeCreateDTO"
          text/xml:
            schema:
              $ref: "#/components/schemas/EmployeeCreateDTO"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      tags:
        - Employee
  "/controller/api/v1/employee/action/changeEmployeeCd/{internalId}":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: Employee_ChangeEmployeeNrActionByinternalId
      parameters:
        - description: Internal identifier of the employee for which the employee Nr will be changed
          in: path
          name: internalId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeEmployeeNrActionDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ChangeEmployeeNrActionDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ChangeEmployeeNrActionDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ChangeEmployeeNrActionDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ChangeEmployeeNrActionDto"
        description: Defines the new employee Nr for the employee
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeEmployeeNrActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ChangeEmployeeNrActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ChangeEmployeeNrActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ChangeEmployeeNrActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates the EmployeeNr for the specified employee
      tags:
        - Employee
  "/controller/api/v1/employee/{employeeCd}":
    get:
      operationId: Employee_GetEmployeeByemployeeCd
      parameters:
        - description: Identifies the employee
          in: path
          name: employeeCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmployeeDto"
            text/json:
              schema:
                $ref: "#/components/schemas/EmployeeDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific employee
      tags:
        - Employee
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Employee_PutByemployeeCd
      parameters:
        - description: Identifies the employee to update
          in: path
          name: employeeCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployeeUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/EmployeeUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/EmployeeUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/EmployeeUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/EmployeeUpdateDto"
        description: The data to update for the employee
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates a specific employee
      tags:
        - Employee
  "/controller/api/v1/employee/{employeeCd}/expenseClaim":
    get:
      operationId: Employee_GetEmployeeExpenseClaimsByemployeeCd
      parameters:
        - description: Identifies the employee
          in: path
          name: employeeCd
          required: true
          schema:
            type: string
        - description: The status of the document.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - PendingApproval
              - Approved
              - Rejected
              - Released
            type: string
        - description: The date of the document
          in: query
          name: date
          required: false
          schema:
            format: date-time
            type: string
        - description: The customer from the document
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: Identifies the department
          in: query
          name: departmentId
          required: false
          schema:
            type: string
        - description: Greater-than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExpenseClaimDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExpenseClaimDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get expense claims for a specific employee
      tags:
        - Employee
  "/controller/api/v1/employee/{employeeCd}/expenseReceipt":
    get:
      operationId: Employee_GetEmployeeExpenseReceiptsByemployeeCd
      parameters:
        - description: Identifies the employee
          in: path
          name: employeeCd
          required: true
          schema:
            type: string
        - description: The date of the document
          in: query
          name: date
          required: false
          schema:
            type: string
        - in: query
          name: dateCondition
          required: false
          schema:
            type: string
        - description: Identifies the inventory item from the document
          in: query
          name: inventory
          required: false
          schema:
            type: string
        - description: Identifies the project from the document
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: Identifies the employee from the document
          in: query
          name: claimedBy
          required: false
          schema:
            type: string
        - description: Filter on Task ID.
          in: query
          name: projectTask
          required: false
          schema:
            type: string
        - description: If the document is invoiceable
          in: query
          name: invoiceable
          required: false
          schema:
            type: boolean
        - description: The status of the document.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Open
              - Pending
              - Approved
              - Rejected
              - Released
            type: string
        - description: Identifies the customer from the document
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExpenseReceiptDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExpenseReceiptDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get expense receipts for a specific employee
      tags:
        - Employee
  "/controller/api/v1/employee/{employeeCd}/timecards":
    get:
      operationId: Employee_GetEmployeeTimeCardsByemployeeCd
      parameters:
        - description: Identifies the employee
          in: path
          name: employeeCd
          required: true
          schema:
            type: string
        - description: The status of the document.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Open
              - Approved
              - Rejected
              - Released
            type: string
        - description: Identifies the week number of the time card
          in: query
          name: week
          required: false
          schema:
            type: string
        - description: Identifies the type of the time card (Normal, Corrected, NormalCorrected)
          in: query
          name: type
          required: false
          schema:
            enum:
              - Normal
              - Correction
              - NormalCorrected
            type: string
        - description: Greater-than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TimeCardDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/TimeCardDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific employee time cards
      tags:
        - Employee
  /controller/api/v1/expenseClaim:
    get:
      operationId: ExpenseClaim_GetAll
      parameters:
        - description: The status of the document.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - PendingApproval
              - Approved
              - Rejected
              - Released
            type: string
        - description: The date of the document
          in: query
          name: date
          required: false
          schema:
            format: date-time
            type: string
        - description: The customer from the document
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: Identifies the department
          in: query
          name: departmentId
          required: false
          schema:
            type: string
        - description: Greater-than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExpenseClaimDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExpenseClaimDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Expense Claims, a filter needs to be specified. ScreenId=EP301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        Change log:\r

        2021-October:Added forced pagination"
      tags:
        - ExpenseClaim
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: ExpenseClaim_CreateExpenseClaim
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpenseClaimUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ExpenseClaimUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ExpenseClaimUpdateDto"
        description: Defines the data for the ExpenseClaim to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create an ExpenseClaim
      tags:
        - ExpenseClaim
  "/controller/api/v1/expenseClaim/{expenseClaimNbr}":
    delete:
      description: Response Message has StatusCode NoContent if DELETE operation succeed
      operationId: ExpenseClaim_DeleteByexpenseClaimNbr
      parameters:
        - description: Identifies the ExpenseClaim to delete
          in: path
          name: expenseClaimNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:delete
      summary: Deletes a specific ExpenseClaim
      tags:
        - ExpenseClaim
    get:
      operationId: ExpenseClaim_GetExpenseClaimByexpenseClaimNbr
      parameters:
        - description: Identifies the expense claim
          in: path
          name: expenseClaimNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseClaimDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpenseClaimDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Expense Claim
      tags:
        - ExpenseClaim
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: ExpenseClaim_PutByexpenseClaimNbr
      parameters:
        - description: Identifies the ExpenseClaim to update
          in: path
          name: expenseClaimNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpenseClaimUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ExpenseClaimUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ExpenseClaimUpdateDto"
        description: Defines the data for the ExpenseClaim to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific ExpenseClaim
      tags:
        - ExpenseClaim
  "/controller/api/v1/expenseClaim/{expenseClaim}/action/approval":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: ExpenseClaim_SendExpenseClaimToApprovalByexpenseClaim
      parameters:
        - description: Reference number of the Expense Claim to be sent to approval
          in: path
          name: expenseClaim
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendExpenseClaimToApprovalActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/SendExpenseClaimToApprovalActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SendExpenseClaimToApprovalActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/SendExpenseClaimToApprovalActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Send Expense Claim to approval
      tags:
        - ExpenseClaim
  "/controller/api/v1/expenseClaim/{expenseClaim}/action/hold":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: ExpenseClaim_PutExpenseClaimOnHoldByexpenseClaim
      parameters:
        - description: Reference number of the ExpenseClaim to be put on hold
          in: path
          name: expenseClaim
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutExpenseClaimOnHoldActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/PutExpenseClaimOnHoldActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PutExpenseClaimOnHoldActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/PutExpenseClaimOnHoldActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Put ExpenseClaim on hold
      tags:
        - ExpenseClaim
  "/controller/api/v1/expenseClaim/{expenseClaim}/action/submit":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: ExpenseClaim_SubmitExpenseClaimByexpenseClaim
      parameters:
        - description: Reference number of the Expense Claim to be submitted
          in: path
          name: expenseClaim
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmitExpenseClaimActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubmitExpenseClaimActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SubmitExpenseClaimActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/SubmitExpenseClaimActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Submit Expense Claim operation
      tags:
        - ExpenseClaim
  /controller/api/v1/expenseReceipt:
    get:
      operationId: ExpenseReceipt_GetAll
      parameters:
        - description: The date of the document
          in: query
          name: date
          required: false
          schema:
            type: string
        - in: query
          name: dateCondition
          required: false
          schema:
            type: string
        - description: Identifies the inventory item from the document
          in: query
          name: inventory
          required: false
          schema:
            type: string
        - description: Identifies the project from the document
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: Identifies the employee from the document
          in: query
          name: claimedBy
          required: false
          schema:
            type: string
        - description: Filter on Task ID.
          in: query
          name: projectTask
          required: false
          schema:
            type: string
        - description: If the document is invoiceable
          in: query
          name: invoiceable
          required: false
          schema:
            type: boolean
        - description: The status of the document.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Open
              - Pending
              - Approved
              - Rejected
              - Released
            type: string
        - description: Identifies the customer from the document
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExpenseReceiptDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExpenseReceiptDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Expense Receipts, a filter needs to be specified. ScreenId=EP301020
      tags:
        - ExpenseReceipt
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: ExpenseReceipt_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ExpenseReceiptUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Expense Receipt
      tags:
        - ExpenseReceipt
  "/controller/api/v1/expenseReceipt/{receiptNumber}":
    delete:
      description: Response Message has StatusCode NoContent if DELETE operation succeed
      operationId: ExpenseReceipt_DeleteByreceiptNumber
      parameters:
        - description: Identifies the Expense Receipt to delete
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:delete
      summary: Deletes a specific Expense Receipt
      tags:
        - ExpenseReceipt
    get:
      operationId: ExpenseReceipt_GetByreceiptNumber
      parameters:
        - description: Identifies the ExpenseReceipt
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseReceiptDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ExpenseReceiptDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific ExpenseReceipt
      tags:
        - ExpenseReceipt
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: ExpenseReceipt_PutByreceiptNumber
      parameters:
        - description: Identifies the ExpenseReceipt
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ExpenseReceiptUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a Expense Receipt
      tags:
        - ExpenseReceipt
  "/controller/api/v1/expenseReceipt/{receiptNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: ExpenseReceipt_CreateAttachmentByreceiptNumber
      parameters:
        - description: Identifies the credit note
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with an expense receipt. If the file already exists, a new revision is created.
      tags:
        - ExpenseReceipt
  /controller/api/v1/financialPeriod:
    get:
      operationId: FinancialPeriod_GetAll
      parameters:
        - description: Enter the year or year-period lower than the first period or year you want, format YYYY or YYYYPP
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FinancialPeriodDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/FinancialPeriodDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/FinancialPeriodDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/FinancialPeriodDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Financial Periods - ScreenId=GL201000
      tags:
        - FinancialPeriod
  "/controller/api/v1/financialPeriod/{financialPeriodId}":
    get:
      operationId: FinancialPeriod_GetByfinancialPeriodId
      parameters:
        - description: Returns the financial period for the specified FinancialPeriodId, format YYYYPP
          in: path
          name: financialPeriodId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinancialPeriodDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/FinancialPeriodDto"
            text/json:
              schema:
                $ref: "#/components/schemas/FinancialPeriodDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/FinancialPeriodDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Financial Period - ScreenId=GL201000
      tags:
        - FinancialPeriod
  /controller/api/v1/fixedAsset:
    get:
      operationId: FixedAsset_GetAll
      parameters:
        - description: Fixed Asset ID that identifies the asset.
          in: query
          name: assetID
          required: false
          schema:
            type: string
        - description: View all fixed assets with this Fixed Asset Class ID.
          in: query
          name: classID
          required: false
          schema:
            type: string
        - description: "View all fixed assets with this Status. Available statuses are: Active, Disposed, FullyDepriciated, Hold, Reversed, Suspended."
          in: query
          name: status
          required: false
          schema:
            enum:
              - Active
              - Disposed
              - FullyDepreciated
              - Hold
              - Reversed
              - Suspended
            type: string
        - description: "From 'Placed in service date' inclusive. Date format: YYYY-MM-DD."
          in: query
          name: fromDate
          required: false
          schema:
            format: date-time
            type: string
        - description: "To 'Placed in service date' inclusive. Date format: YYYY-MM-DD."
          in: query
          name: toDate
          required: false
          schema:
            format: date-time
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Set to True to include accounts and subaccounts. Default value is False
          in: query
          name: expandAccounts
          required: false
          schema:
            type: boolean
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FixedAssetDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/FixedAssetDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Fixed Assets - Screen ID:FA303000
      tags:
        - FixedAsset
  "/controller/api/v1/fixedAsset/{FixedAssetID}":
    get:
      operationId: FixedAsset_GetByFixedAssetID
      parameters:
        - description: Identifies the fixed asset
          in: path
          name: FixedAssetID
          required: true
          schema:
            type: string
        - description: Set to True to include accounts and subaccounts. Default value is False
          in: query
          name: ExpandAccounts
          required: false
          schema:
            type: boolean
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FixedAssetDto"
            text/json:
              schema:
                $ref: "#/components/schemas/FixedAssetDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Fixed Asset - Screen ID:FA303000
      tags:
        - FixedAsset
  /controller/api/v1/fixedAssetClass:
    get:
      operationId: FixedAssetClass_GetAll
      parameters:
        - description: Fixed Asset Class ID that identifies the fixed asset class.
          in: query
          name: classID
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FixedAssetClassDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/FixedAssetClassDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Fixed Asset Classes - Screen ID:FA201000
      tags:
        - FixedAssetClass
  "/controller/api/v1/fixedAssetClass/{ClassID}":
    get:
      operationId: FixedAssetClass_GetByClassID
      parameters:
        - description: ""
          in: path
          name: ClassID
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FixedAssetClassDto"
            text/json:
              schema:
                $ref: "#/components/schemas/FixedAssetClassDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Fixed Asset Class - Screen ID:FA201000
      tags:
        - FixedAssetClass
  /controller/api/v1/fixedAssetPropertyTaxGroup:
    get:
      operationId: FixedAssetPropertyTaxGroup_GetAll
      parameters:
        - description: Property Tax ID that identifies the property tax group.
          in: query
          name: propertyTaxID
          required: false
          schema:
            type: string
        - description: Set to True to select active fixed asset property tax groups.
          in: query
          name: active
          required: false
          schema:
            type: boolean
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FixedAssetPropertyTaxDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/FixedAssetPropertyTaxDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Fixed Asset Property Tax Groups - Screen ID: FA209000"
      tags:
        - FixedAssetPropertyTaxGroup
  "/controller/api/v1/fixedAssetPropertyTaxGroup/{PropertyTaxID}":
    get:
      operationId: FixedAssetPropertyTaxGroup_GetByPropertyTaxID
      parameters:
        - description: ""
          in: path
          name: PropertyTaxID
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FixedAssetPropertyTaxDto"
            text/json:
              schema:
                $ref: "#/components/schemas/FixedAssetPropertyTaxDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a specific Fixed Asset Property Tax Group - Screen ID: FA209000"
      tags:
        - FixedAssetPropertyTaxGroup
  /controller/api/v1/fixedAssetTransaction:
    get:
      operationId: FixedAssetTransaction_GetAll
      parameters:
        - description: View all transactions connected to this Reference number.
          in: query
          name: refNo
          required: false
          schema:
            type: string
        - description: View all transactions connected to this Asset ID.
          in: query
          name: assetID
          required: false
          schema:
            type: string
        - description: View all transactions in this Book ID.
          in: query
          name: bookID
          required: false
          schema:
            type: string
        - description: "View all transactions from and including this Period. Format: YYYYMM."
          in: query
          name: fromPeriod
          required: false
          schema:
            type: string
        - description: "View all transactions to and including this Period. Format: YYYYMM."
          in: query
          name: toPeriod
          required: false
          schema:
            type: string
        - description: View all transactions for this Account ID.
          in: query
          name: accountID
          required: false
          schema:
            type: string
        - description: View all transactions for this Sub Account ID.
          in: query
          name: subAccountID
          required: false
          schema:
            type: string
        - description: "View all transactions with this Status. Available statuses: Balanced, OnHold, Posted and UnPosted."
          in: query
          name: status
          required: false
          schema:
            enum:
              - Balanced
              - OnHold
              - Posted
              - Unposted
            type: string
        - description: "View all transactions with this Transaction Type. Available types: PurchasingPlus, PurchasingMinus, DepreciationPlus, DepreciationMinus, CalculatedPlus, CalculatedMinu,SalePlus, SaleMinus,TransferPurchasing, TransferDepreciation, ReconciliationPlus, ReconciliationMinus, PurchasingDisposal, PurchasingReversal, AdjustingDeprPlus and AdjustingDeprMinus."
          in: query
          name: transactionType
          required: false
          schema:
            enum:
              - PurchasingPlus
              - PurchasingMinus
              - DepreciationPlus
              - DepreciationMinus
              - CalculatedPlus
              - CalculatedMinus
              - SalePlus
              - SaleMinus
              - TransferPurchasing
              - TransferDepreciation
              - ReconciliationPlus
              - ReconciliationMinus
              - PurchasingDisposal
              - PurchasingReversal
              - AdjustingDeprPlus
              - AdjustingDeprMinus
            type: string
        - description: "View all transactions from and including this Transaction Date. Date format: YYYY-MM-DD."
          in: query
          name: transactionFromDate
          required: false
          schema:
            type: string
        - description: "View all transactions to and including this Transaction Date inclusive. Date format: YYYY-MM-DD ."
          in: query
          name: transactionToDate
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FixedAssetTransactionDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/FixedAssetTransactionDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of transactions - Screen ID:FA301000
      tags:
        - FixedAssetTransaction
  "/controller/api/v1/fixedAssetTransaction/{RefNo}":
    get:
      operationId: FixedAssetTransaction_GetByRefNo
      parameters:
        - description: Identifies the fixed asset by reference number
          in: path
          name: RefNo
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FixedAssetTransactionDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/FixedAssetTransactionDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get transactions for a specific Asset - Screen ID:FA301000
      tags:
        - FixedAssetTransaction
  /controller/api/v1/inventory:
    get:
      description: Data for Inventory
      operationId: Inventory_GetAll
      parameters:
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size.\r

            MaxPageSize will be set to 5000 from 1. April 2022"
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: Applies for both Stock and Non-stock items.  Some fields in this filter applies only for one of these.
          in: query
          name: alternateID
          required: false
          schema:
            type: string
        - description: The Item ID.
          in: query
          name: inventoryNumber
          required: false
          schema:
            type: string
        - description: The Category ID for the sales category, found on the Attributes tab.
          in: query
          name: salesCategory
          required: false
          schema:
            format: int32
            type: integer
        - description: This filter can be used only for stock items, from the Price/cost information tab.
          in: query
          name: addCostPriceStatistics
          required: false
          schema:
            type: boolean
        - description: " Attributes (additional information) connected to the entity.\r

            \ Examples:\r

            {{base}}/inventory?attributes={\"AttributeID\":\"ValueID\",\"AttributeID\":\"ValueID\"}\r

            {{base}}/inventory?attributes={\"AttributeID\":\"ValueID1,ValueID2\"}"
          in: query
          name: attributes
          required: false
          schema:
            type: string
        - description: A brief description of the stock item from the Top part of the window.
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: System retrieved information.
          in: query
          name: availabilityLastModifiedDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: availabilityLastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: "Filter on one or more inventory types: NonStockItem, LaborItem, ServiceItem, ChargeItem, ExpenseItem, FinishedGoodItem, ComponentPartItem or SubassemblyItem"
          explode: true
          in: query
          name: inventoryTypes
          required: false
          schema:
            items:
              type: string
            type: array
        - description: "These expand fields are by default set to true, but will be changed in the future. \r

            Set to true to retrieve information about the cross-references (item ID and suppliers/customers ID for the item connected to the item."
          in: query
          name: expandCrossReference
          required: false
          schema:
            type: boolean
        - description: Set to true to retrieve information about the attachments connected to the item.
          in: query
          name: expandAttachment
          required: false
          schema:
            type: boolean
        - description: Set to true to retrieve the attribute descriptions used for the item.
          in: query
          name: expandAttribute
          required: false
          schema:
            type: boolean
        - description: Set to true to retrieve information about the warehouse connected to the item.
          in: query
          name: expandWarehouseDetail
          required: false
          schema:
            type: boolean
        - description: Set to true to retrieve information about the account information connected to the item.
          in: query
          name: expandAccountInformation
          required: false
          schema:
            type: boolean
        - description: Set to true to retrieve information about the units of measure connected to the item.
          in: query
          name: expandInventoryUnits
          required: false
          schema:
            type: boolean
        - description: Set to true to retrieve details about the supplier connected to the item.
          in: query
          name: expandSupplierDetails
          required: false
          schema:
            type: boolean
        - description: Set to true to retrieve details about the sales categories connected to the item.
          in: query
          name: expandSalesCategories
          required: false
          schema:
            type: boolean
        - description: Set to true to retrieve the note value connected to the item.
          in: query
          name: expandNote
          required: false
          schema:
            type: boolean
        - description: System retrieved information for last modified date and time for attachment.
          in: query
          name: attachmentLastModifiedDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition for attachment.
          in: query
          name: attachmentLastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "404":
          description: NotFound
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Inventory items - ScreenId=IN202000 and IN202500
      tags:
        - Inventory
    post:
      description: Response Message has StatusCode Created if POST operation succed
      operationId: Inventory_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InventoryUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/InventoryUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/InventoryUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/InventoryUpdateDto"
        description: Define the data for the inventory item to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create an inventory item
      tags:
        - Inventory
  "/controller/api/v1/inventory/action/changeInventoryNbr/{internalId}":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: Inventory_ChangeInventoryNbrActionByinternalId
      parameters:
        - description: Internal identifier of the Inventory for which the Inventory Nbr will be changed
          in: path
          name: internalId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeInventoryNbrActionDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ChangeInventoryNbrActionDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ChangeInventoryNbrActionDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ChangeInventoryNbrActionDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ChangeInventoryNbrActionDto"
        description: Defines the new Inventory number for the Inventory
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeInventoryNbrActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ChangeInventoryNbrActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ChangeInventoryNbrActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ChangeInventoryNbrActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates the InventoryNbr for the specified Inventory
      tags:
        - Inventory
  "/controller/api/v1/inventory/barcode/purchasereceipt/{receiptNbr}":
    get:
      operationId: Inventory_GetInventoryPOReceiptTakeBarCodesByreceiptNbr
      parameters:
        - description: ""
          in: path
          name: receiptNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of barcodes for a specific purchase receipt
      tags:
        - Inventory
  "/controller/api/v1/inventory/barcode/salesorder/{orderNbr}":
    get:
      operationId: Inventory_GetInventorySalesOrderBarCodesByorderNbr
      parameters:
        - description: ""
          in: path
          name: orderNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of barcodes for a specific sales order
      tags:
        - Inventory
  "/controller/api/v1/inventory/barcode/shipment/{shipmentNbr}":
    get:
      operationId: Inventory_GetInventoryShipmentBarCodesByshipmentNbr
      parameters:
        - description: ""
          in: path
          name: shipmentNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of barcodes for a specific shipment
      tags:
        - Inventory
  "/controller/api/v1/inventory/barcode/stocktake/{referenceNumber}":
    get:
      operationId: Inventory_GetInventoryStockTakeBarCodesByreferenceNumber
      parameters:
        - description: ""
          in: path
          name: referenceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/BarCodeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of barcodes for a specific stock count
      tags:
        - Inventory
  "/controller/api/v1/inventory/internal/{inventoryID}":
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Inventory_PutByinventoryID
      parameters:
        - description: Identifies the inventory item to update
          in: path
          name: inventoryID
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/InventoryUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific inventory item
      tags:
        - Inventory
  "/controller/api/v1/inventory/internal/{inventoryId}":
    get:
      operationId: Inventory_GetByinventoryId
      parameters:
        - description: Identifies the Inventory item
          in: path
          name: inventoryId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryDto"
            text/json:
              schema:
                $ref: "#/components/schemas/InventoryDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Inventory item by its internal ID
      tags:
        - Inventory
  /controller/api/v1/inventory/itemClass:
    get:
      operationId: Inventory_GetItemClasses
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ItemClassDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ItemClassDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get Inventory Item Classes
      tags:
        - Inventory
  /controller/api/v1/inventory/itemPostClass:
    get:
      operationId: Inventory_GetItemPostClasses
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PostingClassDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/PostingClassDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/PostingClassDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/PostingClassDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get Inventory Item Post Classes
      tags:
        - Inventory
  "/controller/api/v1/inventory/itemclass/{itemClassNumber}":
    get:
      operationId: Inventory_GetSpecificItemClassByitemClassNumber
      parameters:
        - in: path
          name: itemClassNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemClassDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ItemClassDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get Specific Inventory Item Class
      tags:
        - Inventory
  "/controller/api/v1/inventory/{inventoryCd}/action/updateCost":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: Inventory_UpdateCostNonStockItemByinventoryCd
      parameters:
        - description: Identifies the inventory item to update
          in: path
          name: inventoryCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCostActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/UpdateCostActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/UpdateCostActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateCostActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update Cost action on Non-Stock Item
      tags:
        - Inventory
  "/controller/api/v1/inventory/{inventoryNumber}":
    get:
      operationId: Inventory_GetByinventoryNumber
      parameters:
        - description: Identifies the Inventory item
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryDto"
            text/json:
              schema:
                $ref: "#/components/schemas/InventoryDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Inventory item
      tags:
        - Inventory
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Inventory_PutByinventoryNumber
      parameters:
        - description: Identifies the inventory item to update
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/InventoryUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific inventory item
      tags:
        - Inventory
  "/controller/api/v1/inventory/{inventoryNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Inventory_CreateInventoryAttachmentByinventoryNumber
      parameters:
        - description: Identifies the Inventory Item
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a Inventory Item. If the file already exists, a new revision is created.
      tags:
        - Inventory
  "/controller/api/v1/inventory/{inventoryNumber}/crossReferences":
    get:
      operationId: Inventory_GetInventoryCrossReferencesByinventoryNumber
      parameters:
        - description: ""
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryCrossReferenceDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryCrossReferenceDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryCrossReferenceDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryCrossReferenceDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of cross-reference for a specific inventory
      tags:
        - Inventory
    post:
      operationId: Inventory_CreateInventoryCrossReferencesByinventoryNumber
      parameters:
        - description: ""
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/InventoryCrossReferenceUpdateDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates a cross reference for a specific inventory
      tags:
        - Inventory
  "/controller/api/v1/inventory/{inventoryNumber}/crossReferences/{alternateType}/{alternateId}":
    put:
      operationId: Inventory_UpdateInventoryCrossReferencesByinventoryNumberalternateTypealternateId
      parameters:
        - description: ""
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: alternateType
          required: true
          schema:
            enum:
              - CPN
              - VPN
              - Global
              - Barcode
            type: string
        - description: ""
          in: path
          name: alternateId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/InventoryCrossReferenceUpdateDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates a specific cross reference for a specific inventory
      tags:
        - Inventory
  /controller/api/v1/inventoryReceipt:
    get:
      operationId: InventoryReceipt_GetAll
      parameters:
        - in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Released
            type: string
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryReceiptDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryReceiptDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Inventory Receipts - ScreenId=IN301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - InventoryReceipt
    post:
      description: Response Message has StatusCode Created if POST operation succed
      operationId: InventoryReceipt_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryReceiptUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InventoryReceiptUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/InventoryReceiptUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/InventoryReceiptUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/InventoryReceiptUpdateDto"
        description: Define the data for the inventory issue to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create an inventory item
      tags:
        - InventoryReceipt
  "/controller/api/v1/inventoryReceipt/{inventoryReceiptNumber}":
    get:
      operationId: InventoryReceipt_GetByinventoryReceiptNumber
      parameters:
        - description: Identifies the Inventory Issue document
          in: path
          name: inventoryReceiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryReceiptDto"
            text/json:
              schema:
                $ref: "#/components/schemas/InventoryReceiptDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Inventory Receipt document
      tags:
        - InventoryReceipt
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: InventoryReceipt_PutByinventoryReceiptNumber
      parameters:
        - description: Identifies the inventory receipt to update
          in: path
          name: inventoryReceiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryReceiptUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InventoryReceiptUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/InventoryReceiptUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/InventoryReceiptUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/InventoryReceiptUpdateDto"
        description: The data to update for inventory receipt
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific inventory item
      tags:
        - InventoryReceipt
  "/controller/api/v1/inventoryReceipt/{invoiceNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: InventoryReceipt_ReleaseDocumentByinvoiceNumber
      parameters:
        - description: Reference number of the released issue to be released
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release inventory operation
      tags:
        - InventoryReceipt
  /controller/api/v1/inventoryTransfer:
    get:
      operationId: InventoryTransfer_GetAll
      parameters:
        - description: Inventory transfer's source warehouse
          in: query
          name: warehouse
          required: false
          schema:
            type: string
        - description: Inventory transfer's target warehouse
          in: query
          name: toWarehouse
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Released
            type: string
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryTransferDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryTransferDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Inventory Transfers - ScreenId=IN304000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - InventoryTransfer
    post:
      description: Response Message has StatusCode Created if POST operation succed
      operationId: InventoryTransfer_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryTransferUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InventoryTransferUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/InventoryTransferUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/InventoryTransferUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/InventoryTransferUpdateDto"
        description: Define the data for the inventory transfer to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create an inventory transfer
      tags:
        - InventoryTransfer
  "/controller/api/v1/inventoryTransfer/{inventoryTransferNumber}":
    get:
      operationId: InventoryTransfer_GetByinventoryTransferNumber
      parameters:
        - description: Identifies the Inventory Transfer document
          in: path
          name: inventoryTransferNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryTransferDto"
            text/json:
              schema:
                $ref: "#/components/schemas/InventoryTransferDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Inventory Transfer document
      tags:
        - InventoryTransfer
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: InventoryTransfer_PutByinventoryTransferNumber
      parameters:
        - description: Identifies the inventory transfer to update
          in: path
          name: inventoryTransferNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryTransferUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InventoryTransferUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/InventoryTransferUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/InventoryTransferUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/InventoryTransferUpdateDto"
        description: The data to update for inventory transfer
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific inventory transfer
      tags:
        - InventoryTransfer
  "/controller/api/v1/inventoryTransfer/{transferNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: InventoryTransfer_ReleaseDocumentBytransferNumber
      parameters:
        - description: Reference number of the released transfer to be released
          in: path
          name: transferNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release inventory operation
      tags:
        - InventoryTransfer
  /controller/api/v1/inventoryadjustment:
    get:
      operationId: InventoryAdjustment_GetAll
      parameters:
        - in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Released
            type: string
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryAdjustmentDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryAdjustmentDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Inventory Adjustment Dto - ScreenId=IN303000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - InventoryAdjustment
    post:
      description: Response Message has StatusCode Created if POST operation succed
      operationId: InventoryAdjustment_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryAdjustmentUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InventoryAdjustmentUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/InventoryAdjustmentUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/InventoryAdjustmentUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/InventoryAdjustmentUpdateDto"
        description: Define the data for the inventory adjustment to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create an inventory item
      tags:
        - InventoryAdjustment
  "/controller/api/v1/inventoryadjustment/{adjRefNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: InventoryAdjustment_ReleaseDocumentByadjRefNumber
      parameters:
        - description: Reference number of the released adjustment to be released
          in: path
          name: adjRefNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release inventory document action
      tags:
        - InventoryAdjustment
  "/controller/api/v1/inventoryadjustment/{inventoryAdjustmentNumber}":
    get:
      operationId: InventoryAdjustment_GetByinventoryAdjustmentNumber
      parameters:
        - description: Identifies the Inventory Adjustment document
          in: path
          name: inventoryAdjustmentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryAdjustmentDto"
            text/json:
              schema:
                $ref: "#/components/schemas/InventoryAdjustmentDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Inventory Adjustment document
      tags:
        - InventoryAdjustment
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: InventoryAdjustment_PutByinventoryAdjustmentNumber
      parameters:
        - description: Identifies the inventory item to update
          in: path
          name: inventoryAdjustmentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryAdjustmentUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InventoryAdjustmentUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/InventoryAdjustmentUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/InventoryAdjustmentUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/InventoryAdjustmentUpdateDto"
        description: The data to update for inventory item
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific inventory item
      tags:
        - InventoryAdjustment
  /controller/api/v1/inventoryissue:
    get:
      operationId: InventoryIssue_GetAll
      parameters:
        - in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Released
            type: string
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryIssueDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryIssueDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Inventory items - ScreenId=IN302000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - InventoryIssue
    post:
      description: Response Message has StatusCode Created if POST operation succed
      operationId: InventoryIssue_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryIssueUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InventoryIssueUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/InventoryIssueUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/InventoryIssueUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/InventoryIssueUpdateDto"
        description: Define the data for the inventory issue to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create an inventory item
      tags:
        - InventoryIssue
  "/controller/api/v1/inventoryissue/{inventoryIssueNumber}":
    get:
      operationId: InventoryIssue_GetByinventoryIssueNumber
      parameters:
        - description: Identifies the Inventory Issue document
          in: path
          name: inventoryIssueNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventoryIssueDto"
            text/json:
              schema:
                $ref: "#/components/schemas/InventoryIssueDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Inventory Issue document
      tags:
        - InventoryIssue
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: InventoryIssue_PutByinventoryIssueNumber
      parameters:
        - description: Identifies the inventory item to update
          in: path
          name: inventoryIssueNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryIssueUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InventoryIssueUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/InventoryIssueUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/InventoryIssueUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/InventoryIssueUpdateDto"
        description: The data to update for inventory item
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific inventory item
      tags:
        - InventoryIssue
  "/controller/api/v1/inventoryissue/{invoiceNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: InventoryIssue_ReleaseDocumentByinvoiceNumber
      parameters:
        - description: Reference number of the released issue to be released
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleaseInventoryDocumentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release inventory operation
      tags:
        - InventoryIssue
  "/controller/api/v1/inventorysummary/{inventoryNumber}":
    get:
      operationId: InventorySummary_GetAllInventorySummaryByinventoryNumber
      parameters:
        - description: ""
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - in: query
          name: warehouse
          required: false
          schema:
            type: string
        - in: query
          name: location
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventorySummaryDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventorySummaryDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of InventorySummary - ScreenId=IN401000
      tags:
        - InventorySummary
  /controller/api/v1/kitassembly:
    get:
      operationId: KitAssembly_GetKitAssemblies
      parameters:
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: System retrieved information for created date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: type
          required: false
          schema:
            type: string
        - in: query
          name: refNo
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfKitAssemblyDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfKitAssemblyDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Kit Assemblies - ScreenId = IN307000
      tags:
        - KitAssembly
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: KitAssembly_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KitAssemblyUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/KitAssemblyUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/KitAssemblyUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/KitAssemblyUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/KitAssemblyUpdateDto"
        description: Defines the data for the Kit Assembly to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates a Kit Assembly
      tags:
        - KitAssembly
  "/controller/api/v1/kitassembly/{type}/{refNo}":
    delete:
      description: Response Message has StatusCode NoContent if DELETE operation succeed
      operationId: KitAssembly_DeleteBytyperefNo
      parameters:
        - description: Kit Assembly Type
          in: path
          name: type
          required: true
          schema:
            type: string
        - description: Kit Assembly Ref No
          in: path
          name: refNo
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:delete
      summary: Delete a specific Kit Assembly Document
      tags:
        - KitAssembly
    get:
      operationId: KitAssembly_GetKitAssemblyBytyperefNo
      parameters:
        - description: Kit Assembly Type
          in: path
          name: type
          required: true
          schema:
            type: string
        - description: Kit Assembly Ref No
          in: path
          name: refNo
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KitAssemblyDto"
            text/json:
              schema:
                $ref: "#/components/schemas/KitAssemblyDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a Kit Assembly - ScreenId = IN307000
      tags:
        - KitAssembly
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: KitAssembly_PutBytyperefNo
      parameters:
        - description: Kit Assembly Type
          in: path
          name: type
          required: true
          schema:
            type: string
        - description: Kit Assembly Ref No
          in: path
          name: refNo
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KitAssemblyUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/KitAssemblyUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/KitAssemblyUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/KitAssemblyUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/KitAssemblyUpdateDto"
        description: The data to update for the Kit Assembly
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates a specific Kit Assembly document
      tags:
        - KitAssembly
  "/controller/api/v1/kitassembly/{type}/{refNo}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: KitAssembly_ReleaseKitAssemblyBytyperefNo
      parameters:
        - description: Kit Assembly Type
          in: path
          name: type
          required: true
          schema:
            type: string
        - description: Kit Assembly Ref No
          in: path
          name: refNo
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release Kit Assembly
      tags:
        - KitAssembly
  /controller/api/v1/ledger:
    get:
      operationId: Ledger_GetAllLedgers
      parameters:
        - description: Excludes ledgers with value lower than entry
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LedgerDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/LedgerDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/LedgerDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/LedgerDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Ledgers - ScreenId=GL201500
      tags:
        - Ledger
  /controller/api/v1/location:
    get:
      description: Data for the Locations
      operationId: Location_GetLocations
      parameters:
        - in: query
          name: locationId
          required: false
          schema:
            type: string
        - in: query
          name: gln
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LocationDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/LocationDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Locations - ScreenId=CR303010\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        Change log:\r

        2020-May:Added forced pagination"
      tags:
        - Location
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Location_Create
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/LocationUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/LocationUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/LocationUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/LocationUpdateDto"
        description: Defines the data for the Location to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Location
      tags:
        - Location
  "/controller/api/v1/location/{bAccountId}":
    get:
      description: Data for the Locations
      operationId: Location_GetLocationsForBaccountBybAccountId
      parameters:
        - description: Identifies the BAccount
          in: path
          name: bAccountId
          required: true
          schema:
            type: string
        - in: query
          name: locationId
          required: false
          schema:
            type: string
        - in: query
          name: gln
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LocationDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/LocationDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Locations for a BAccount\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - Location
  "/controller/api/v1/location/{bAccountId}/{locationId}":
    get:
      operationId: Location_GetLocationBybAccountIdlocationId
      parameters:
        - description: Identifies the BAccount
          in: path
          name: bAccountId
          required: true
          schema:
            type: string
        - description: Identifies the Location
          in: path
          name: locationId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationDto"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Location of a Baccount
      tags:
        - Location
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Location_UpdateBybAccountIdlocationId
      parameters:
        - description: Identifies the BAccount
          in: path
          name: bAccountId
          required: true
          schema:
            type: string
        - description: Identifies the Location
          in: path
          name: locationId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/LocationUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/LocationUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/LocationUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/LocationUpdateDto"
        description: The data to update for the Location
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Location
      tags:
        - Location
  /controller/api/v1/lotserialclass:
    get:
      operationId: LotSerialClass_GetAllLotSerialClass
      parameters:
        - in: query
          name: description
          required: false
          schema:
            type: string
        - in: query
          name: trackingMethod
          required: false
          schema:
            enum:
              - NotNumbered
              - LotNumbered
              - SerialNumbered
            type: string
        - in: query
          name: trackExpirationDate
          required: false
          schema:
            type: boolean
        - in: query
          name: requiredForDropShip
          required: false
          schema:
            type: boolean
        - in: query
          name: assignmentMethod
          required: false
          schema:
            enum:
              - WhenReceived
              - WhenUsed
            type: string
        - in: query
          name: issueMethod
          required: false
          schema:
            enum:
              - FIFO
              - LIFO
              - Sequential
              - Expiration
              - UserEnterable
            type: string
        - in: query
          name: autoIncrementalValueBetweenClasses
          required: false
          schema:
            type: boolean
        - in: query
          name: autoIncrementalValue
          required: false
          schema:
            type: string
        - in: query
          name: autoGenerateNextNumber
          required: false
          schema:
            type: boolean
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LotSerialClassDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/LotSerialClassDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - oauth2: []
      summary: "Get a range of lot serial classes - ScreenId=IN207000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information. If requested page size is greater than allowed max page size, request will be limited to max page size."
      tags:
        - LotSerialClass
  "/controller/api/v1/lotserialclass/{id}":
    get:
      operationId: LotSerialClass_GetByid
      parameters:
        - description: Identifies the LotSerialClass
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LotSerialClassDto"
            text/json:
              schema:
                $ref: "#/components/schemas/LotSerialClassDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - oauth2: []
      summary: Get a specific
      tags:
        - LotSerialClass
  /controller/api/v1/multilanguage/defaultlanguage:
    put:
      operationId: Multilanguage_AddDefaultLanguage
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LanguageUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/LanguageUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/LanguageUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/LanguageUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/LanguageUpdateDto"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Set default language (screenId:SM200550). We recommend to activate multilanguage for the first time using the System Locale screen (Screenid SM200550). Please use API only to switch default
      tags:
        - Multilanguage
  "/controller/api/v1/multilanguage/inventory/{inventoryNumber}":
    get:
      operationId: Multilanguage_GetInventoryTranslationsByinventoryNumber
      parameters:
        - description: ""
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MultilanguageDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/MultilanguageDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/MultilanguageDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/MultilanguageDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all translations for a given item (screenId:IN202500 and IN202000)
      tags:
        - Multilanguage
  "/controller/api/v1/multilanguage/inventory/{inventoryNumber}/{languageISO}":
    delete:
      description: Response Message has StatusCode NoContent if DEL operation succeed
      operationId: Multilanguage_DeleteSpecificInventoryDescrTranslationByinventoryNumberlanguageISO
      parameters:
        - description: Identifies the inventory to update
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - description: Identifies the description language to update
          in: path
          name: languageISO
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:delete
      summary: Deletes the description of an item with the specific language ISO code (screenId:IN202500 and IN202000)
      tags:
        - Multilanguage
    get:
      operationId: Multilanguage_GetSpecificInventoryDescrTranslationByinventoryNumberlanguageISO
      parameters:
        - description: ""
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: languageISO
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultilanguageDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/MultilanguageDto"
            text/json:
              schema:
                $ref: "#/components/schemas/MultilanguageDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/MultilanguageDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific translation of the description for a given item and language ISO code (screenId:IN202500 and IN202000)
      tags:
        - Multilanguage
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Multilanguage_PostSpecificInventoryDescrTranslationByinventoryNumberlanguageISO
      parameters:
        - description: Identifies the inventory
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - description: Identifies the description language
          in: path
          name: languageISO
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MultilanguageTranslationDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/MultilanguageTranslationDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/MultilanguageTranslationDto"
          text/json:
            schema:
              $ref: "#/components/schemas/MultilanguageTranslationDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/MultilanguageTranslationDto"
        description: Defines the fields and field values to be set on created description
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates item description for given item and language ISO code (screenId:IN202500 and IN202000)
      tags:
        - Multilanguage
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Multilanguage_PutSpecificInventoryDescrTranslationByinventoryNumberlanguageISO
      parameters:
        - description: Identifies the inventory to update
          in: path
          name: inventoryNumber
          required: true
          schema:
            type: string
        - description: Identifies the description language to update
          in: path
          name: languageISO
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MultilanguageTranslationDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/MultilanguageTranslationDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/MultilanguageTranslationDto"
          text/json:
            schema:
              $ref: "#/components/schemas/MultilanguageTranslationDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/MultilanguageTranslationDto"
        description: Defines the fields and field values to be updated
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates item description for given item and language ISO code (screenId:IN202500 and IN202000)
      tags:
        - Multilanguage
  /controller/api/v1/multilanguage/languages:
    get:
      operationId: Multilanguage_GetAllActiveLanguages
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ActiveMultilanguageDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/ActiveMultilanguageDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ActiveMultilanguageDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/ActiveMultilanguageDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all languages (screenId:SM200550)
      tags:
        - Multilanguage
  /controller/api/v1/numberSequence:
    get:
      operationId: NumberSequence_GetAll
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/NumberingDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/NumberingDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/NumberingDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/NumberingDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2: []
      summary: Get a specific Numbering - ScreenId=CS201010
      tags:
        - NumberSequence
  "/controller/api/v1/numberSequence/{numberingId}":
    get:
      operationId: NumberSequence_GetBynumberingId
      parameters:
        - description: Identifies the Numbering
          in: path
          name: numberingId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NumberingDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/NumberingDto"
            text/json:
              schema:
                $ref: "#/components/schemas/NumberingDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberingDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2: []
      summary: Get a specific Numbering
      tags:
        - NumberSequence
  /controller/api/v1/organization:
    get:
      operationId: Organization_GetAll
      parameters:
        - description: True to expand all Branches related to this Organization.
          in: query
          name: expandBranches
          required: false
          schema:
            type: boolean
        - description: True to expand payment settings for organization.
          in: query
          name: expandBankSettings
          required: false
          schema:
            type: boolean
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExtendedOrganizationDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExtendedOrganizationDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all organisations
      tags:
        - Organization
  "/controller/api/v1/organization/{organizationNumber}":
    get:
      operationId: Organization_GetByOrganizationCdByorganizationNumber
      parameters:
        - description: The organisation code.
          in: path
          name: organizationNumber
          required: true
          schema:
            type: string
        - description: True to expand all Branches related to this Organization.
          in: query
          name: expandBranches
          required: false
          schema:
            type: boolean
        - description: True to expand payment settings for organization.
          in: query
          name: expandBankSettings
          required: false
          schema:
            type: boolean
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedOrganizationDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ExtendedOrganizationDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get organisation information by organization number.
      tags:
        - Organization
  "/controller/api/v1/organization/{organizationNumber}/BankSettings":
    put:
      description: Response Message has StatusCode No Content if PUT operation succeed
      operationId: Organization_PutBankSettingsForOrganizationByorganizationNumber
      parameters:
        - description: organization number to update
          in: path
          name: organizationNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BankSettingsUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update bank settings for organization
      tags:
        - Organization
  /controller/api/v1/packagingType:
    get:
      operationId: PackagingType_GetAllPackagingTypes
      parameters:
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PackagingTypeDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/PackagingTypeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/PackagingTypeDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/PackagingTypeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of SO PackagingTypes - ScreenId=CS207600
      tags:
        - PackagingType
  "/controller/api/v1/packagingType/{boxId}":
    get:
      operationId: PackagingType_GetByboxId
      parameters:
        - description: Identifies the PackagingType
          in: path
          name: boxId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackagingTypeDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/PackagingTypeDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PackagingTypeDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/PackagingTypeDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific PackagingType
      tags:
        - PackagingType
  /controller/api/v1/payment:
    get:
      deprecated: true
      operationId: Payment_GetAllPayments
      parameters:
        - description: Payment number
          in: query
          name: paymentNbr
          required: false
          schema:
            type: string
        - description: Select Type
          in: query
          name: paymentType
          required: false
          schema:
            enum:
              - Payment
              - CreditNote
              - Prepayment
              - Refund
              - VoidPayment
              - SmallBalanceWo
              - VoidRefund
              - Undefined
            type: string
        - description: Enter Customer
          in: query
          name: customer
          required: false
          schema:
            type: string
        - description: Enter the from-value for Ref. no.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: Enter Invoice Ref Nbr
          in: query
          name: invoiceRefNbr
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: Enter field to order your records by.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PaymentDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/PaymentDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Payments - ScreenId=AP302000\r

        Payment is deprecated, please use CustomerPayment instead."
      tags:
        - Payment
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Payment_CreatePayment
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PaymentUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: "Create a Payment\r

        Payment is deprecated, please use CustomerPayment instead."
      tags:
        - Payment
  "/controller/api/v1/payment/{paymentNumber}":
    get:
      deprecated: true
      operationId: Payment_GetBypaymentNumber
      parameters:
        - description: Identifies the Payment
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PaymentDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a specific Payment\r

        Payment is deprecated, please use CustomerPayment instead."
      tags:
        - Payment
    put:
      deprecated: true
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Payment_PutBypaymentNumber
      parameters:
        - description: Identifies the Payment to update
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/PaymentUpdateDto2"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: "Update a specific Payment\r

        Payment is deprecated, please use CustomerPayment instead."
      tags:
        - Payment
  "/controller/api/v1/payment/{paymentNumber}/action/release":
    post:
      deprecated: true
      description: The action result dto contains information about the result of running the action
      operationId: Payment_ReleasePaymentBypaymentNumber
      parameters:
        - description: Reference number of the payment to be released
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ReleasePaymentActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: "Release payment operation\r

        Payment is deprecated, please use CustomerPayment instead."
      tags:
        - Payment
  "/controller/api/v1/payment/{paymentNumber}/action/void":
    post:
      deprecated: true
      description: The action result dto contains information about the result of running the action
      operationId: Payment_VoidPaymentBypaymentNumber
      parameters:
        - description: Reference number of the payment to be released
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/VoidPaymentActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoidPaymentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/VoidPaymentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: "Void payment operation\r

        Payment is deprecated, please use CustomerPayment instead."
      tags:
        - Payment
  /controller/api/v1/paymentmethod:
    get:
      operationId: PaymentMethod_GetAllPaymentMethod
      parameters:
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PaymentMethodDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/PaymentMethodDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/PaymentMethodDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/PaymentMethodDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Payment Method - ScreenId=CA204000
      tags:
        - PaymentMethod
  "/controller/api/v1/paymentmethod/{paymentMethodNumber}":
    get:
      operationId: PaymentMethod_GetBypaymentMethodNumber
      parameters:
        - description: Identifies the Payment Method
          in: path
          name: paymentMethodNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethodDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/PaymentMethodDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PaymentMethodDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/PaymentMethodDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Payment Method
      tags:
        - PaymentMethod
  /controller/api/v1/project:
    get:
      operationId: Project_GetAll
      parameters:
        - description: Use drop down and select Status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Planned
              - Active
              - Completed
              - Cancelled
              - OnHold
              - PendingApproval
            type: string
        - description: If the project is a template
          in: query
          name: systemTemplate
          required: false
          schema:
            type: boolean
        - description: If the project is visible in AP
          in: query
          name: visibleInAP
          required: false
          schema:
            type: boolean
        - description: Project’s start date
          in: query
          name: startDate
          required: false
          schema:
            format: date-time
            type: string
        - description: Expands project atributes
          in: query
          name: expandAttribute
          required: false
          schema:
            type: boolean
        - description: Identifies the attributes
          in: query
          name: attributes
          required: false
          schema:
            type: string
        - description: Use drop down and select Status.
          in: query
          name: taskStatus
          required: false
          schema:
            enum:
              - Planned
              - Active
              - Cancelled
              - Canceled
              - Completed
            type: string
        - description: If the project task is visible in the Supplier ledger
          in: query
          name: taskVisibleInAp
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Customer ledger
          in: query
          name: taskVisibleInAr
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Cash management workspace
          in: query
          name: taskVisibleInCa
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the CRM workspace
          in: query
          name: taskVisibleInCr
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Expense workspace
          in: query
          name: taskVisibleInEa
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the General ledger workspace
          in: query
          name: taskVisibleInGl
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Inventory workspace
          in: query
          name: taskVisibleInIn
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Purchases workspace
          in: query
          name: taskVisibleInPo
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Sales workspace
          in: query
          name: taskVisibleInSo
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Time entities workspace
          in: query
          name: taskVisibleInTa
          required: false
          schema:
            type: boolean
        - description: Set to true to return the non-project.
          in: query
          name: nonProject
          required: false
          schema:
            type: boolean
        - description: Identifies the Project by its publicId
          in: query
          name: publicId
          required: false
          schema:
            format: uuid
            type: string
        - description: ID of the employee where access restrictions apply
          in: query
          name: restrictedEmployee
          required: false
          schema:
            type: string
        - description: Id of the odp user where access restrictions apply
          in: query
          name: restrictedUser
          required: false
          schema:
            format: int64
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Projects - ScreenId=PM301000\r

        If AccModules_MaxPagination Feature Toggle is ON then request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - Project
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Project_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ProjectUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ProjectUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ProjectUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ProjectUpdateDto"
        description: Define the data for the project to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create an project
      tags:
        - Project
  "/controller/api/v1/project/action/changeProjectId/{internalId}":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: Project_ChangeProjectIDActionByinternalId
      parameters:
        - description: Internal identifier of the project for which the project ID will be changed
          in: path
          name: internalId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeProjectIdActionDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ChangeProjectIdActionDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ChangeProjectIdActionDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ChangeProjectIdActionDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ChangeProjectIdActionDto"
        description: Defines the new project ID for the poject
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeProjectIdActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ChangeProjectIdActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ChangeProjectIdActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ChangeProjectIdActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates the ProjectID for the specified project
      tags:
        - Project
  "/controller/api/v1/project/internal/{internalID}":
    get:
      operationId: Project_GetByinternalID
      parameters:
        - description: Identifies the Project
          in: path
          name: internalID
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ProjectDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Project by internal ID
      tags:
        - Project
  "/controller/api/v1/project/internal/{internalId}":
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Project_PutByinternalId
      parameters:
        - description: Identifies the Project by its internalID
          in: path
          name: internalId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ProjectUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Project
      tags:
        - Project
  /controller/api/v1/project/tasks:
    get:
      operationId: Project_GetTasks
      parameters:
        - description: Identifies the Project
          in: query
          name: projectId
          required: false
          schema:
            type: string
        - description: Identifies the project by publicId
          in: query
          name: publicId
          required: false
          schema:
            format: uuid
            type: string
        - description: Identifies the project by internal id
          in: query
          name: projectInternalId
          required: false
          schema:
            format: int32
            type: integer
        - description: Identifies the Project task description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Identifies the Project task ID
          in: query
          name: taskCd
          required: false
          schema:
            type: string
        - description: Identifies the Project task ID and description
          in: query
          name: taskCdDesc
          required: false
          schema:
            type: string
        - description: The status of the document.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Planned
              - Active
              - Cancelled
              - Canceled
              - Completed
            type: string
        - description: If the project task is visible in the Supplier ledger
          in: query
          name: visibleInAp
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Customer ledger
          in: query
          name: visibleInAr
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Cash management workspace
          in: query
          name: visibleInCa
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the CRM workspace
          in: query
          name: visibleInCr
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Expense workspace
          in: query
          name: visibleInEa
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the General ledger workspace
          in: query
          name: visibleInGl
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Inventory workspace
          in: query
          name: visibleInIn
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Purchases workspace
          in: query
          name: visibleInPo
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Sales workspace
          in: query
          name: visibleInSo
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Time entities workspace
          in: query
          name: visibleInTa
          required: false
          schema:
            type: boolean
        - description: Id of the employee where access restrictions apply
          in: query
          name: restrictedEmployee
          required: false
          schema:
            type: string
        - description: Id of the Odp User where access restrictions apply
          in: query
          name: restrictedUser
          required: false
          schema:
            format: int64
            type: integer
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TaskExtendedDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/TaskExtendedDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all tasks for a project
      tags:
        - Project
  "/controller/api/v1/project/{projectID}":
    get:
      operationId: Project_GetByprojectID
      parameters:
        - description: Identifies the Project
          in: path
          name: projectID
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ProjectDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Project
      tags:
        - Project
  "/controller/api/v1/project/{projectId}":
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Project_PutByprojectId
      parameters:
        - description: Identifies the Project
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ProjectUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Project
      tags:
        - Project
  /controller/api/v1/projectaccountgroup:
    get:
      operationId: ProjectAccountGroup_GetAll
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectAccountGroupDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectAccountGroupDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Project Account Groups - ScreenId=PM2010PL
      tags:
        - ProjectAccountGroup
  "/controller/api/v1/projectaccountgroup/{accountGroupId}":
    get:
      operationId: ProjectAccountGroup_GetByaccountGroupId
      parameters:
        - in: path
          name: accountGroupId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectAccountGroupDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ProjectAccountGroupDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get spesific Project Account Group - ScreenId=PM201000
      tags:
        - ProjectAccountGroup
  /controller/api/v1/projectbasic:
    get:
      operationId: ProjectBasic_GetAll
      parameters:
        - description: Select project status.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Planned
              - Active
              - Completed
              - Cancelled
              - OnHold
              - PendingApproval
            type: string
        - description: Project name/description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Identifies the Project
          in: query
          name: projectId
          required: false
          schema:
            type: string
        - description: Project's start date
          in: query
          name: startDate
          required: false
          schema:
            format: date-time
            type: string
        - description: Set to true to return the non-project.
          in: query
          name: nonProject
          required: false
          schema:
            type: boolean
        - description: Identifies the Project by ID and description
          in: query
          name: projectIdDesc
          required: false
          schema:
            type: string
        - description: Identifies the Project by its publicId
          in: query
          name: publicId
          required: false
          schema:
            format: uuid
            type: string
        - description: Id of the employee where access restrictions apply
          in: query
          name: restrictedEmployee
          required: false
          schema:
            type: string
        - description: Id of the odp user where access restrictions apply
          in: query
          name: restrictedUser
          required: false
          schema:
            format: int64
            type: integer
        - description: If the project is visible in the Supplier ledger
          in: query
          name: visibleInAp
          required: false
          schema:
            type: boolean
        - description: If the project is visible in the Customer ledger
          in: query
          name: visibleInAr
          required: false
          schema:
            type: boolean
        - description: If the project is visible in the Cash management workspace
          in: query
          name: visibleInCa
          required: false
          schema:
            type: boolean
        - description: If the project is visible in the CRM workspace
          in: query
          name: visibleInCr
          required: false
          schema:
            type: boolean
        - description: If the project is visible in the Expense workspace
          in: query
          name: visibleInEa
          required: false
          schema:
            type: boolean
        - description: If the project is visible in the General ledger workspace
          in: query
          name: visibleInGl
          required: false
          schema:
            type: boolean
        - description: If the project is visible in the Inventory workspace
          in: query
          name: visibleInIn
          required: false
          schema:
            type: boolean
        - description: If the project is visible in the Purchases workspace
          in: query
          name: visibleInPo
          required: false
          schema:
            type: boolean
        - description: If the project is visible in the Sales workspace
          in: query
          name: visibleInSo
          required: false
          schema:
            type: boolean
        - description: If the project is visible in the Time entities workspace
          in: query
          name: visibleInTa
          required: false
          schema:
            type: boolean
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectBasicDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectBasicDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Projects - ScreenId=PM301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - ProjectBasic
  /controller/api/v1/projectbudget:
    get:
      operationId: ProjectBudget_GetAll
      parameters:
        - description: Identifies the Project
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectBudgetDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectBudgetDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Project Budgets - ScreenId=PM309000
      tags:
        - ProjectBudget
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: ProjectBudget_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectBudgetUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ProjectBudgetUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ProjectBudgetUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ProjectBudgetUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ProjectBudgetUpdateDto"
        description: Defines the data for the ProjectBudget to update
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates a Project Budget
      tags:
        - ProjectBudget
  /controller/api/v1/projecttask:
    get:
      operationId: ProjectTask_GetAllTasks
      parameters:
        - description: Identifies the Project
          in: query
          name: projectId
          required: false
          schema:
            type: string
        - description: Identifies the project by publicId
          in: query
          name: publicId
          required: false
          schema:
            format: uuid
            type: string
        - description: Identifies the project by internal id
          in: query
          name: projectInternalId
          required: false
          schema:
            format: int32
            type: integer
        - description: Identifies the Project task description
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Identifies the Project task ID
          in: query
          name: taskCd
          required: false
          schema:
            type: string
        - description: Identifies the Project task ID and description
          in: query
          name: taskCdDesc
          required: false
          schema:
            type: string
        - description: The status of the document.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Planned
              - Active
              - Cancelled
              - Canceled
              - Completed
            type: string
        - description: If the project task is visible in the Supplier ledger
          in: query
          name: visibleInAp
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Customer ledger
          in: query
          name: visibleInAr
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Cash management workspace
          in: query
          name: visibleInCa
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the CRM workspace
          in: query
          name: visibleInCr
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Expense workspace
          in: query
          name: visibleInEa
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the General ledger workspace
          in: query
          name: visibleInGl
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Inventory workspace
          in: query
          name: visibleInIn
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Purchases workspace
          in: query
          name: visibleInPo
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Sales workspace
          in: query
          name: visibleInSo
          required: false
          schema:
            type: boolean
        - description: If the project task is visible in the Time entities workspace
          in: query
          name: visibleInTa
          required: false
          schema:
            type: boolean
        - description: Id of the employee where access restrictions apply
          in: query
          name: restrictedEmployee
          required: false
          schema:
            type: string
        - description: Id of the Odp User where access restrictions apply
          in: query
          name: restrictedUser
          required: false
          schema:
            format: int64
            type: integer
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TaskExtendedDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/TaskExtendedDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      tags:
        - ProjectTask
  "/controller/api/v1/projecttask/{internalId}":
    get:
      operationId: ProjectTask_GetTaskByinternalId
      parameters:
        - in: path
          name: internalId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskExtendedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/TaskExtendedDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      tags:
        - ProjectTask
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: ProjectTask_PostByinternalId
      parameters:
        - description: Identifies the project by its internalID
          in: path
          name: internalId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ProjectTaskUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Task
      tags:
        - ProjectTask
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: ProjectTask_PutByinternalId
      parameters:
        - description: Identifies the task by its internalID
          in: path
          name: internalId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ProjectTaskUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Task
      tags:
        - ProjectTask
  /controller/api/v1/projecttransaction:
    get:
      operationId: ProjectTransaction_GetAll
      parameters:
        - description: Select to filter on module; e.g. AR, AP, IN etc.
          in: query
          name: module
          required: false
          schema:
            enum:
              - ModuleGL
              - ModuleAP
              - ModuleAR
              - ModuleCA
              - ModuleCM
              - ModuleIN
              - ModuleSO
              - ModulePO
              - ModuleDR
              - ModuleFA
              - ModuleEP
              - ModulePM
              - ModuleTX
              - ModuleCR
            type: string
        - description: The status of the document.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Released
            type: string
        - description: Filter on project ID.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: Filter on Task ID.
          in: query
          name: projectTask
          required: false
          schema:
            type: string
        - description: Filter invoiceable project tasks.
          in: query
          name: billable
          required: false
          schema:
            type: boolean
        - description: Filter on branch for the project transation.
          in: query
          name: branch
          required: false
          schema:
            type: string
        - description: Filter on the registration date for the project transaction.
          in: query
          name: date
          required: false
          schema:
            format: date-time
            type: string
        - description: Mandatory. Start date for the task.
          in: query
          name: fromPeriod
          required: false
          schema:
            type: string
        - description: Mandatory. End date for the task.
          in: query
          name: toPeriod
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: Expands project transaction notes
          in: query
          name: expandNote
          required: false
          schema:
            type: boolean
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectTransactionDocumentDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectTransactionDocumentDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Project transaction documents - ScreenId=PM304000
      tags:
        - ProjectTransaction
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: ProjectTransaction_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectTransactionDocumentUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ProjectTransactionDocumentUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ProjectTransactionDocumentUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ProjectTransactionDocumentUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ProjectTransactionDocumentUpdateDto"
        description: Define the data for the project transaction to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a project transaction document and lines
      tags:
        - ProjectTransaction
  "/controller/api/v1/projecttransaction/{refNbr}":
    get:
      operationId: ProjectTransaction_GetByrefNbr
      parameters:
        - description: Identifies the project transaction document
          in: path
          name: refNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectTransactionDocumentDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ProjectTransactionDocumentDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Project transaction document
      tags:
        - ProjectTransaction
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: ProjectTransaction_PutByrefNbr
      parameters:
        - description: Identifies the Project transaction document to update
          in: path
          name: refNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectTransactionDocumentUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ProjectTransactionDocumentUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ProjectTransactionDocumentUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ProjectTransactionDocumentUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ProjectTransactionDocumentUpdateDto"
        description: Defines the data for the Project transaction document to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Project transaction document
      tags:
        - ProjectTransaction
  /controller/api/v1/purchaseorder:
    get:
      operationId: PurchaseOrder_GetAllOrder
      parameters:
        - description: Filter on order no. and forward
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Select and filter on Type.
          in: query
          name: orderType
          required: false
          schema:
            enum:
              - RegularOrder
              - DropShip
              - Blanket
              - StandardBlanket
            type: string
        - description: Select and filter on Status.
          in: query
          name: orderStatus
          required: false
          schema:
            enum:
              - Balanced
              - Cancelled
              - Closed
              - Hold
              - Open
              - PendingEmail
              - PendingPrint
              - Printed
              - Voided
            type: string
        - description: Filter on Supplier.
          in: query
          name: supplier
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PurchaseOrderDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/PurchaseOrderDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Purchase Order - ScreenId=PO301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        Change log:\r

        2020-May:Added forced pagination"
      tags:
        - PurchaseOrder
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: PurchaseOrder_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrderUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PurchaseOrderUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/PurchaseOrderUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrderUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/PurchaseOrderUpdateDto"
        description: Defines the data for the Purchase Order to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Purchase Order
      tags:
        - PurchaseOrder
  "/controller/api/v1/purchaseorder/{purchaseOrderNumber}":
    get:
      operationId: PurchaseOrder_GetOrderBypurchaseOrderNumber
      parameters:
        - description: Identifies the Purchase Order
          in: path
          name: purchaseOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrderDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrderDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Purchase Order
      tags:
        - PurchaseOrder
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: PurchaseOrder_PutBypurchaseOrderNumber
      parameters:
        - description: Identifies the Purchase Order to update
          in: path
          name: purchaseOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrderUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PurchaseOrderUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/PurchaseOrderUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrderUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/PurchaseOrderUpdateDto"
        description: Defines the data for the Purchase Order to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a Purchase Order
      tags:
        - PurchaseOrder
  /controller/api/v1/purchaseorderbasic:
    get:
      operationId: PurchaseOrderBasic_GetAllOrderBasic
      parameters:
        - description: Filter on order no. and forward
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Select and filter on Type.
          in: query
          name: orderType
          required: false
          schema:
            enum:
              - RegularOrder
              - DropShip
              - Blanket
              - StandardBlanket
            type: string
        - description: Select and filter on Status.
          in: query
          name: orderStatus
          required: false
          schema:
            enum:
              - Balanced
              - Cancelled
              - Closed
              - Hold
              - Open
              - PendingEmail
              - PendingPrint
              - Printed
              - Voided
            type: string
        - description: Filter on Supplier.
          in: query
          name: supplier
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PurchaseOrderBasicDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/PurchaseOrderBasicDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Purchase Order - ScreenId=PO301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - PurchaseOrderBasic
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: PurchaseOrderBasic_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrderBasicUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PurchaseOrderBasicUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/PurchaseOrderBasicUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrderBasicUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/PurchaseOrderBasicUpdateDto"
        description: Defines the data for the Purchase Order to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Purchase Order Basic
      tags:
        - PurchaseOrderBasic
  "/controller/api/v1/purchaseorderbasic/{purchaseOrderNumber}":
    get:
      operationId: PurchaseOrderBasic_GetPurchaseOrderBasicBypurchaseOrderNumber
      parameters:
        - description: Identifies the Purchase Order
          in: path
          name: purchaseOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrderBasicDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrderBasicDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Purchase Order
      tags:
        - PurchaseOrderBasic
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: PurchaseOrderBasic_PutBypurchaseOrderNumber
      parameters:
        - description: Identifies the Purchase Order to update
          in: path
          name: purchaseOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrderBasicUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PurchaseOrderBasicUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/PurchaseOrderBasicUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrderBasicUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/PurchaseOrderBasicUpdateDto"
        description: Defines the data for the Purchase Order to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a Purchase Order Basic
      tags:
        - PurchaseOrderBasic
  /controller/api/v1/salescategory:
    get:
      operationId: SalesCategory_Get
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesCategoryDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SalesCategoryDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesCategoryDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SalesCategoryDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get Sales Categories - ScreenId=IN204060
      tags:
        - SalesCategory
  "/controller/api/v1/salescategory/{categoryId}":
    get:
      operationId: SalesCategory_GetCategoryBycategoryId
      parameters:
        - description: Identifies the Sales Category
          in: path
          name: categoryId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesCategoryDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/SalesCategoryDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SalesCategoryDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/SalesCategoryDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a Sales Category
      tags:
        - SalesCategory
  "/controller/api/v1/salescategory/{categoryId}/item":
    get:
      operationId: SalesCategory_GetItemsForCategoryBycategoryId
      parameters:
        - description: Identifies the Sales Category
          in: path
          name: categoryId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/InventoryDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Inventory Items from a specific Sales Category
      tags:
        - SalesCategory
  /controller/api/v1/salesorder:
    get:
      description: Data for all Sales Orders
      operationId: SalesOrder_GetAllOrders
      parameters:
        - description: Filter by Order type.
          in: query
          name: orderType
          required: false
          schema:
            type: string
        - description: Select to filter on status on order.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Open
              - Hold
              - CreditHold
              - Completed
              - Cancelled
              - BackOrder
              - Shipping
              - Invoiced
              - PendingApproval
              - Voided
            type: string
        - description: Filter on Order no. greater than value.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: Set to true to include notes.
          in: query
          name: showNotes
          required: false
          schema:
            type: boolean
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of SO Orders - ScreenId=SO301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        Change log:\r

        2020-May:Added force pagination"
      tags:
        - SalesOrder
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrder_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SalesOrderUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Sale Order
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/orderType/{orderType}/{orderNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrder_CreateHeaderAttachmentByorderNumberorderType
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a sales order on a specific order type. If the file already exists, a new revision is created.
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/orderType/{orderType}/{orderNumber}/{lineNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrder_CreateLineAttachmentByorderNumberorderTypelineNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a certain sales order line on a specific order type. If the file already exists, a new revision is created.
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/{orderNbr}":
    get:
      description: Data for a single Sales Order
      operationId: SalesOrder_GetByorderNbr
      parameters:
        - description: Identifies the Sales Order Number
          in: path
          name: orderNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesOrderDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SalesOrderDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific SO Order
      tags:
        - SalesOrder
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: SalesOrder_PutByorderNbr
      parameters:
        - description: Identifies the Sale Order to update
          in: path
          name: orderNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SalesOrderUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SalesOrderUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SalesOrderUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SalesOrderUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SalesOrderUpdateDto"
        description: Defines the data for the Sale Order to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Sale Order
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/{orderNumber}/attachment":
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrder_CreateHeaderAttachmentByorderNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: "Creates an attachment and associates it with a sales order. If the file already exists, a new revision is created.\r

        - Method is deprecated and will be removed in a future version. Please start using the new method with order type."
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/{orderNumber}/{lineNumber}/attachment":
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrder_CreateLineAttachmentByorderNumberlineNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: "Creates an attachment and associates it with a certain sales order line. If the file already exists, a new revision is created.\r

        - Method is deprecated and will be removed in a future version. Please start using the new method with order type."
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/{orderType}/{orderNbr}":
    get:
      description: Data for a single Sales Order
      operationId: SalesOrder_GetOrderByTypeByorderTypeorderNbr
      parameters:
        - description: Identifies the Sales Order Type
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: Identifies the Sales Order Number
          in: path
          name: orderNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesOrderDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SalesOrderDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific type of Order
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/{orderType}/{orderNbr}/commissions":
    get:
      description: Data for all Sales Order Commissions
      operationId: SalesOrder_GetCommissionsByorderTypeorderNbr
      parameters:
        - in: path
          name: orderType
          required: true
          schema:
            type: string
        - in: path
          name: orderNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SOCommissionDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SOCommissionDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SOCommissionDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SOCommissionDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get Sales Order Commissions - ScreenId=SO301000, tab Commissions
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/{orderType}/{orderNbr}/rotrut":
    get:
      operationId: SalesOrder_GetROTRUTByorderTypeorderNbr
      parameters:
        - description: ""
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: orderNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RotRutBasicDto"
            text/json:
              schema:
                $ref: "#/components/schemas/RotRutBasicDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get ROT/RUT details for a specific type of order
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/{orderType}/{orderNumber}/printOrder":
    get:
      description: The File is in Content of the message
      operationId: SalesOrder_PrintOrderByorderNumberorderType
      parameters:
        - description: Identifies the order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: Identifies the Sales Order Type
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get the print report of the Sales Order Quote
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/{saleOrderNumber}/action/cancelSalesOrder":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SalesOrder_CancelSalesOrderBysaleOrderNumber
      parameters:
        - description: Reference number of the sale oreder that will be cancelled
          in: path
          name: saleOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CancelSalesOrderActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelSalesOrderActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/CancelSalesOrderActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CancelSalesOrderActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/CancelSalesOrderActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Cancel Order action
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/{saleOrderNumber}/action/createShipment":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SalesOrder_CreateShipmentActionBysaleOrderNumber
      parameters:
        - description: Reference number of the sale oreder from which the shipment will be created
          in: path
          name: saleOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CreateShipmentActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateShipmentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CreateShipmentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Create shipment operation
      tags:
        - SalesOrder
  "/controller/api/v1/salesorder/{salesOrderNumber}/action/reopenSalesOrder":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SalesOrder_ReopenSalesOrderBysalesOrderNumber
      parameters:
        - description: Identifies the Sale Order to reopen
          in: path
          name: salesOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ReopenSalesOrderActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReopenSalesOrderActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReopenSalesOrderActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReopenSalesOrderActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReopenSalesOrderActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Reopen and update a specific Sales Order. This method requires a sales order update dto where the order type is initialised.
      tags:
        - SalesOrder
  /controller/api/v1/salesorderbasic:
    get:
      description: Data for all Sales Order Basic
      operationId: SalesOrderBasic_GetAllOrders
      parameters:
        - description: Filter by Order type.
          in: query
          name: orderType
          required: false
          schema:
            type: string
        - description: Select to filter on status on order.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Open
              - Hold
              - CreditHold
              - Completed
              - Cancelled
              - BackOrder
              - Shipping
              - Invoiced
              - PendingApproval
              - Voided
            type: string
        - description: Filter on Order no. greater than value.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: Set to true to include notes.
          in: query
          name: showNotes
          required: false
          schema:
            type: boolean
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderBasicDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderBasicDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Sale Orders - ScreenId=SO301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - SalesOrderBasic
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderBasic_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SalesOrderBasicUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Sale Order
      tags:
        - SalesOrderBasic
  "/controller/api/v1/salesorderbasic/orderType/{orderType}/{orderNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderBasic_CreateHeaderAttachmentByorderNumberorderType
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: Identifies the sales order type
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a sales order on a specific order type. If the file already exists, a new revision is created.
      tags:
        - SalesOrderBasic
  "/controller/api/v1/salesorderbasic/orderType/{orderType}/{orderNumber}/{lineNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderBasic_CreateLineAttachmentByorderNumberorderTypelineNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: Identifies the sales order type
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a certain sales order line on a specific order type. If the file already exists, a new revision is created.
      tags:
        - SalesOrderBasic
  "/controller/api/v1/salesorderbasic/{orderNbr}":
    get:
      description: Data for a single Sales Order Basic
      operationId: SalesOrderBasic_GetByorderNbr
      parameters:
        - description: Identifies the Sales Order Number
          in: path
          name: orderNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesOrderBasicDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SalesOrderBasicDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific SO Order
      tags:
        - SalesOrderBasic
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: SalesOrderBasic_PutByorderNbr
      parameters:
        - description: Identifies the Sale Order to update
          in: path
          name: orderNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SalesOrderBasicUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SalesOrderBasicUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SalesOrderBasicUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SalesOrderBasicUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SalesOrderBasicUpdateDto"
        description: Defines the data for the Sale Order to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Sale Order
      tags:
        - SalesOrderBasic
  "/controller/api/v1/salesorderbasic/{orderNumber}/attachment":
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderBasic_CreateHeaderAttachmentByorderNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: "Creates an attachment and associates it with a sales order. If the file already exists, a new revision is created.\r

        - Method is deprecated and will be removed in a future version. Please start using the new method with order type."
      tags:
        - SalesOrderBasic
  "/controller/api/v1/salesorderbasic/{orderNumber}/{lineNumber}/attachment":
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderBasic_CreateLineAttachmentByorderNumberlineNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: "Creates an attachment and associates it with a certain sales order line. If the file already exists, a new revision is created.\r

        - Method is deprecated and will be removed in a future version. Please start using the new method with order type."
      tags:
        - SalesOrderBasic
  "/controller/api/v1/salesorderbasic/{orderType}/{orderNbr}":
    get:
      description: Data for a single Sales Order Basic
      operationId: SalesOrderBasic_GetOrderByTypeByorderTypeorderNbr
      parameters:
        - description: Identifies the Sales Order Type
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: Identifies the Sales Order Number
          in: path
          name: orderNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesOrderBasicDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SalesOrderBasicDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific type of Order
      tags:
        - SalesOrderBasic
  "/controller/api/v1/salesorderbasic/{saleOrderNumber}/action/createShipment":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SalesOrderBasic_CreateShipmentActionBysaleOrderNumber
      parameters:
        - description: Reference number of the sale oreder from which the shipment will be created
          in: path
          name: saleOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CreateShipmentActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateShipmentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CreateShipmentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Crete shipment operation
      tags:
        - SalesOrderBasic
  /controller/api/v1/salesordertype:
    get:
      operationId: SalesOrderType_GetAllSalesOrderTypes
      parameters:
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderTypeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderTypeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of SO OrderTypes - ScreenId=SO201000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - SalesOrderType
  "/controller/api/v1/salesordertype/{orderType}":
    get:
      operationId: SalesOrderType_GetSalesOrderTypeByorderType
      parameters:
        - description: Identifies the SO OrderType
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesOrderTypeDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SalesOrderTypeDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific SO OrderType
      tags:
        - SalesOrderType
  /controller/api/v1/salesperson:
    get:
      operationId: SalesPerson_GetSalespersons
      parameters:
        - in: query
          name: salespersonCD
          required: false
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: isActive
          required: false
          schema:
            type: boolean
        - in: query
          name: commissionPct
          required: false
          schema:
            format: double
            type: number
        - in: query
          name: salesSub
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfSalesPersonDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BasePaginationDtoOfSalesPersonDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get all or a range of Salespersons - screen ID: AR205000\r

        Please use a page size lower or equal to the allowed max page size which is returned under metadata. \r

        If pagesize is greater than the max page size, it will be limited to max page size."
      tags:
        - SalesPerson
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesPerson_CreateSalesperson
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SalesPersonUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SalesPersonUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SalesPersonUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SalesPersonUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SalesPersonUpdateDto"
        description: Defines the data for the Salesperson to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Salesperson
      tags:
        - SalesPerson
  "/controller/api/v1/salesperson/{salespersonCd}":
    get:
      operationId: SalesPerson_GetSalespersonBysalespersonCd
      parameters:
        - description: Identifies the Salesperson
          in: path
          name: salespersonCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesPersonDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SalesPersonDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a specific Salesperson - screen ID: AR205000"
      tags:
        - SalesPerson
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: SalesPerson_UpdateSalespersonBysalespersonCd
      parameters:
        - description: Identifies the Salesperson to update
          in: path
          name: salespersonCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SalesPersonUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SalesPersonUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SalesPersonUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SalesPersonUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SalesPersonUpdateDto"
        description: Defines the data for the Salesperson to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Salesperson
      tags:
        - SalesPerson
  /controller/api/v1/shipment:
    get:
      operationId: Shipment_GetAllShipments
      parameters:
        - in: query
          name: customerId
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: customerNumber
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. The GreaterThanValue parameter has no effect on the result.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            enum:
              - Open
              - Hold
              - Completed
              - Cancelled
              - Confirmed
              - Invoiced
              - Receipted
              - AutoGenerated
              - PartiallyInvoiced
            type: string
        - in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ShipmentDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ShipmentDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of SO Shipments - ScreenId=SO302000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - Shipment
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Shipment_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShipmentCreateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ShipmentCreateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ShipmentCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ShipmentCreateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ShipmentCreateDto"
        description: Defines the data for the Shipment to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Shipment
      tags:
        - Shipment
  "/controller/api/v1/shipment/{shipmentNbr}":
    get:
      operationId: Shipment_GetByshipmentNbr
      parameters:
        - description: Identifies the Shipment
          in: path
          name: shipmentNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShipmentDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ShipmentDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Shipment
      tags:
        - Shipment
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeeded
      operationId: Shipment_PutByshipmentNbr
      parameters:
        - description: Identifies the Shipment to update
          in: path
          name: shipmentNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShipmentUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ShipmentUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ShipmentUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ShipmentUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ShipmentUpdateDto"
        description: Defines the data for the Shipment to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Shipment
      tags:
        - Shipment
  "/controller/api/v1/shipment/{shipmentNbr}/printPickList":
    get:
      operationId: Shipment_PrintPickListByshipmentNbr
      parameters:
        - description: Identifies the shipment
          in: path
          name: shipmentNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get the pick list report
      tags:
        - Shipment
  "/controller/api/v1/shipment/{shipmentNbr}/printShipmentConfirmation":
    get:
      operationId: Shipment_PrintShipmentConfirmationByshipmentNbr
      parameters:
        - description: Identifies the shipment
          in: path
          name: shipmentNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get the shipment confirmation report
      tags:
        - Shipment
  "/controller/api/v1/shipment/{shipmentNumber}/action/addLine":
    post:
      description: Response Message has StatusCode NoContent if POST operation succeeded
      parameters:
        - description: Identifies the Shipment to update
          in: path
          name: shipmentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShipmentDetailLineAddDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ShipmentDetailLineAddDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ShipmentDetailLineAddDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ShipmentDetailLineAddDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ShipmentDetailLineAddDto"
        description: Defines the data for the new Shipment Line to add
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Adds a new Shipment Line to a specific Shipment
      tags:
        - Shipment
  "/controller/api/v1/shipment/{shipmentNumber}/action/addSOLine":
    post:
      description: Response Message has StatusCode NoContent if POST operation succeeded
      operationId: Shipment_PostByshipmentNumber
      parameters:
        - description: Identifies the Shipment to update
          in: path
          name: shipmentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShipmentSOLine"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ShipmentSOLine"
          application/xml:
            schema:
              $ref: "#/components/schemas/ShipmentSOLine"
          text/json:
            schema:
              $ref: "#/components/schemas/ShipmentSOLine"
          text/xml:
            schema:
              $ref: "#/components/schemas/ShipmentSOLine"
        description: Defines the data for the Sales Order Line to add
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Adds a Sales Order Line to a specific Shipment
      tags:
        - Shipment
  "/controller/api/v1/shipment/{shipmentNumber}/action/addSOOrder":
    post:
      description: Response Message has StatusCode NoContent if POST operation succeeded
      parameters:
        - description: Identifies the Shipment to update
          in: path
          name: shipmentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShipmentSOOrder"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ShipmentSOOrder"
          application/xml:
            schema:
              $ref: "#/components/schemas/ShipmentSOOrder"
          text/json:
            schema:
              $ref: "#/components/schemas/ShipmentSOOrder"
          text/xml:
            schema:
              $ref: "#/components/schemas/ShipmentSOOrder"
        description: Defines the data for the Sales Order to add
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Adds a Sales Order to a specific Shipment
      tags:
        - Shipment
  "/controller/api/v1/shipment/{shipmentNumber}/action/confirmShipment":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: Shipment_ConfirmShipmentByshipmentNumber
      parameters:
        - description: Reference number of the shipment to be confirmed
          in: path
          name: shipmentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfirmShipmentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ConfirmShipmentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ConfirmShipmentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfirmShipmentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Confirm shipment operation
      tags:
        - Shipment
  "/controller/api/v1/shipment/{shipmentNumber}/action/correctShipment":
    post:
      description: Response Message has StatusCode BadRequest or InternalServerError if POST operation failed
      operationId: Shipment_CorrectShipmentByshipmentNumber
      parameters:
        - description: Reference number of the shipment to be corrected
          in: path
          name: shipmentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Correct shipment operation
      tags:
        - Shipment
  "/controller/api/v1/shipment/{shipmentNumber}/action/deleteLine/{lineNumber}":
    post:
      description: Response Message has StatusCode NoContent if POST operation succeeded
      operationId: Shipment_PostByshipmentNumberlineNumber
      parameters:
        - description: Identifies the Shipment to update
          in: path
          name: shipmentNumber
          required: true
          schema:
            type: string
        - description: Identifies the Shipment line to delete
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShipmentUpdateDeleteLineDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ShipmentUpdateDeleteLineDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ShipmentUpdateDeleteLineDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ShipmentUpdateDeleteLineDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ShipmentUpdateDeleteLineDto"
        description: Defines if SOLine should be deleted or not - where applicable
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Deletes a Shipment Line from a specific Shipment
      tags:
        - Shipment
  /controller/api/v1/stocktake:
    get:
      deprecated: true
      operationId: Stocktake_GetAllStocktakes
      parameters:
        - description: Filter by Warehouse.
          in: query
          name: warehouse
          required: false
          schema:
            type: string
        - description: Filter by Location.
          in: query
          name: location
          required: false
          schema:
            type: string
        - description: Filter by Inventory.
          in: query
          name: inventory
          required: false
          schema:
            type: string
        - description: Filter by LotSerialNumber.
          in: query
          name: lotSerialNumber
          required: false
          schema:
            type: string
        - description: Filter by SummaryStatus.
          in: query
          name: summaryStatus
          required: false
          schema:
            enum:
              - Cancelled
              - Completed
              - Counting
              - Entering
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: Filter by LineNumber GreaterEqual StartWithLine.
          in: query
          name: startWithLine
          required: false
          schema:
            format: int32
            type: integer
        - description: Filter by by LineNumber LessEqual EndWithLine.
          in: query
          name: endWithLine
          required: false
          schema:
            format: int32
            type: integer
        - description: Filter by FreezeDateTime.
          in: query
          name: freezeDateTime
          required: false
          schema:
            type: string
        - description: Filter by FreezeDateTimeCondition.
          in: query
          name: freezeDateTimeCondition
          required: false
          schema:
            type: string
        - description: "System generated value for last modification of transaction/record. Use format: YYYY-MM-DD HH:MM (date and time) to filter from date to present.."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Filter by ExpirationDateTime.
          in: query
          name: expirationDateTime
          required: false
          schema:
            type: string
        - description: Filter by ExpirationDateTimeCondition.
          in: query
          name: expirationDateTimeCondition
          required: false
          schema:
            type: string
        - description: Filter by StocktakeLineStatus.
          in: query
          name: status
          required: false
          schema:
            enum:
              - NotEntered
              - Entered
              - Skipped
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/StocktakeDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/StocktakeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/StocktakeDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/StocktakeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of stocktakes - ScreenId=IN305000\r

        - Method is deprecated and will be removed from 1'st of December 2021. Start using V2 for this method."
      tags:
        - Stocktake
  "/controller/api/v1/stocktake/{referenceNumber}":
    get:
      deprecated: true
      operationId: Stocktake_GetByreferenceNumber
      parameters:
        - description: Identifies the Stocktake
          in: path
          name: referenceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StocktakeDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/StocktakeDto"
            text/json:
              schema:
                $ref: "#/components/schemas/StocktakeDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/StocktakeDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a specific \r

        - Method is deprecated and will be removed from 1'st of December 2021. Start using V2 for this method."
      tags:
        - Stocktake
    put:
      deprecated: true
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Stocktake_PutByreferenceNumber
      parameters:
        - description: Identifies the stocktake to update
          in: path
          name: referenceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/StocktakeUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: "Update a specific stocktake\r

        - Method is deprecated and will be removed from 1'st of December 2021. Start using V2 for this method."
      tags:
        - Stocktake
  /controller/api/v1/subaccount:
    get:
      description: Data for SubAccount
      operationId: Subaccount_GetAllSubaccounts
      parameters:
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If the SubAccount is active
          in: query
          name: active
          required: false
          schema:
            type: boolean
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: Pagination parameter. Number of items to be collected
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SubAccountDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SubAccountDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get all SubAccounts - ScreenId=GL203000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        Change log:\r

        2020-May:Added force pagination."
      tags:
        - Subaccount
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Subaccount_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubAccountUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SubAccountUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SubAccountUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SubAccountUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SubAccountUpdateDto"
        description: Defines the data for Subaccount to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Subaccount
      tags:
        - Subaccount
  "/controller/api/v1/subaccount/{subAccountNumber}":
    get:
      description: Data for SubAccount
      operationId: Subaccount_GetSubaccountBysubAccountNumber
      parameters:
        - description: Identifies the SubAccount
          in: path
          name: subAccountNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubAccountDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SubAccountDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific SubAccount
      tags:
        - Subaccount
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Subaccount_PutBysubAccountNumber
      parameters:
        - description: Identifies the Subaccount to update
          in: path
          name: subAccountNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubAccountUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SubAccountUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SubAccountUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SubAccountUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SubAccountUpdateDto"
        description: Defines the data for the Subaccount to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Subaccount
      tags:
        - Subaccount
  /controller/api/v1/supplier:
    get:
      operationId: Supplier_GetAll
      parameters:
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            enum:
              - Active
              - OnHold
              - HoldPayments
              - Inactive
              - OneTime
            type: string
        - in: query
          name: vatRegistrationId
          required: false
          schema:
            type: string
        - in: query
          name: corporateId
          required: false
          schema:
            type: string
        - in: query
          name: attributes
          required: false
          schema:
            type: string
        - in: query
          name: expandAccountInformation
          required: false
          schema:
            type: boolean
        - in: query
          name: expandNote
          required: false
          schema:
            type: boolean
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of suppliers - ScreenId=AP303000
      tags:
        - Supplier
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: Supplier_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SupplierUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SupplierUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SupplierUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SupplierUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SupplierUpdateDto"
        description: Define the data for the supplier to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a supplier
      tags:
        - Supplier
  /controller/api/v1/supplier/POBalance:
    get:
      operationId: Supplier_GetAllSupplierPOBalance
      parameters:
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierPOBalanceDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierPOBalanceDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierPOBalanceDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierPOBalanceDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get the PO balance of a range of suppliers
      tags:
        - Supplier
  /controller/api/v1/supplier/balance:
    get:
      operationId: Supplier_GetAllSupplierBalance
      parameters:
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierBalanceDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierBalanceDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierBalanceDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierBalanceDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get the balance of a range of suppliers
      tags:
        - Supplier
  /controller/api/v1/supplier/supplierClass:
    get:
      operationId: Supplier_GetAllSupplierClasses
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierClassDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierClassDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get supplier classes
      tags:
        - Supplier
  "/controller/api/v1/supplier/supplierClass/{supplierClassId}":
    get:
      operationId: Supplier_GetSpecificSupplierClassBysupplierClassId
      parameters:
        - description: Identifies the supplier class
          in: path
          name: supplierClassId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierClassDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SupplierClassDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific supplier class
      tags:
        - Supplier
  "/controller/api/v1/supplier/{supplierCd}":
    get:
      operationId: Supplier_GetBysupplierCd
      parameters:
        - description: Identifies the supplier
          in: path
          name: supplierCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SupplierDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific supplier
      tags:
        - Supplier
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: Supplier_PutBysupplierCd
      parameters:
        - description: Identifies the supplier to update
          in: path
          name: supplierCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SupplierUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SupplierUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SupplierUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SupplierUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SupplierUpdateDto"
        description: The data to update for supplier
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific supplier
      tags:
        - Supplier
  "/controller/api/v1/supplier/{supplierCd}/POBalance":
    get:
      operationId: Supplier_GetSupplierPOBalanceBysupplierCd
      parameters:
        - description: Indentifies the supplier for witch to return data
          in: path
          name: supplierCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierPOBalanceDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/SupplierPOBalanceDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SupplierPOBalanceDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/SupplierPOBalanceDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific supplier's PO balance
      tags:
        - Supplier
  "/controller/api/v1/supplier/{supplierCd}/balance":
    get:
      operationId: Supplier_GetSupplierBalanceBysupplierCd
      parameters:
        - description: Indentifies the supplier for witch to return data
          in: path
          name: supplierCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierBalanceDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/SupplierBalanceDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SupplierBalanceDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/SupplierBalanceDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific supplier's PO balance
      tags:
        - Supplier
  "/controller/api/v1/supplier/{supplierCd}/contact":
    get:
      operationId: Supplier_GetAllContactForSupplierBysupplierCd
      parameters:
        - description: ""
          in: path
          name: supplierCd
          required: true
          schema:
            type: string
        - in: query
          name: displayName
          required: false
          schema:
            type: string
        - in: query
          name: active
          required: false
          schema:
            type: string
        - in: query
          name: firstName
          required: false
          schema:
            type: string
        - in: query
          name: lastName
          required: false
          schema:
            type: string
        - in: query
          name: businessAccount
          required: false
          schema:
            type: string
        - in: query
          name: email
          required: false
          schema:
            type: string
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContactDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ContactDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of a Supplier of a specific supplier
      tags:
        - Supplier
  "/controller/api/v1/supplier/{supplierNumber}/document":
    get:
      operationId: Supplier_GetAllDocumentsForSupplierBysupplierNumber
      parameters:
        - description: Identifies the supplier for which to return data
          in: path
          name: supplierNumber
          required: true
          schema:
            type: string
        - description: By type of document.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - CreditAdj
              - DebitAdj
              - Prepayment
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: Filter by the project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: Set to true to include approval information.
          in: query
          name: expandApproval
          required: false
          schema:
            type: boolean
        - description: Set to true to include description.
          in: query
          name: expandNote
          required: false
          schema:
            type: boolean
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The status of the document
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - Printed
              - Prebooked
              - Reserved
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierDocumentDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierDocumentDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Gets a range of documents for a specific supplier
      tags:
        - Supplier
  "/controller/api/v1/supplier/{supplierNumber}/invoice":
    get:
      operationId: Supplier_GetAllInvoicesForSupplierBysupplierNumber
      parameters:
        - description: Identifies the supplier for which to return data
          in: path
          name: supplierNumber
          required: true
          schema:
            type: string
        - description: Set to true if you want to see all attachments regarding this document.
          in: query
          name: expandAttachment
          required: false
          schema:
            type: boolean
        - description: By type of document.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - CreditAdj
              - DebitAdj
              - Prepayment
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: Filter by the project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: Set to true to include approval information.
          in: query
          name: expandApproval
          required: false
          schema:
            type: boolean
        - description: Set to true to include description.
          in: query
          name: expandNote
          required: false
          schema:
            type: boolean
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The status of the document
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - Printed
              - Prebooked
              - Reserved
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierInvoiceDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierInvoiceDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of invoices for a specific supplier\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        Change log:\r

        2020-May:Added forced pagination"
      tags:
        - Supplier
  /controller/api/v1/supplierInvoice:
    get:
      operationId: SupplierInvoice_GetAllInvoices
      parameters:
        - description: Set to true if you want to see all attachments regarding this document.
          in: query
          name: expandAttachment
          required: false
          schema:
            type: boolean
        - description: By type of document.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - CreditAdj
              - DebitAdj
              - Prepayment
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: Filter by the project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: Set to true to include approval information.
          in: query
          name: expandApproval
          required: false
          schema:
            type: boolean
        - description: Set to true to include description.
          in: query
          name: expandNote
          required: false
          schema:
            type: boolean
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The status of the document
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - Printed
              - Prebooked
              - Reserved
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierInvoiceDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierInvoiceDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Invoices - ScreenId=AP301000. \r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - SupplierInvoice
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SupplierInvoice_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SupplierInvoiceUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SupplierInvoiceUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SupplierInvoiceUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SupplierInvoiceUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SupplierInvoiceUpdateDto"
        description: Defines the data for the SupplierInvoice to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create an SupplierInvoice
      tags:
        - SupplierInvoice
  /controller/api/v1/supplierInvoice/approval:
    get:
      operationId: SupplierInvoice_GetByApprovalDocumentId
      parameters:
        - description: SystemID referes to the approval document id created when the document is sent to approval
          in: query
          name: systemId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierInvoiceDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SupplierInvoiceDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get an invoice based on the systemId. SystemID is used for approving supplier invoices
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/documentType/{documentType}/{invoiceNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SupplierInvoice_CreateHeaderAttachmentByTypeBydocumentTypeinvoiceNumber
      parameters:
        - description: ""
          in: path
          name: documentType
          required: true
          schema:
            type: string
        - description: Identifies the supplier invoice
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a supplier invoice. If the file already exists, a new revision is created.
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/documentType/{documentType}/{invoiceNumber}/{lineNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SupplierInvoice_CreateLineAttachmentByTypeBydocumentTypeinvoiceNumberlineNumber
      parameters:
        - description: ""
          in: path
          name: documentType
          required: true
          schema:
            type: string
        - description: Identifies the supplier invoice
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: Identifies the supplier invoice line
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a certain supplier invoice line. If the file already exists, a new revision is created.
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}":
    delete:
      description: Response Message has StatusCode NoContent if DELETE operation succeed
      operationId: SupplierInvoice_DeleteBydocumentTypeinvoiceNumber
      parameters:
        - description: Identifies the docType of Supplier Invoice to delete
          in: path
          name: documentType
          required: true
          schema:
            enum:
              - Invoice
              - CreditAdj
              - DebitAdj
              - Prepayment
            type: string
        - description: Identifies the Supplier Invoice to delete
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2: []
      summary: Deletes a specific Supplier Invoice
      tags:
        - SupplierInvoice
    get:
      operationId: SupplierInvoice_GetByTypeBydocumentTypeinvoiceNumber
      parameters:
        - description: Identifies the Invoice
          in: path
          name: documentType
          required: true
          schema:
            type: string
        - description: Identifies the Invoice
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierInvoiceDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SupplierInvoiceDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Invoice
      tags:
        - SupplierInvoice
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: SupplierInvoice_PutByTypeBydocumentTypeinvoiceNumber
      parameters:
        - description: Identifies the SupplierInvoice to update
          in: path
          name: documentType
          required: true
          schema:
            type: string
        - description: Identifies the SupplierInvoice to update
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SupplierInvoiceUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2: []
      summary: Update a specific SupplierInvoice
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}/action/prebook":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SupplierInvoice_PrebookInvoiceBydocumentTypeinvoiceNumber
      parameters:
        - description: Document type of the document to be Pre-Booked
          in: path
          name: documentType
          required: true
          schema:
            type: string
        - description: Reference number of the document to be Pre-Booked
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrebookSupplierInvoiceActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/PrebookSupplierInvoiceActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PrebookSupplierInvoiceActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/PrebookSupplierInvoiceActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Pre-Book invoice operation
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SupplierInvoice_ReleaseInvoiceByTypeBydocumentTypeinvoiceNumber
      parameters:
        - description: Document type of the released document to be reversed
          in: path
          name: documentType
          required: true
          schema:
            type: string
        - description: Reference number of the document to be release
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseSupplierInvoiceActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleaseSupplierInvoiceActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseSupplierInvoiceActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleaseSupplierInvoiceActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release invoice operation
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}/action/reverse":
    post:
      operationId: SupplierInvoice_ReverseInvoiceBydocumentTypeinvoiceNumber
      parameters:
        - description: Identifies the Invoice
          in: path
          name: documentType
          required: true
          schema:
            type: string
        - description: Identifies the Invoice
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReverseInvoiceResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReverseInvoiceResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Provides an action for reversing a supplier invoice/adjustment
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}/action/sendtoapproval":
    post:
      operationId: SupplierInvoice_SendToApprovalBydocumentTypeinvoiceNumber
      parameters:
        - description: Document type
          in: path
          name: documentType
          required: true
          schema:
            type: string
        - description: Document number
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendToApprovalResult"
            application/xml:
              schema:
                $ref: "#/components/schemas/SendToApprovalResult"
            text/json:
              schema:
                $ref: "#/components/schemas/SendToApprovalResult"
            text/xml:
              schema:
                $ref: "#/components/schemas/SendToApprovalResult"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Send invoice to approval
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}/action/voidinvoice":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SupplierInvoice_VoidInvoiceBydocumentTypeinvoiceNumber
      parameters:
        - description: Document type of the document to be Voided
          in: path
          name: documentType
          required: true
          schema:
            type: string
        - description: Reference number of the document to be Voided
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoidSupplierInvoiceActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/VoidSupplierInvoiceActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/VoidSupplierInvoiceActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/VoidSupplierInvoiceActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Void invoice operation
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/{invoiceNumber}":
    delete:
      description: Response Message has StatusCode NoContent if DELETE operation succeed
      operationId: SupplierInvoice_DeleteByinvoiceNumber
      parameters:
        - description: Identifies the Supplier Invoice to delete
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:delete
      summary: Deletes a specific Supplier Invoice
      tags:
        - SupplierInvoice
    get:
      operationId: SupplierInvoice_GetByinvoiceNumber
      parameters:
        - description: Identifies the Invoice
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierInvoiceDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SupplierInvoiceDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Invoice
      tags:
        - SupplierInvoice
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: SupplierInvoice_PutByinvoiceNumber
      parameters:
        - description: Identifies the SupplierInvoice to update
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SupplierInvoiceUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific SupplierInvoice
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/{invoiceNumber}/action/correct":
    post:
      operationId: SupplierInvoice_CorrectInvoiceByinvoiceNumber
      parameters:
        - in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CorrectSupplierInvoiceActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CorrectSupplierInvoiceActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/{invoiceNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SupplierInvoice_ReleaseInvoiceByinvoiceNumber
      parameters:
        - description: Reference number of the document to be release
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseSupplierInvoiceActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleaseSupplierInvoiceActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseSupplierInvoiceActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleaseSupplierInvoiceActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release invoice operation
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/{invoiceNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SupplierInvoice_CreateHeaderAttachmentByinvoiceNumber
      parameters:
        - description: Identifies the supplier invoice
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a supplier invoice. If the file already exists, a new revision is created.
      tags:
        - SupplierInvoice
  "/controller/api/v1/supplierInvoice/{invoiceNumber}/{lineNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SupplierInvoice_CreateLineAttachmentByinvoiceNumberlineNumber
      parameters:
        - description: Identifies the supplier invoice
          in: path
          name: invoiceNumber
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a certain supplier invoice line. If the file already exists, a new revision is created.
      tags:
        - SupplierInvoice
  /controller/api/v1/supplierPayment:
    get:
      operationId: SupplierPayment_GetAllPayments
      parameters:
        - in: query
          name: invoiceRefNbr
          required: false
          schema:
            type: string
        - description: Enter the from-value for Ref. no.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Filter by Supplier
          in: query
          name: supplier
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierPaymentDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierPaymentDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get all SupplierPayments.\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        ScreenId=AP302000"
      tags:
        - SupplierPayment
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SupplierPayment_CreateSupplierPayment
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SupplierPaymentUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SupplierPaymentUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SupplierPaymentUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SupplierPaymentUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SupplierPaymentUpdateDto"
        description: Defines the data for the SupplierPayment to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a SupplierPayment
      tags:
        - SupplierPayment
  "/controller/api/v1/supplierPayment/{paymentNumber}":
    get:
      operationId: SupplierPayment_GetBypaymentNumber
      parameters:
        - description: Identifies the SupplierPayment
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierPaymentDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SupplierPaymentDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific SupplierPayment
      tags:
        - SupplierPayment
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: SupplierPayment_PutBypaymentNumber
      parameters:
        - description: Identifies the Payment to update
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SupplierPaymentUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SupplierPaymentUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SupplierPaymentUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SupplierPaymentUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SupplierPaymentUpdateDto"
        description: Defines the data for the Payment to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific SupplierPayment
      tags:
        - SupplierPayment
  "/controller/api/v1/supplierPayment/{paymentNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SupplierPayment_ReleasePaymentBypaymentNumber
      parameters:
        - description: Reference number of the payment to be released
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReleaseSupplierPaymentActionDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ReleaseSupplierPaymentActionDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/ReleaseSupplierPaymentActionDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ReleaseSupplierPaymentActionDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/ReleaseSupplierPaymentActionDto"
        description: Contains the type of the payment
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleasePaymentActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Release payment operation
      tags:
        - SupplierPayment
  "/controller/api/v1/supplierPayment/{paymentType}/{paymentNumber}":
    get:
      operationId: SupplierPayment_GetByTypeBypaymentTypepaymentNumber
      parameters:
        - description: Identifies the Supplier document type
          in: path
          name: paymentType
          required: true
          schema:
            type: string
        - description: Identifies the Supplier document number
          in: path
          name: paymentNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierPaymentDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SupplierPaymentDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific SupplierPayment by type and number
      tags:
        - SupplierPayment
  /controller/api/v1/supplierdocument:
    get:
      operationId: SupplierDocument_GetAllDocumentsForSupplier
      parameters:
        - description: By type of document.
          in: query
          name: documentType
          required: false
          schema:
            enum:
              - Invoice
              - CreditAdj
              - DebitAdj
              - Prepayment
            type: string
        - description: Parameter for showing if invoice has been released or not.
          in: query
          name: released
          required: false
          schema:
            format: int32
            type: integer
        - description: Filter by the project with which the document is associated.
          in: query
          name: project
          required: false
          schema:
            type: string
        - description: Set to true to include approval information.
          in: query
          name: expandApproval
          required: false
          schema:
            type: boolean
        - description: Set to true to include description.
          in: query
          name: expandNote
          required: false
          schema:
            type: boolean
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: The status of the document
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Voided
              - Scheduled
              - Open
              - Closed
              - Printed
              - Prebooked
              - Reserved
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierDocumentDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierDocumentDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Gets a range of supplier documents - ScreenId=AP301000\r

        Get a range of Purchase Order - ScreenId=PO301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size\r

        Change log:\r

        2020-May:Added forced pagination"
      tags:
        - SupplierDocument
  /controller/api/v1/supplierlocation:
    get:
      description: Data for the Locations
      operationId: SupplierLocation_GetLocations
      parameters:
        - in: query
          name: locationId
          required: false
          schema:
            type: string
        - in: query
          name: gln
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierLocationDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierLocationDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Locations - List screen=AP3030P1, Entry screen=AP303010\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - SupplierLocation
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SupplierLocation_Create
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SupplierLocationUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SupplierLocationUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SupplierLocationUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SupplierLocationUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SupplierLocationUpdateDto"
        description: Defines the data for the Location to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Location
      tags:
        - SupplierLocation
  "/controller/api/v1/supplierlocation/{bAccountId}":
    get:
      description: Data for the Locations
      operationId: SupplierLocation_GetLocationsForBaccountBybAccountId
      parameters:
        - description: Identifies the BAccount
          in: path
          name: bAccountId
          required: true
          schema:
            type: string
        - in: query
          name: locationId
          required: false
          schema:
            type: string
        - in: query
          name: gln
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierLocationDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupplierLocationDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Locations for a BAccount\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - SupplierLocation
  "/controller/api/v1/supplierlocation/{bAccountId}/{locationId}":
    get:
      operationId: SupplierLocation_GetLocationBybAccountIdlocationId
      parameters:
        - description: Identifies the BAccount
          in: path
          name: bAccountId
          required: true
          schema:
            type: string
        - description: Identifies the Location
          in: path
          name: locationId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupplierLocationDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SupplierLocationDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Location of a Baccount
      tags:
        - SupplierLocation
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: SupplierLocation_UpdateBybAccountIdlocationId
      parameters:
        - description: Identifies the BAccount
          in: path
          name: bAccountId
          required: true
          schema:
            type: string
        - description: Identifies the Location
          in: path
          name: locationId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SupplierLocationUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SupplierLocationUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/SupplierLocationUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/SupplierLocationUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/SupplierLocationUpdateDto"
        description: The data to update for the Location
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific Location
      tags:
        - SupplierLocation
  /controller/api/v1/timeCard:
    get:
      operationId: TimeCard_GetAllEmployeeTimeCards
      parameters:
        - description: The status of the document.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Open
              - Approved
              - Rejected
              - Released
            type: string
        - description: Identifies the week number of the time card
          in: query
          name: week
          required: false
          schema:
            type: string
        - description: Identifies the type of the time card (Normal, Corrected, NormalCorrected)
          in: query
          name: type
          required: false
          schema:
            enum:
              - Normal
              - Correction
              - NormalCorrected
            type: string
        - description: Greater-than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TimeCardDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/TimeCardDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all employee time cards, a filter needs to be specified - ScreenId=EP305000
      tags:
        - TimeCard
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: TimeCard_CreateTimeCard
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeCardUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TimeCardUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/TimeCardUpdateDto"
        description: Defines the data for the time card to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates a time card
      tags:
        - TimeCard
  "/controller/api/v1/timeCard/{referenceNumber}":
    get:
      operationId: TimeCard_GetEmployeeTimeCardByreferenceNumber
      parameters:
        - description: Identifies the time card
          in: path
          name: referenceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeCardDto"
            text/json:
              schema:
                $ref: "#/components/schemas/TimeCardDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific employee time cards
      tags:
        - TimeCard
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: TimeCard_UpdateTimeCardByreferenceNumber
      parameters:
        - description: Identifies the time card to update
          in: path
          name: referenceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeCardUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TimeCardUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/TimeCardUpdateDto"
        description: The data to update the time card with
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Updates a specific time card
      tags:
        - TimeCard
  "/controller/api/v1/timeCard/{timeCardCd}/action/approval":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: TimeCard_SendTimeCardToApprovalBytimeCardCd
      parameters:
        - description: Reference number of the time card to be sent to approval
          in: path
          name: timeCardCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendTimeCardToApprovalActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/SendTimeCardToApprovalActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SendTimeCardToApprovalActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/SendTimeCardToApprovalActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Send time card to approval
      tags:
        - TimeCard
  "/controller/api/v1/timeCard/{timeCardCd}/action/hold":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: TimeCard_PutTimeCardOnHoldBytimeCardCd
      parameters:
        - description: Reference number of the time card to be put on hold
          in: path
          name: timeCardCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutTimeCardOnHoldActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/PutTimeCardOnHoldActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PutTimeCardOnHoldActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/PutTimeCardOnHoldActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Put timecard on hold
      tags:
        - TimeCard
  "/controller/api/v1/timeCard/{timeCardCd}/action/submit":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: TimeCard_SubmitTimeCardBytimeCardCd
      parameters:
        - description: Reference number of the time card to be submitted
          in: path
          name: timeCardCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmitTimeCardActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/SubmitTimeCardActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SubmitTimeCardActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/SubmitTimeCardActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Submit time card operation
      tags:
        - TimeCard
  /controller/api/v1/unitofmeasure:
    get:
      operationId: UnitOfMeasure_GetAllUnitsOfMeasure
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/UnitOfMeasureDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/UnitOfMeasureDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/UnitOfMeasureDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/UnitOfMeasureDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Units of Measure - ScreenId=CS203100
      tags:
        - UnitOfMeasure
  /controller/api/v1/vat:
    get:
      operationId: Vat_GetAllVats
      parameters:
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/VatInformationDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/VatInformationDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Vats - ScreenId=TX205000
      tags:
        - Vat
  "/controller/api/v1/vat/{vatId}":
    get:
      operationId: Vat_GetVatByvatId
      parameters:
        - description: Mandatory. Value for VatID to be looked for.
          in: path
          name: vatId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatInformationDto"
            text/json:
              schema:
                $ref: "#/components/schemas/VatInformationDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Vat - TX205000
      tags:
        - Vat
  "/controller/api/v1/vat/{vendorCd}/{taxPeriodId}/{revisionId}":
    put:
      operationId: Vat_PutVatHeaderNoteByvendorCdtaxPeriodIdrevisionId
      parameters:
        - description: Identifies the tax agency.
          in: path
          name: vendorCd
          required: true
          schema:
            type: string
        - description: Identifies the tax period.
          in: path
          name: taxPeriodId
          required: true
          schema:
            type: string
        - description: Identifies the tax revision.
          in: path
          name: revisionId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNoteDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateNoteDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/UpdateNoteDto"
          text/json:
            schema:
              $ref: "#/components/schemas/UpdateNoteDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/UpdateNoteDto"
        description: Defines the note for the vat header to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2: []
      summary: Update vat header note.
      tags:
        - Vat
  "/controller/api/v1/vat/{vendorCd}/{taxPeriodId}/{revisionId}/{lineNumber}":
    put:
      operationId: Vat_PutVatLineNoteByvendorCdtaxPeriodIdrevisionIdlineNumber
      parameters:
        - description: ""
          in: path
          name: vendorCd
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: taxPeriodId
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: revisionId
          required: true
          schema:
            format: int32
            type: integer
        - description: ""
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNoteDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateNoteDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/UpdateNoteDto"
          text/json:
            schema:
              $ref: "#/components/schemas/UpdateNoteDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/UpdateNoteDto"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2: []
      summary: ""
      tags:
        - Vat
  /controller/api/v1/vatCategory:
    get:
      operationId: VatCategory_GetAllVatCategories
      parameters:
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/VatCategoryDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VatCategoryDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/VatCategoryDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VatCategoryDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of VatCategories - ScreenId=TX205500
      tags:
        - VatCategory
  "/controller/api/v1/vatCategory/{taxCategoryId}":
    get:
      operationId: VatCategory_GetVatCategoryBytaxCategoryId
      parameters:
        - description: Identifies the VatCategory
          in: path
          name: taxCategoryId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatCategoryDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/VatCategoryDto"
            text/json:
              schema:
                $ref: "#/components/schemas/VatCategoryDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/VatCategoryDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific VatCategory
      tags:
        - VatCategory
  /controller/api/v1/vatZone:
    get:
      operationId: VatZone_GetVatZones
      parameters:
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/VatZoneDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/VatZoneDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get Tax Zones - ScreenId=TX206000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - VatZone
  "/controller/api/v1/vatZone/{vatZoneId}":
    get:
      operationId: VatZone_GetVatZoneByvatZoneId
      parameters:
        - description: Identifies the Vat Zone
          in: path
          name: vatZoneId
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VatZoneDto"
            text/json:
              schema:
                $ref: "#/components/schemas/VatZoneDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Vat Zone
      tags:
        - VatZone
  /controller/api/v1/warehouse:
    get:
      operationId: Warehouse_GetAll
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/WarehouseDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/WarehouseDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of Warehouses - ScreenId=IN204000
      tags:
        - Warehouse
  "/controller/api/v1/warehouse/{warehouseID}":
    get:
      operationId: Warehouse_GetBywarehouseID
      parameters:
        - description: Identifies the Warehouse
          in: path
          name: warehouseID
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WarehouseDto"
            text/json:
              schema:
                $ref: "#/components/schemas/WarehouseDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Warehouse
      tags:
        - Warehouse
  "/controller/api/v1/warehouse/{warehouseID}/location":
    post:
      operationId: Warehouse_PostBywarehouseID
      parameters:
        - in: path
          name: warehouseID
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/WarehouseLocationUpdateDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Post new location - ScreenId=IN204000
      tags:
        - Warehouse
  "/controller/api/v1/warehouse/{warehouseID}/location/{locationID}":
    put:
      operationId: Warehouse_PutBywarehouseIDlocationID
      parameters:
        - in: path
          name: warehouseID
          required: true
          schema:
            type: string
        - in: path
          name: locationID
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/WarehouseLocationUpdateDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update location - ScreenId=IN204000
      tags:
        - Warehouse
  /controller/api/v1/webhooknotificationfeedback:
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: WebhookNotificationFeedback_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebhookNotificationFeedbackDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/WebhookNotificationFeedbackDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/WebhookNotificationFeedbackDto"
          text/json:
            schema:
              $ref: "#/components/schemas/WebhookNotificationFeedbackDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/WebhookNotificationFeedbackDto"
        description: Define the data for the WebhookNotificationFeedback to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2: []
      summary: Creates/Inserts a WebhookNotificationFeedback
      tags:
        - WebhookNotificationFeedback
  /controller/api/v2/PurchaseReceipt:
    get:
      operationId: PurchaseReceiptV2_GetAllReceipts
      parameters:
        - in: query
          name: receiptType
          required: false
          schema:
            enum:
              - PoReceipt
              - PoReturn
              - TransferReceipt
            type: string
        - in: query
          name: status
          required: false
          schema:
            enum:
              - Hold
              - Balanced
              - Released
            type: string
        - in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: supplier
          required: false
          schema:
            type: string
        - in: query
          name: poOrderNbr
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PurchaseReceiptDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/PurchaseReceiptDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Purchase Receipts - ScreenId=PO302000\r

        Please use a page size lower or equal to the allowed max page size which is 500"
      tags:
        - PurchaseReceiptV2
  "/controller/api/v2/PurchaseReceipt/{receiptNumber}":
    get:
      operationId: PurchaseReceiptV2_GetPurchaseReceiptByreceiptNumber
      parameters:
        - description: Identifies the Purchase Receipt
          in: path
          name: receiptNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseReceiptDto"
            text/json:
              schema:
                $ref: "#/components/schemas/PurchaseReceiptDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Purchase Receipt
      tags:
        - PurchaseReceiptV2
  /controller/api/v2/currencyrate:
    get:
      operationId: CurrencyRate_GetAll
      parameters:
        - description: From effective date.
          in: query
          name: fromDate
          required: false
          schema:
            format: date-time
            type: string
        - description: To effective date.
          in: query
          name: toDate
          required: false
          schema:
            format: date-time
            type: string
        - description: Identifies from currency.
          in: query
          name: fromCurrency
          required: false
          schema:
            type: string
        - description: Identifies to currency.
          in: query
          name: toCurrency
          required: false
          schema:
            type: string
        - description: Identifies rate type.
          in: query
          name: rateType
          required: false
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyRateDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyRateDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyRateDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyRateDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all currency rates.
      tags:
        - CurrencyRate
    post:
      operationId: CurrencyRate_PostCurrencyRate
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCurrencyRateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateCurrencyRateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CreateCurrencyRateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CreateCurrencyRateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CreateCurrencyRateDto"
        description: Defines the data for the Currency Rate to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create currency rate.
      tags:
        - CurrencyRate
  "/controller/api/v2/currencyrate/{currencyRateId}":
    put:
      operationId: CurrencyRate_PutCurrencyRateBycurrencyRateId
      parameters:
        - description: Identifies the currency rate id.
          in: path
          name: currencyRateId
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCurrencyRateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateCurrencyRateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/UpdateCurrencyRateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/UpdateCurrencyRateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/UpdateCurrencyRateDto"
        description: Defines the data for the currency rate to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update Currency rate.
      tags:
        - CurrencyRate
  /controller/api/v2/currencyratetype:
    get:
      operationId: CurrencyRateType_GetAll
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyRateTypeDto"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyRateTypeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyRateTypeDto"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CurrencyRateTypeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get currency rate types.
      tags:
        - CurrencyRateType
    post:
      operationId: CurrencyRateType_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCurrencyRateTypeDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateCurrencyRateTypeDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CreateCurrencyRateTypeDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CreateCurrencyRateTypeDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CreateCurrencyRateTypeDto"
        description: Defines the data for the currency rate type to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create currency rate type.
      tags:
        - CurrencyRateType
  /controller/api/v2/customerCreditNote:
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerCreditNoteV2_Create
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CustomerCreditNoteUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Customer Credit Note. ScreenID=AR301000
      tags:
        - CustomerCreditNoteV2
  /controller/api/v2/customerDebitNote:
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerDebitNoteV2_Create
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CustomerDebitNoteUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Customer Debit Note. ScreenID=AR301000
      tags:
        - CustomerDebitNoteV2
  /controller/api/v2/customerinvoice:
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: CustomerInvoiceV2_Create
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CustomerInvoiceUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create an Invoice. ScreenID=AR301000
      tags:
        - CustomerInvoiceV2
  /controller/api/v2/discount:
    get:
      operationId: DiscountV2_GetDiscounts
      parameters:
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: System retrieved information for created date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: discountCode
          required: false
          schema:
            type: string
        - in: query
          name: series
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DiscountDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/DiscountDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of discounts - ScreenId=AR209500
      tags:
        - DiscountV2
  /controller/api/v2/discountCode:
    get:
      operationId: DiscountCodeV2_GetDiscountCodes
      parameters:
        - in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: System retrieved information for created date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - in: query
          name: discountCode
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DiscountCodeDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/DiscountCodeDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a range of discount codes - ScreenId=AR209000
      tags:
        - DiscountCodeV2
  /controller/api/v2/generalLedgerBalance:
    get:
      operationId: GeneralLedgerBalanceV2_GetGeneralLedgerBalances
      parameters:
        - description: "Period to retrieve balance for. Mandatory if 'LastModifiedDateTime' not provided. Format: 'yyyyMM'"
          in: query
          name: periodId
          required: false
          schema:
            type: string
        - description: Account to retrieve balance for
          in: query
          name: account
          required: false
          schema:
            type: string
        - description: Ledger to retrieve balance for
          in: query
          name: ledger
          required: false
          schema:
            type: string
        - description: Branch to retrieve balance for
          in: query
          name: branch
          required: false
          schema:
            type: string
        - description: Balance Type of the ledger to be exported
          in: query
          name: balanceType
          required: false
          schema:
            enum:
              - Actual
              - Report
              - Statistical
              - Budget
            type: string
        - description: Parameter can be used in order to change the balance sign for liability and income accounts
          in: query
          name: toggleBalanceSigns
          required: false
          schema:
            type: boolean
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            Mandatory if 'PeriodId' is not provided.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```"
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            format: date-time
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GeneralLedgerBalanceDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/GeneralLedgerBalanceDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of General Ledger Balances. Complete documentation can be found under 8.21  release notes. \r

        Please use a page size lower or equal to the allowed max page size which is returned under metadata. \r

        If pagesize is greater than the max page size, it will be limited to max page size."
      tags:
        - GeneralLedgerBalanceV2
  /controller/api/v2/journaltransaction:
    get:
      operationId: JournalTransactionV2_GetAllJournalTransactions
      parameters:
        - description: "Financial Period to query data for. Mandatory if 'LastModifiedDateTime' not provided. Format: YYYYPP"
          in: query
          name: periodId
          required: false
          schema:
            type: string
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            Mandatory if 'PeriodId' is not provided. \r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```"
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "Module to query data for. Allowed values: GL, AP, AR, CM, CA, IN, DR, FA, PM"
          in: query
          name: module
          required: false
          schema:
            type: string
        - description: "If true there will be exported the batches having Released flag on true. \r

            If false there will be exported the batches having Released flag on false. \r

            If not set no filtering based on Released flag is applied"
          in: query
          name: releasedBatch
          required: false
          schema:
            type: boolean
        - description: If true there will be included all attachments regarding batch. Default on false
          in: query
          name: expandAttachments
          required: false
          schema:
            type: boolean
        - description: Branch to query data for.
          in: query
          name: branch
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/JournalTransactionDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/JournalTransactionDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of Journal Transactions - ScreenId=GL301000. \r

        On this particular endpoint, pagesize and totalcount denotes number of journaltransaction lines. \r

        When using pagination, the transactions for one specific batch can be split into several responses. \r

        Please use a page size lower or equal to the allowed max page size which is returned under metadata. \r

        If pagesize is greater than the max page size, it will be limited to max page size."
      tags:
        - JournalTransactionV2
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: JournalTransactionV2_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JournalTransactionUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/JournalTransactionUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/JournalTransactionUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/JournalTransactionUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/JournalTransactionUpdateDto"
        description: Defines the data for the Journal Transaction to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Journal Transaction
      tags:
        - JournalTransactionV2
  "/controller/api/v2/journaltransaction/module/{module}/{journalTransactionNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: JournalTransactionV2_AddHeaderAttachmentBymodulejournalTransactionNumber
      parameters:
        - description: "Identifies journal transaction module allowed values are: GL, AP, AR, CM, CA, IN, DR, FA, PM, TX, SO, PO."
          in: path
          name: module
          required: true
          schema:
            type: string
        - description: Identifies the journal transaction number
          in: path
          name: journalTransactionNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with an journalTransaction. If the file already exists, a new revision is created.
      tags:
        - JournalTransactionV2
  "/controller/api/v2/journaltransaction/module/{module}/{journalTransactionNumber}/{lineNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: JournalTransactionV2_AddLineAttachmentBymodulejournalTransactionNumberlineNumber
      parameters:
        - description: "Identifies journal transaction module allowed values are: GL, AP, AR, CM, CA, IN, DR, FA, PM, TX, SO, PO."
          in: path
          name: module
          required: true
          schema:
            type: string
        - description: Identifies the journalTransaction
          in: path
          name: journalTransactionNumber
          required: true
          schema:
            type: string
        - description: Identifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a certain journalTransaction line. If the file already exists, a new revision is created.
      tags:
        - JournalTransactionV2
  "/controller/api/v2/journaltransaction/{journalTransactionNumber}":
    get:
      operationId: JournalTransactionV2_GetSpecificJournalTransactionsByjournalTransactionNumber
      parameters:
        - description: Identifies the Journal Transaction
          in: path
          name: journalTransactionNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JournalTransactionDto"
            text/json:
              schema:
                $ref: "#/components/schemas/JournalTransactionDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific Journal Transaction
      tags:
        - JournalTransactionV2
    put:
      description: Response Message has StatusCode NoContent if PUT operation succeed
      operationId: JournalTransactionV2_PutByjournalTransactionNumber
      parameters:
        - description: Identifies the Journal Transaction to update
          in: path
          name: journalTransactionNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JournalTransactionUpdateDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/JournalTransactionUpdateDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/JournalTransactionUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/JournalTransactionUpdateDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/JournalTransactionUpdateDto"
        description: Defines the data for the Journal Transaction to update
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a Journal Transaction
      tags:
        - JournalTransactionV2
  "/controller/api/v2/journaltransaction/{journalTransactionNumber}/action/release":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: JournalTransactionV2_ReleaseJournalTransactionByjournalTransactionNumber
      parameters:
        - description: Reference number of the journal transaction to be released
          in: path
          name: journalTransactionNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseJournalTransactionActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReleaseJournalTransactionActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReleaseJournalTransactionActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReleaseJournalTransactionActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Release journal transaction operation
      tags:
        - JournalTransactionV2
  /controller/api/v2/salesorder:
    get:
      description: Data for all Sales Orders
      operationId: SalesOrderV2_GetAllOrders_V2
      parameters:
        - description: Filter by Order type.
          in: query
          name: orderType
          required: false
          schema:
            type: string
        - description: Select to filter on status on order.
          in: query
          name: status
          required: false
          schema:
            enum:
              - Open
              - Hold
              - CreditHold
              - Completed
              - Cancelled
              - BackOrder
              - Shipping
              - Invoiced
              - PendingApproval
              - Voided
            type: string
        - description: Filter on Order no. greater than value.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: Set to true to include notes.
          in: query
          name: showNotes
          required: false
          schema:
            type: boolean
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesOrderDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of SO Orders - ScreenId=SO301000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r

        If requested page size is greater than allowed max page size, request will be limited to max page size"
      tags:
        - SalesOrderV2
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderV2_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SalesOrderUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Sale Order
      tags:
        - SalesOrderV2
  "/controller/api/v2/salesorder/orderType/{orderType}/{orderNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderV2_CreateHeaderAttachmentByorderNumberorderType
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a sales order on a specific order type. If the file already exists, a new revision is created.
      tags:
        - SalesOrderV2
  "/controller/api/v2/salesorder/orderType/{orderType}/{orderNumber}/{lineNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderV2_CreateLineAttachmentByorderNumberorderTypelineNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a certain sales order line on a specific order type. If the file already exists, a new revision is created.
      tags:
        - SalesOrderV2
  "/controller/api/v2/salesorder/{orderNbr}":
    get:
      description: Data for a single Sales Order
      operationId: SalesOrderV2_GetByorderNbr
      parameters:
        - description: Identifies the Sales Order Number
          in: path
          name: orderNbr
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesOrderDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SalesOrderDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific SO Order
      tags:
        - SalesOrderV2
  "/controller/api/v2/salesorder/{orderNumber}/attachment":
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderV2_CreateHeaderAttachmentByorderNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: "Creates an attachment and associates it with a sales order. If the file already exists, a new revision is created.\r

        - Method is deprecated and will be removed in a future version. Please start using the new method with order type."
      tags:
        - SalesOrderV2
  "/controller/api/v2/salesorder/{orderNumber}/{lineNumber}/attachment":
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderV2_CreateLineAttachmentByorderNumberlineNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: "Creates an attachment and associates it with a certain sales order line. If the file already exists, a new revision is created.\r

        - Method is deprecated and will be removed in a future version. Please start using the new method with order type."
      tags:
        - SalesOrderV2
  "/controller/api/v2/salesorder/{saleOrderNumber}/action/cancelSalesOrder":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SalesOrderV2_CancelSalesOrderBysaleOrderNumber
      parameters:
        - description: Reference number of the sale oreder that will be cancelled
          in: path
          name: saleOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CancelSalesOrderActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelSalesOrderActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/CancelSalesOrderActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CancelSalesOrderActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/CancelSalesOrderActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Cancel Order action
      tags:
        - SalesOrderV2
  "/controller/api/v2/salesorder/{saleOrderNumber}/action/createPurchaseOrders":
    post:
      description: The action result dto contains list of created purchase order numbers and list of errors if any
      operationId: SalesOrderV2_CreatePurchaseOrdersActionBysaleOrderNumber
      parameters:
        - description: Reference number of the sale oreder from which the purchase order will be created
          in: path
          name: saleOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePurchaseOrderActionDto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreatePurchaseOrderActionDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/CreatePurchaseOrderActionDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CreatePurchaseOrderActionDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/CreatePurchaseOrderActionDto"
        description: Defines the data for the action
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "207":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Multi-Status
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: "This will create 0..n PO based on SO according to the following rules for the lines on the SO\r

        - Only issue lines\r

        - Only create PO based on lines with supplier\r

        - Create PO (0..n) for each supplier on the SO lines\r

        - Create PO type purchase/drop shipment based on PO Source on SO line\r

        - If no supplier on inventory item exist the SO line will not have a corresponding PO line (response should point to lines with no supplier in either SO line or inventory item)\r

        - If 'createPurchaseOrderActionDto.preferSupplierFromSOLine' is false then the default supplier for SOLine inventory item will be used if any\r

        - If 'createPurchaseOrderActionDto.preferSupplierFromSOLine' is true then the supplier from the SOLine inventory item will be used; if there is no supplier on SOLine then the default supplier for SOLine inventory item will be used if any"
      tags:
        - SalesOrderV2
  "/controller/api/v2/salesorder/{saleOrderNumber}/action/createShipment":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SalesOrderV2_CreateShipmentActionBysaleOrderNumber
      parameters:
        - description: Reference number of the sale oreder from which the shipment will be created
          in: path
          name: saleOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CreateShipmentActionDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateShipmentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CreateShipmentActionResultDto"
          description: NoContent
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "409":
          description: Conflict. Order cannot be shipped in full, shipping rule Ship Complete requires all items to be in stock.
        "500":
          description: Internal Server Error
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Create shipment operation
      tags:
        - SalesOrderV2
  "/controller/api/v2/salesorder/{salesOrderNumber}/action/reopenSalesOrder":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SalesOrderV2_ReopenSalesOrderBysalesOrderNumber
      parameters:
        - description: Identifies the Sale Order to reopen
          in: path
          name: salesOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ReopenSalesOrderActionDto"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReopenSalesOrderActionResultDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/ReopenSalesOrderActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ReopenSalesOrderActionResultDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/ReopenSalesOrderActionResultDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Reopen and update a specific Sales Order. This method requires a sales order update dto where the order type is initialised.
      tags:
        - SalesOrderV2
  /controller/api/v2/salesorderbasic:
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderBasicV2_Post
      parameters:
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SalesOrderBasicUpdateDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a Sale Order
      tags:
        - SalesOrderBasicV2
  "/controller/api/v2/salesorderbasic/orderType/{orderType}/{orderNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderBasicV2_CreateHeaderAttachmentByorderNumberorderType
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: Identifies the sales order type
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a sales order on a specific order type. If the file already exists, a new revision is created.
      tags:
        - SalesOrderBasicV2
  "/controller/api/v2/salesorderbasic/orderType/{orderType}/{orderNumber}/{lineNumber}/attachment":
    post:
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderBasicV2_CreateLineAttachmentByorderNumberorderTypelineNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: Identifies the sales order type
          in: path
          name: orderType
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Creates an attachment and associates it with a certain sales order line on a specific order type. If the file already exists, a new revision is created.
      tags:
        - SalesOrderBasicV2
  "/controller/api/v2/salesorderbasic/{orderNumber}/attachment":
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderBasicV2_CreateHeaderAttachmentByorderNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: "Creates an attachment and associates it with a sales order. If the file already exists, a new revision is created.\r

        - Method is deprecated and will be removed in a future version. Please start using the new method with order type."
      tags:
        - SalesOrderBasicV2
  "/controller/api/v2/salesorderbasic/{orderNumber}/{lineNumber}/attachment":
    post:
      deprecated: true
      description: Response Message has StatusCode Created if POST operation succeed
      operationId: SalesOrderBasicV2_CreateLineAttachmentByorderNumberlineNumber
      parameters:
        - description: Identifies the sales order
          in: path
          name: orderNumber
          required: true
          schema:
            type: string
        - description: Specifies line number
          in: path
          name: lineNumber
          required: true
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: "Creates an attachment and associates it with a certain sales order line. If the file already exists, a new revision is created.\r

        - Method is deprecated and will be removed in a future version. Please start using the new method with order type."
      tags:
        - SalesOrderBasicV2
  "/controller/api/v2/salesorderbasic/{saleOrderNumber}/action/createShipment":
    post:
      description: The action result dto contains information about the result of running the action
      operationId: SalesOrderBasicV2_CreateShipmentActionBysaleOrderNumber
      parameters:
        - description: Reference number of the sale oreder from which the shipment will be created
          in: path
          name: saleOrderNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CreateShipmentActionDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateShipmentActionResultDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CreateShipmentActionResultDto"
          description: NoContent
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "409":
          description: Conflict. Order cannot be shipped in full, shipping rule Ship Complete requires all items to be in stock.
        "500":
          description: Internal Server Error
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Crete shipment operation
      tags:
        - SalesOrderBasicV2
  /controller/api/v2/salesperson:
    get:
      operationId: SalesPersonV2_GetSalespersons
      parameters:
        - in: query
          name: salespersonCD
          required: false
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: isActive
          required: false
          schema:
            type: boolean
        - in: query
          name: commissionPct
          required: false
          schema:
            format: double
            type: number
        - in: query
          name: salesSub
          required: false
          schema:
            type: string
        - description: Greater than value. The item which is the object for this, varies from API to API.
          in: query
          name: greaterThanValue
          required: false
          schema:
            type: string
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: numberToRead
          required: false
          schema:
            format: int32
            type: integer
        - description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          in: query
          name: skipRecords
          required: false
          schema:
            format: int32
            type: integer
        - description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Creation date and time.
          in: query
          name: createdDateTime
          required: false
          schema:
            type: string
        - description: System-retrieved information for state/condition
          in: query
          name: createdDateTimeCondition
          required: false
          schema:
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesPersonDto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/SalesPersonDto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get all or a range of Salespersons - screen ID: AR205000\r

        Please use a page size lower or equal to the allowed max page size which is returned under metadata. \r

        If pagesize is greater than the max page size, it will be limited to max page size."
      tags:
        - SalesPersonV2
  "/controller/api/v2/salesperson/{salespersonCd}":
    get:
      operationId: SalesPersonV2_GetSalespersonBysalespersonCd
      parameters:
        - description: Identifies the Salesperson
          in: path
          name: salespersonCd
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesPersonDto"
            text/json:
              schema:
                $ref: "#/components/schemas/SalesPersonDto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a specific Salesperson - screen ID: AR205000"
      tags:
        - SalesPersonV2
  /controller/api/v2/stocktake:
    get:
      operationId: StocktakeV2_GetAllStocktakes
      parameters:
        - description: Filter by Warehouse.
          in: query
          name: warehouse
          required: false
          schema:
            type: string
        - description: Filter by Location.
          in: query
          name: location
          required: false
          schema:
            type: string
        - description: Filter by Inventory.
          in: query
          name: inventory
          required: false
          schema:
            type: string
        - description: Filter by LotSerialNumber.
          in: query
          name: lotSerialNumber
          required: false
          schema:
            type: string
        - description: Filter by SummaryStatus.
          in: query
          name: summaryStatus
          required: false
          schema:
            enum:
              - Cancelled
              - Completed
              - Counting
              - Entering
            type: string
        - description: Filter by LineNumber GreaterEqual StartWithLine.
          in: query
          name: startWithLine
          required: false
          schema:
            format: int32
            type: integer
        - description: Filter by by LineNumber LessEqual EndWithLine.
          in: query
          name: endWithLine
          required: false
          schema:
            format: int32
            type: integer
        - description: Filter by FreezeDateTime.
          in: query
          name: freezeDateTime
          required: false
          schema:
            type: string
        - description: Filter by FreezeDateTimeCondition.
          in: query
          name: freezeDateTimeCondition
          required: false
          schema:
            type: string
        - description: "System generated value for last modification of transaction/record. Use format: YYYY-MM-DD HH:MM (date and time) to filter from date to present.."
          in: query
          name: lastModifiedDateTime
          required: false
          schema:
            type: string
        - description: System retrieved information for state/condition.
          in: query
          name: lastModifiedDateTimeCondition
          required: false
          schema:
            type: string
        - description: Filter by ExpirationDateTime.
          in: query
          name: expirationDateTime
          required: false
          schema:
            type: string
        - description: Filter by ExpirationDateTimeCondition.
          in: query
          name: expirationDateTimeCondition
          required: false
          schema:
            type: string
        - description: Filter by StocktakeLineStatus.
          in: query
          name: status
          required: false
          schema:
            enum:
              - NotEntered
              - Entered
              - Skipped
            type: string
        - description: Pagination parameter. Page number.
          in: query
          name: pageNumber
          required: false
          schema:
            format: int32
            type: integer
        - description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          in: query
          name: pageSize
          required: false
          schema:
            format: int32
            type: integer
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/StocktakeV2Dto"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/StocktakeV2Dto"
                type: array
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: "Get a range of stocktakes - ScreenId=IN305000\r

        Request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information. If requested page size is greater than allowed max page size, request will be limited to max page size."
      tags:
        - StocktakeV2
  "/controller/api/v2/stocktake/{referenceNumber}":
    get:
      operationId: StocktakeV2_GetByreferenceNumber
      parameters:
        - description: Identifies the Stocktake
          in: path
          name: referenceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StocktakeV2Dto"
            text/json:
              schema:
                $ref: "#/components/schemas/StocktakeV2Dto"
          description: OK
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific
      tags:
        - StocktakeV2
    put:
      description: "Response Message has StatusCode NoContent if PUT operation succeed\r

        \r

        Response Message has StatusCode BadRequest if PUT operation failed \r

        \r

        If PUT operation failed, Response body contains all stocktake line details (the ones that have values), the error message and also an error code (The first member of StocktakeExceptionErrorCode will be 0, and the value of each successive enum member is increased by 1)"
      operationId: StocktakeV2_PutByreferenceNumber
      parameters:
        - description: Identifies the stocktake to update
          in: path
          name: referenceNumber
          required: true
          schema:
            type: string
        - description: If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation.
          in: header
          name: erp-api-background
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/StocktakeUpdateDto"
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
            text/json:
              schema:
                $ref: "#/components/schemas/BackgroundApiAcceptedDto"
          description: Server accepted and queued the request for background execution.
        "204":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
          description: NoContent
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StocktakeV2ExceptionDto"
            text/json:
              schema:
                $ref: "#/components/schemas/StocktakeV2ExceptionDto"
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific stocktake
      tags:
        - StocktakeV2
  /resources/v1/event:
    get:
      description: Lists the events from Visma.net for which users can subscribe.
      operationId: getAllEvents
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/EventDto"
                type: array
          description: successful operation
      summary: Get all events
      tags:
        - Event
  /resources/v1/notification:
    get:
      description: ""
      operationId: findByNotificationDateOrEventType
      parameters:
        - in: query
          name: eventType
          required: false
          schema:
            type: string
        - description: "Use format: YYYY-MM-DD HH:mm:ss"
          in: query
          name: dateFrom
          required: false
          schema:
            format: date-time
            type: string
        - description: "Use format: YYYY-MM-DD HH:mm:ss"
          in: query
          name: dateTo
          required: false
          schema:
            format: date-time
            type: string
        - in: query
          name: pageNumber
          required: false
          schema:
            type: integer
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationDto"
          description: successful operation
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get notifications filtered by event type and/or date.
      tags:
        - Notification
  /resources/v1/notification/failed:
    get:
      description: ""
      operationId: getRetryNotificationList
      parameters:
        - in: query
          name: eventType
          required: true
          schema:
            type: string
        - description: "Use format: YYYY-MM-DD HH:mm:ss"
          in: query
          name: dateFrom
          required: false
          schema:
            format: date-time
            type: string
        - description: "Use format: YYYY-MM-DD HH:mm:ss"
          in: query
          name: dateTo
          required: false
          schema:
            format: date-time
            type: string
        - in: query
          name: pageNumber
          required: false
          schema:
            type: integer
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationDto"
          description: successful operation
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get failed notifications filtered by event type and/or date.
      tags:
        - Notification
  "/resources/v1/notification/{notificationId}":
    get:
      description: ""
      operationId: getNotificationInfo
      parameters:
        - in: path
          name: notificationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationReceivedDto"
          description: successful operation
      summary: Get notification details by notification ID.
      tags:
        - Notification
  /resources/v1/serviceStatus:
    get:
      description: ""
      operationId: allServiceStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/StatusPageComponentDto"
                type: array
          description: successful operation
      summary: Get the list of all available services
      tags:
        - ServiceStatus
  /resources/v1/subscription:
    get:
      description: ""
      operationId: getAllSubscriptions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SubscriptionDto"
                type: array
          description: Success
        default:
          description: successful operation
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get all subscriptions made by the current user
      tags:
        - Subscription
    post:
      description: ""
      operationId: createSubscription
      requestBody:
        $ref: "#/components/requestBodies/SubscriptionDto"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionDto"
          description: Success
          headers:
            Location:
              description: URL of the new Subscription.
              schema:
                type: string
        default:
          description: successful operation
      security:
        - oauth2:
            - vismanet_erp_interactive_api:create
      summary: Create a new subscription for the current user
      tags:
        - Subscription
  "/resources/v1/subscription/{id}":
    delete:
      description: ""
      operationId: deleteSubscription
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
        default:
          description: successful operation
      security:
        - oauth2:
            - vismanet_erp_interactive_api:delete
      summary: Delete a specific subscription
      tags:
        - Subscription
    get:
      description: ""
      operationId: findSubscriptionById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionDto"
          description: Success
        default:
          description: successful operation
      security:
        - oauth2:
            - vismanet_erp_interactive_api:read
      summary: Get a specific subscription
      tags:
        - Subscription
    put:
      description: ""
      operationId: updateSubscription
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/SubscriptionDto"
      responses:
        "204":
          description: Success
        default:
          description: successful operation
      security:
        - oauth2:
            - vismanet_erp_interactive_api:update
      summary: Update a specific subscription
      tags:
        - Subscription
components:
  requestBodies:
    BankSettingsUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BankSettingsUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/BankSettingsUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/BankSettingsUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/BankSettingsUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/BankSettingsUpdateDto"
      description: Defines the data for the bank settings to update
      required: true
    CancelSalesOrderActionDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CancelSalesOrderActionDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CancelSalesOrderActionDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/CancelSalesOrderActionDto"
        text/json:
          schema:
            $ref: "#/components/schemas/CancelSalesOrderActionDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/CancelSalesOrderActionDto"
      description: Defines the data for the action
      required: true
    CreateShipmentActionDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateShipmentActionDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CreateShipmentActionDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/CreateShipmentActionDto"
        text/json:
          schema:
            $ref: "#/components/schemas/CreateShipmentActionDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/CreateShipmentActionDto"
      description: Defines the data for the action
      required: true
    CustomerCreditNoteUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CustomerCreditNoteUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CustomerCreditNoteUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/CustomerCreditNoteUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/CustomerCreditNoteUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/CustomerCreditNoteUpdateDto"
      description: Defines the data for the Credit Note to create
      required: true
    CustomerDebitNoteUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CustomerDebitNoteUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CustomerDebitNoteUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/CustomerDebitNoteUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/CustomerDebitNoteUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/CustomerDebitNoteUpdateDto"
      description: Defines the data for the Debit Note to create
      required: true
    CustomerInvoiceUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CustomerInvoiceUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CustomerInvoiceUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/CustomerInvoiceUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/CustomerInvoiceUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/CustomerInvoiceUpdateDto"
      description: Defines the data for the Invoice to create
      required: true
    CustomerUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CustomerUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CustomerUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/CustomerUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/CustomerUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/CustomerUpdateDto"
      description: The data to update for the customer
      required: true
    DiscountUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DiscountUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/DiscountUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/DiscountUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/DiscountUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/DiscountUpdateDto"
      required: true
    ExpenseReceiptUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ExpenseReceiptUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/ExpenseReceiptUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/ExpenseReceiptUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/ExpenseReceiptUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/ExpenseReceiptUpdateDto"
      description: Defines the data for the Expense Receipt to create
      required: true
    InventoryCrossReferenceUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InventoryCrossReferenceUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/InventoryCrossReferenceUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/InventoryCrossReferenceUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/InventoryCrossReferenceUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/InventoryCrossReferenceUpdateDto"
      required: true
    InventoryUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InventoryUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/InventoryUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/InventoryUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/InventoryUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/InventoryUpdateDto"
      description: The data to update for inventory item
      required: true
    PaymentUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PaymentUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/PaymentUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/PaymentUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/PaymentUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/PaymentUpdateDto"
      description: Defines the data for the Payment to create
      required: true
    PaymentUpdateDto2:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PaymentUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/PaymentUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/PaymentUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/PaymentUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/PaymentUpdateDto"
      description: Defines the data for the Payment to update
      required: true
    ProjectTaskUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProjectTaskUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/ProjectTaskUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/ProjectTaskUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/ProjectTaskUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/ProjectTaskUpdateDto"
      description: Defines the data for the Task to update
      required: true
    ProjectUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProjectUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/ProjectUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/ProjectUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/ProjectUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/ProjectUpdateDto"
      description: Defines the data for the Project to update
      required: true
    ReleasePaymentActionDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReleasePaymentActionDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/ReleasePaymentActionDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/ReleasePaymentActionDto"
        text/json:
          schema:
            $ref: "#/components/schemas/ReleasePaymentActionDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/ReleasePaymentActionDto"
      description: Contains the type of the payment
      required: true
    ReopenSalesOrderActionDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReopenSalesOrderActionDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/ReopenSalesOrderActionDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/ReopenSalesOrderActionDto"
        text/json:
          schema:
            $ref: "#/components/schemas/ReopenSalesOrderActionDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/ReopenSalesOrderActionDto"
      required: true
    ReverseInvoiceActionDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReverseInvoiceActionDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/ReverseInvoiceActionDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/ReverseInvoiceActionDto"
        text/json:
          schema:
            $ref: "#/components/schemas/ReverseInvoiceActionDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/ReverseInvoiceActionDto"
      description: The action the dto use to condition the action
      required: true
    SalesOrderBasicUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesOrderBasicUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/SalesOrderBasicUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/SalesOrderBasicUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/SalesOrderBasicUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/SalesOrderBasicUpdateDto"
      description: Defines the data for the Sale Order to create
      required: true
    SalesOrderUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesOrderUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/SalesOrderUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/SalesOrderUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/SalesOrderUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/SalesOrderUpdateDto"
      description: Defines the data for the Sale Order to create
      required: true
    StocktakeUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StocktakeUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/StocktakeUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/StocktakeUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/StocktakeUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/StocktakeUpdateDto"
      description: The data to update for stocktake
      required: true
    SubscriptionDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SubscriptionDto"
      required: true
    SupplierInvoiceUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SupplierInvoiceUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/SupplierInvoiceUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/SupplierInvoiceUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/SupplierInvoiceUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/SupplierInvoiceUpdateDto"
      description: Defines the data for the Invoice to update
      required: true
    VoidPaymentActionDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VoidPaymentActionDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/VoidPaymentActionDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/VoidPaymentActionDto"
        text/json:
          schema:
            $ref: "#/components/schemas/VoidPaymentActionDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/VoidPaymentActionDto"
      description: Contains the type of the payment
      required: true
    WarehouseLocationUpdateDto:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WarehouseLocationUpdateDto"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/WarehouseLocationUpdateDto"
        application/xml:
          schema:
            $ref: "#/components/schemas/WarehouseLocationUpdateDto"
        text/json:
          schema:
            $ref: "#/components/schemas/WarehouseLocationUpdateDto"
        text/xml:
          schema:
            $ref: "#/components/schemas/WarehouseLocationUpdateDto"
      required: true
  schemas:
    ARSPCommnHistoryDto:
      properties:
        commnAmt:
          format: double
          type: number
        commnPeriod:
          type: string
        commnblAmt:
          format: double
          type: number
        errorInfo:
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        prProcessedDate:
          format: date-time
          type: string
      type: object
    AccountDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    AccountDto:
      properties:
        accountCD:
          description: "Mandatory field: The table &gt; Account* &gt; The unique identifier of the general ledger account in the system."
          type: string
        accountClass:
          description: The table &gt; Account class &gt; Optional. The account class to which the account is assigned.
          type: string
        accountGroupCD:
          description: The table &gt; Account group &gt; The account group (used in project management if the Projects module has been activated) that includes this account.
          type: string
        accountID:
          description: The table &gt; AccountID &gt; The Account ID is the actual ID that the account have in the database and are used in other tables as the relation between the Chart of accounts table and other tables.
          format: int32
          type: integer
        active:
          description: The table &gt; Active &gt; A check box that indicates that the account is active.
          type: boolean
        analysisCode:
          description: The table &gt; Analysis code &gt; A field that can be used for sorting and inquiries.  Either enter in field or predfine in GL20253S.
          type: string
        cashAccount:
          description: The table &gt; Cash account &gt; A check box that indicates (if selected) that the account has a cash account or multiple cash accounts linked to it.
          type: boolean
        currency:
          description: "The table &gt; Currency &gt; Optional: This column appears only if support for multiple currencies has been activated for the system."
          type: string
        description:
          description: The table &gt; Description &gt; An alphanumeric string of up to 30 characters that describes the account.
          type: string
        externalCode1:
          description: The table &gt; External code 1 &gt; A field that can be used for sorting and inquiries.  Either enter in field or predfine in GL20251S.
          type: string
        externalCode2:
          description: The table &gt; External code 2 &gt; A field that can be used for sorting and inquiries.  Either enter in field or predfine in GL20252S.
          type: string
        lastModifiedDateTime:
          description: This information is not visible in the window.  It is collected from the system.
          format: date-time
          type: string
        postOption:
          description: The table &gt; Post option &gt; An option that defines how transactions created in other workspaces are posted to this account. Summary (default) or Detail.
          type: string
        publicCode1:
          description: The table &gt; Public code 1 &gt; The authorities valid code mapped to the account. Used for example in SAF-T and in some nationals reporting to the authorities.
          format: int32
          type: integer
        taxCategory:
          description: The table &gt; VAT category &gt; A tax category that you define for the selected account. When you create a journal transaction manually in the GL301000 window, based on this VAT category, the taxable amount will be calculated for the journal entry.
          type: string
        type:
          description: "The table &gt; Type &gt; The type of account: Asset, Liability, Income, or Expense."
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
        useDefaultSub:
          description: The table &gt; Use default sub &gt; A check box that causes the system (if selected) to set the default subaccount as the Subaccount if the account is selected.
          type: boolean
      type: object
    AccountGroupDto:
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
      type: object
    AccountNumberDescriptionDto:
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: ExternalCode1 is deprecated, please use ExternalCode1Info instead.
          type: string
        externalCode1Info:
          $ref: "#/components/schemas/ExternalCodeNumberDescriptionDto"
        externalCode2:
          description: ExternalCode2 is deprecated, please use ExternalCode2Info instead.
          type: string
        externalCode2Info:
          $ref: "#/components/schemas/ExternalCodeNumberDescriptionDto"
        glConsolAccountCD:
          type: string
        number:
          description: Number of item
          type: string
        type:
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
      type: object
    AccountNumberDto:
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
      type: object
    AccountNumberTypeDescriptionDto:
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
      type: object
    AccountQueryParameters:
      properties:
        active:
          description: Set to True to select active accounts.
          type: boolean
        analysisCode:
          description: Filter by Analysis code (field used for sorting and inquiries.)
          type: string
        externalCode1:
          description: Filter by External code 1 (field used for sorting and inquiries.)
          type: string
        externalCode2:
          description: Filter by External code 2 (field used for sorting and inquiries.)
          type: string
        greaterThanValue:
          description: Enter the from-value for Account no.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
        publicCode:
          description: Filter by the Public code 1, authorities mapped code to the account.
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
      type: object
    AccountUpdateDto:
      properties:
        accountCD:
          $ref: "#/components/schemas/DtoValueOfString"
        accountClass:
          $ref: "#/components/schemas/DtoValueOfString"
        accountGroupCD:
          $ref: "#/components/schemas/DtoValueOfString"
        active:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        analysisCode:
          $ref: "#/components/schemas/DtoValueOfString"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        extenalCode1:
          $ref: "#/components/schemas/DtoValueOfString"
        externalCode2:
          $ref: "#/components/schemas/DtoValueOfString"
        postOption:
          $ref: "#/components/schemas/DtoValueOfString"
        publicCode1:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        taxCategory:
          $ref: "#/components/schemas/DtoValueOfString"
        type:
          $ref: "#/components/schemas/DtoValueOfAccountTypes"
        useDefaultSub:
          $ref: "#/components/schemas/DtoValueOfBoolean"
      type: object
    ActiveMultilanguageDto:
      properties:
        isActive:
          type: boolean
        isDefault:
          type: boolean
        languageISO:
          type: string
        nativeName:
          type: string
      type: object
    AddOrderLinesToPurchaseReceiptActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    AddOrdersToPurchaseReceiptActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    AddPOReceiptLineDto:
      properties:
        costInCurrency:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        poReceiptLineNumber:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        poReceiptNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        unitCostInCurrency:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
      type: object
    AddPurchaseOrderDto:
      properties:
        poOrderNumber:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    AddressDto:
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
      type: object
    AddressUpdateDto:
      properties:
        addressLine1:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine2:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine3:
          $ref: "#/components/schemas/DtoValueOfString"
        city:
          $ref: "#/components/schemas/DtoValueOfString"
        countryId:
          $ref: "#/components/schemas/DtoValueOfString"
        county:
          $ref: "#/components/schemas/DtoValueOfString"
        postalCode:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    AllocationRuleIdDescriptionDto:
      properties:
        active:
          type: boolean
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    AllocationsBasicDto:
      description: This class represents a basic Allocation/Kit Allocation
      properties:
        lineNbr:
          format: int32
          type: integer
        location:
          $ref: "#/components/schemas/LocationDescriptionDto"
        lotSerialNumber:
          type: string
        quantity:
          format: double
          type: number
      type: object
    AllocationsDto:
      description: This class represents a Allocations for Purchase Receipt Line in PurchaseReceiptController. Used for getting data.
      properties:
        description:
          description: Description &gt; The description of the stock item.
          type: string
        expirationDate:
          description: Expiration date &gt; The expiration date of the specified quantity of the stock item.
          format: date-time
          type: string
        itemId:
          description: ItemId &gt; The id of the item.
          type: string
        lineNbr:
          description: Line no. &gt; The line of the purchase order that contains the selected item.
          format: int32
          type: integer
        location:
          $ref: "#/components/schemas/locationInAllocationsDto"
        lotSerialNumber:
          description: Lot/Serial no. &gt; The lot or serial number of the item.
          type: string
        quantity:
          description: Quantity &gt; The quantity of the stock item with the same lot number. It is 1 for items with serial numbers.
          format: double
          type: number
        uom:
          description: UoM &gt; The unit of measure for the specified quantity of the inventory item.
          type: string
      type: object
    AllocationsUpdateBasicDto:
      description: This class represents an Allocation. Used to add/update data.
      properties:
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfInt32"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        lotSerialNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          description: The operation &gt;  Insert=1, Update=2, Delete=3
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
      type: object
    AllocationsUpdateDto:
      description: This class represents a Allocations for Purchase Receipt Line in PurchaseReceiptEndpoint. Used to add/update data.
      properties:
        expirationDate:
          $ref: "#/components/schemas/expirationDateInAllocationsUpdateDto"
        lineNbr:
          $ref: "#/components/schemas/lineNbrInAllocationsUpdateDto"
        location:
          $ref: "#/components/schemas/locationInAllocationsUpdateDto"
        lotSerialNumber:
          $ref: "#/components/schemas/lotSerialNumberInAllocationsUpdateDto"
        operation:
          description: The operation &gt;  Insert=1, Update=2, Delete=3
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/quantityInAllocationsUpdateDto"
        uom:
          $ref: "#/components/schemas/uomInAllocationsUpdateDto"
      type: object
    ApprovalDetailsDto:
      properties:
        attachmentID:
          description: The Approval details tab &gt; Default document &gt; The default document that includes the payments requiring approval.
          type: string
        comment:
          description: The Approval details tab &gt; Comment &gt; The comment connected with the approval of the payments.
          type: string
      type: object
    ApprovalDetailsUpdateDto:
      properties:
        attachmentID:
          $ref: "#/components/schemas/DtoValueOfString"
        comment:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    ArAdjustDto:
      properties:
        amountPaid:
          format: double
          type: number
        applicationDate:
          format: date-time
          type: string
        applicationPeriod:
          type: string
        balance:
          format: double
          type: number
        cashDiscountTaken:
          format: double
          type: number
        customerCD:
          type: string
        docType:
          type: string
        hold:
          type: boolean
        invoiceText:
          type: string
        paymentRef:
          type: string
        pendingPPD:
          type: boolean
        ppdCrMemoRefNbr:
          type: string
        refNbr:
          type: string
        released:
          type: boolean
        status:
          type: string
        voided:
          type: boolean
      type: object
    AttachmentDto:
      properties:
        id:
          description: The ID of the attachment
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: The name of the attachment.
          type: string
        revision:
          description: The version of the attachment.
          format: int32
          type: integer
      type: object
    AttachmentMetadataUpdateDto:
      properties:
        sendToAutoinvoice:
          description: The field SendToAutoinvoice only applies to files attached to Customer documents
          properties:
            value:
              type: boolean
          type: object
      type: object
    AttributeDetailDto:
      properties:
        description:
          type: string
        disabled:
          type: boolean
        errorInfo:
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        sortOrder:
          format: int32
          type: integer
        valueId:
          type: string
      type: object
    AttributeDetailUpdateDto:
      properties:
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        disabled:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        sortOrder:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt16"
        valueId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    AttributeDto:
      description: This class represents an attribute in AttributeController. Used for getting data.
      properties:
        attributeID:
          type: string
        controlType:
          enum:
            - Text
            - Combo
            - MultiSelectCombo
            - Lookup
            - Checkbox
            - Datetime
          type: string
        createdDateTime:
          format: date-time
          type: string
        description:
          type: string
        details:
          items:
            $ref: "#/components/schemas/AttributeDetailDto"
          type: array
        entryMask:
          type: string
        errorInfo:
          type: string
        internal:
          type: boolean
        lastModifiedDateTime:
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        regExp:
          type: string
      type: object
    AttributeIdValueDto:
      properties:
        description:
          description: Attribute &gt; The description of the attribute.
          type: string
        id:
          type: string
        value:
          description: Value &gt; The value of the attribute.
          type: string
      type: object
    AttributeLineUpdateDto:
      properties:
        attributeId:
          $ref: "#/components/schemas/attributeIdInAttributeLineUpdateDto"
        attributeValue:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    AttributeQueryParameters:
      properties:
        attributeID:
          type: string
        controlType:
          type: string
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        internal:
          type: boolean
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
      type: object
    AttributeUpdateDto:
      properties:
        attributeID:
          $ref: "#/components/schemas/DtoValueOfString"
        controlType:
          $ref: "#/components/schemas/DtoValueOfAttributeControlType"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        details:
          items:
            $ref: "#/components/schemas/AttributeDetailUpdateDto"
          type: array
        entryMask:
          $ref: "#/components/schemas/DtoValueOfString"
        internal:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        regExp:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    BAccountDescriptionDto:
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
      type: object
    BackgroundApiAcceptedDto:
      properties:
        id:
          readOnly: true
          type: string
        stateLocation:
          readOnly: true
          type: string
      type: object
    BackgroundRequestStateDto:
      properties:
        contentLocation:
          description: "\r

            The uri from where the client can get the response from the background API operation, if any is available."
          readOnly: true
          type: string
        errorMessage:
          description: "\r

            Any error message during processing of background API operation request. Note that any error response from the actual endpoint can be obtained by calling the ContentLocation address from the webhook notifaction response or the background state document."
          type: string
        finishedUtc:
          description: "\r

            Time when background API operation was finished processing"
          format: date-time
          type: string
        hasRequestContent:
          description: "\r

            Indicates whether or not the background API operation request has a request content."
          type: boolean
        hasResponseContent:
          description: "\r

            Indicates whether or not the background API operation ended with a response content. Value is updated only when background API operation is finished."
          type: boolean
        id:
          description: "\r

            Identifies a started background API operation"
          type: string
        originalUri:
          description: "\r

            The endpoint that was requested to be processed as a background API operation."
          type: string
        receivedUtc:
          description: "\r

            Time when background API operation was requested"
          format: date-time
          type: string
        reference:
          type: string
        responseHeaders:
          additionalProperties:
            type: string
          description: "\r

            Any response headers from the finished background API operation."
          type: object
        startedUtc:
          description: "\r

            Time when processing of background API operation was started"
          format: date-time
          type: string
        status:
          description: "\r

            Current status of a background API operation. Possible values are 'Started', 'Finished' and 'Failed'."
          type: string
        statusCode:
          description: "\r

            The Http Status Code of the finished background API operation. Value is 0 when operation is not done."
          format: int32
          type: integer
        webhookAddress:
          description: "\r

            The webhook uri used to notify when background API operation is finished, or 'none' if no notification is configured"
          type: string
      type: object
    BankSettingsDto:
      description: ""
      properties:
        bankAddress1:
          description: Bank address1
          type: string
        bankAddress2:
          description: BankAddress2
          type: string
        bankAddress3:
          description: BankAddress3
          type: string
        bankCountry:
          description: BankCountry
          type: string
        bankName:
          description: Bank name
          type: string
        bbaN2:
          description: BBAN2
          type: string
        bbaN3:
          description: BBAN3
          type: string
        bban:
          description: BBAN
          type: string
        bic:
          description: BIC
          type: string
        creditorId:
          description: CreditorId
          type: string
        iban:
          description: IBAN
          type: string
      type: object
    BankSettingsUpdateDto:
      description: Bank settings update Dto
      properties:
        bankAddress1:
          $ref: "#/components/schemas/bankAddress1InBankSettingsUpdateDto"
        bankAddress2:
          $ref: "#/components/schemas/bankAddress2InBankSettingsUpdateDto"
        bankAddress3:
          $ref: "#/components/schemas/bankAddress3InBankSettingsUpdateDto"
        bankCountry:
          $ref: "#/components/schemas/bankCountryInBankSettingsUpdateDto"
        bankName:
          $ref: "#/components/schemas/bankNameInBankSettingsUpdateDto"
        bbaN2:
          $ref: "#/components/schemas/bbaN2InBankSettingsUpdateDto"
        bbaN3:
          $ref: "#/components/schemas/bbaN3InBankSettingsUpdateDto"
        bban:
          $ref: "#/components/schemas/bbanInBankSettingsUpdateDto"
        bic:
          $ref: "#/components/schemas/bicInBankSettingsUpdateDto"
        creditorId:
          $ref: "#/components/schemas/creditorIdInBankSettingsUpdateDto"
        iban:
          $ref: "#/components/schemas/ibanInBankSettingsUpdateDto"
      type: object
    BarCodeDto:
      properties:
        barCode:
          type: string
        inventoryNumber:
          type: string
      type: object
    BasePaginationDtoOfCreditTermDto:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        records:
          items:
            $ref: "#/components/schemas/CreditTermDto"
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    BasePaginationDtoOfDiscountCodeDto:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        records:
          items:
            $ref: "#/components/schemas/DiscountCodeDto"
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    BasePaginationDtoOfDiscountDto:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        records:
          items:
            $ref: "#/components/schemas/DiscountDto"
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    BasePaginationDtoOfKitAssemblyDto:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        records:
          items:
            $ref: "#/components/schemas/KitAssemblyDto"
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    BasePaginationDtoOfKitSpecificationDto:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        records:
          items:
            $ref: "#/components/schemas/KitSpecificationDto"
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    BasePaginationDtoOfSalesPersonDto:
      properties:
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        records:
          items:
            $ref: "#/components/schemas/SalesPersonDto"
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    BillingRuleIdDescriptionDto:
      properties:
        active:
          type: boolean
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    BookBalanceDto:
      properties:
        acquisitionCost:
          description: The acquisition cost of this fixed asset
          format: double
          type: number
        book:
          $ref: "#/components/schemas/bookInBookBalanceDto"
        depreciationFromDate:
          description: The date this asset is placed in service
          format: date-time
          type: string
        depreciationFromPeriod:
          description: The first period this fixed asset will start/has started depreciating
          type: string
        depreciationMethodID:
          description: The depreciation method id of this fixed asset
          type: string
        depreciationToPeriod:
          description: The last period this fixed asset will depreciate/ was depreciated
          type: string
        lastDepreciationPeriod:
          description: The last period this asset has been depreciated
          type: string
        salvageAmount:
          description: The salvage amount of this fixed asset
          format: double
          type: number
        usefulLife:
          description: The useful life of this fixed asset in years
          format: double
          type: number
      type: object
    BookDto:
      properties:
        bookID:
          description: The book id of this fixed asset
          type: string
        description:
          description: The description of the book
          type: string
      type: object
    BranchByIdQueryParameters:
      properties:
        expandAddress:
          description: True to get main address for branch.
          type: boolean
        expandBankSettings:
          description: True to get payment settings for Branch.
          type: boolean
        expandContact:
          description: True to get main contact for a branch.
          type: boolean
        expandCurrency:
          description: True to get base currency for a branch.
          type: boolean
        expandDefaultCountry:
          description: True to get default country for a branch.
          type: boolean
        expandDeliveryAddress:
          description: True to get delivery address for a branch.
          type: boolean
        expandDeliveryContact:
          description: True to get delivery contact for a branch.
          type: boolean
        expandIndustryCode:
          description: True to get industry code for a branch.
          type: boolean
        expandLedger:
          description: True to get ledger for a branch.
          type: boolean
        expandVatZone:
          description: True to get vat zone for a branch.
          type: boolean
      type: object
    BranchCurrencyDto:
      description: Currency info for branch.
      properties:
        description:
          description: Currency description.
          type: string
        id:
          description: Currency Id.
          type: string
        symbol:
          description: Currency symbol.
          type: string
      type: object
    BranchDto:
      properties:
        bankSettings:
          $ref: "#/components/schemas/bankSettingsInBranchDto"
        branchId:
          description: The top part &gt; Branch ID* &gt; The unique identifier of the Branch
          format: int32
          type: integer
        corporateId:
          description: The Organisation details tab &gt; VAT registration info section &gt; Corporate ID &gt; The corporate ID of the company.
          type: string
        currency:
          $ref: "#/components/schemas/currencyInBranchDto"
        defaultCountry:
          $ref: "#/components/schemas/defaultCountryInBranchDto"
        deliveryAddress:
          $ref: "#/components/schemas/deliveryAddressInBranchDto"
        deliveryContact:
          $ref: "#/components/schemas/deliveryContactInBranchDto"
        industryCode:
          $ref: "#/components/schemas/industryCodeInBranchDto"
        isActive:
          description: The top part &gt; Is active branch.
          type: boolean
        isMainBranch:
          description: The top part &gt; Is main organisation &gt; If you want this company to be the main company of your branches, select this check box.
          type: boolean
        lastModifiedDateTime:
          description: System generated information. This information is not visible in the window.
          format: date-time
          type: string
        ledger:
          $ref: "#/components/schemas/ledgerInBranchDto"
        mainAddress:
          $ref: "#/components/schemas/mainAddressInBranchDto"
        mainContact:
          $ref: "#/components/schemas/mainContactInBranchDto"
        name:
          description: The top part &gt; Company name &gt; The name of the company.
          type: string
        number:
          description: "Mandatory field: The top part &gt; Branch CD* &gt; The branch number , which you compose according to the rules defined by the BIZACCT segmented key."
          type: string
        organizationId:
          format: int32
          type: integer
        vatRegistrationId:
          description: The Organisation details tab &gt; VAT registration info section &gt; VAT registration ID &gt; The company registration ID for the country’s tax authority.
          type: string
        vatZone:
          $ref: "#/components/schemas/vatZoneInBranchDto"
      type: object
    BranchNumberDto:
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
      type: object
    BranchQueryParameters:
      properties:
        expandAddress:
          description: True to get main address for branch.
          type: boolean
        expandBankSettings:
          description: True to get payment settings for Branch.
          type: boolean
        expandContact:
          description: True to get main contact for a branch.
          type: boolean
        expandCurrency:
          description: True to get base currency for a branch.
          type: boolean
        expandDefaultCountry:
          description: True to get default country for a branch.
          type: boolean
        expandDeliveryAddress:
          description: True to get delivery address for a branch.
          type: boolean
        expandDeliveryContact:
          description: True to get delivery contact for a branch.
          type: boolean
        expandIndustryCode:
          description: True to get industry code for a branch.
          type: boolean
        expandLedger:
          description: True to get ledger for a branch.
          type: boolean
        expandVatZone:
          description: True to get vat zone for a branch.
          type: boolean
        greaterThanValue:
          description: Filter by branch ID (number) greater than.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          format: date-time
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        orderBy:
          description: Order by Branch ID
          enum:
            - Id
            - Number
            - Name
            - OrganizationId
            - LastModifiedDateTime
          type: string
      type: object
    BudgetDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInBudgetDto"
        amount:
          description: The budget area &gt; The budget articles pane &gt; Amount &gt; The article amount.
          format: double
          type: number
        branchNumber:
          $ref: "#/components/schemas/branchNumberInBudgetDto"
        description:
          description: "Mandatory field: The budget area &gt; The budget articles pane &gt; Description* &gt; A description of the budget article.By default, this column displays the account description."
          type: string
        distributedAmount:
          description: The budget area  The budget articles pane &gt; Distributed amount &gt; The amount distributed over the periods.
          format: double
          type: number
        financialYear:
          description: "Mandatory field: The top part &gt; Financial year* &gt; The financial year of the budget."
          type: string
        lastModifiedDateTime:
          description: A system generated date/time not visible in the window.
          format: date-time
          type: string
        periods:
          description: The budget area The budget articles pane &gt; Period XX &gt; Amount per period within the financial year.
          items:
            $ref: "#/components/schemas/FinancialPeriodAmountDto"
          type: array
        released:
          description: The budget area &gt; The budget articles pane &gt; Released &gt; A check box that indicates (if selected) that the budget article has been released.
          type: boolean
        releasedAmount:
          description: The budget area &gt; The budget articles pane &gt; Released amount &gt; The amount that has been released for this article.
          format: double
          type: number
        subaccount:
          $ref: "#/components/schemas/subaccountInBudgetDto"
      type: object
    BudgetUpdateDto:
      properties:
        account:
          $ref: "#/components/schemas/DtoValueOfString"
        amount:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        financialYear:
          $ref: "#/components/schemas/DtoValueOfString"
        ledger:
          $ref: "#/components/schemas/DtoValueOfString"
        periods:
          items:
            $ref: "#/components/schemas/FinancialPeriodAmountUpdateDto"
          type: array
        subaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
      type: object
    CancelSalesOrderActionDto:
      properties:
        orderType:
          description: Mandatory field
          type: string
      required:
        - orderType
      type: object
    CancelSalesOrderActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    CarrierDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    CarrierDto:
      description: This class represents a Carrier in CarrierController. Used for getting data.
      properties:
        carrierDescription:
          description: "Mandatory field: The top part &gt; Description* &gt; A description of this shipping service or option."
          type: string
        carrierId:
          description: "Mandatory field: The top part &gt; Ship via* &gt; The unique code associated with the non-integrated carrier, the method of the integrated carrier, or the shipping option of your company."
          type: string
        lastModifiedDateTime:
          description: This information is not visible in the window.  It is collected from the system.
          format: date-time
          type: string
      type: object
    CarrierQueryParameters:
      properties:
        lastModifiedDateTime:
          description: "System generated value for last modification of transaction/record. Use format: YYYY-MM-DD HH:MM (date and time) to filter from date to present."
          type: string
        lastModifiedDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        numberToRead:
          description: Enter the number of records to read.
          format: int32
          type: integer
        skipRecords:
          description: Enter the number of records to skip.
          format: int32
          type: integer
      type: object
    CashAccountDto:
      properties:
        currency:
          type: string
        description:
          description: Name of item/description
          type: string
        entryTypes:
          description: The Entry types tab &gt;
          items:
            $ref: "#/components/schemas/EntryTypeDto"
          type: array
        lastModifiedDateTime:
          description: A system generated date/time to indicate when the document was last changed.
          format: date-time
          type: string
        number:
          description: Number of item
          type: string
      type: object
    CashAccountIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    CashAccountQueryParameters:
      properties:
        greaterThanValue:
          description: Filter Cass account identifier greater than.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
      type: object
    CashSaleDto:
      description: This class represents a invoice in InvoiceController. Used by getting data.
      properties:
        account:
          $ref: "#/components/schemas/accountInCashSaleDto"
        amount:
          description: "The top part &gt; Amount &gt; The amount paid by the document. The value appears for new documents if the Validate document totals on entry check box is selected on the AR101000 window.\r

            If the check box is cleared, then the value appears when the document status is Open."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        applications:
          items:
            $ref: "#/components/schemas/ArAdjustDto"
          type: array
        balance:
          description: "The top part &gt; Balance &gt; For an open customer ledger document, the balance after any cash discount was taken. \r

            For a document used in the application process, this is the balance after the payments were applied."
          format: double
          type: number
        balanceInCurrency:
          description: Background calculation giving you the Balance in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCashSaleDto"
        cashAccount:
          description: Financial details tab &gt; The payment information section &gt; Cash account &gt; The cash account associated with the payment method.
          type: string
        cashDiscount:
          description: The top part &gt; Cash discount &gt; The cash discount amount that has been or will be taken on the document, which the system calculates based on the specified credit terms.
          format: double
          type: number
        cashDiscountInCurrency:
          description: Background calculation giving you the Cash discount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        cashSaleLines:
          description: The Document details tab &gt;
          items:
            $ref: "#/components/schemas/CashSaleLineDto"
          type: array
        closedFinancialPeriod:
          description: Format YYYYMM.
          type: string
        createdDateTime:
          description: The Attachments tab &gt; Creation time &gt; The date the attachment was created.
          format: date-time
          type: string
        creditTerms:
          $ref: "#/components/schemas/creditTermsInCashSaleDto"
        currencyId:
          description: The top part &gt; Currency &gt; The currency of the document. By default, it is the customer’s default currency,but it can be changed if the Allow Currency Override check box is selected in the AR303000 window.
          type: string
        customer:
          $ref: "#/components/schemas/customerInCashSaleDto"
        customerProject:
          description: The top part &gt; Customer project no. &gt; The customer project no. used in AutoInvoice.
          type: string
        customerRefNumber:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        detailTotal:
          description: The top part &gt; Detail total &gt; The document total, which the system calculates for all line items in the Document details tab.
          format: double
          type: number
        detailTotalInCurrency:
          description: Background calculation giving you the Detail total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        discountTotal:
          description: The top part &gt; Discount total &gt; The document discount total.
          format: double
          type: number
        discountTotalInCurrency:
          description: The top part &gt; Discount total &gt; The document discount total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        documentDate:
          description: "The top part &gt; Date* &gt; The date when the customer ledger document was created.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        documentType:
          description: "The top part &gt; Type &gt; The document type. The following types are available: invoice, debit note, credit note, overdue charge, credit write-off"
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        dontEmail:
          type: boolean
        dontPrint:
          type: boolean
        errorInfo:
          type: string
        financialPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
          type: string
        hold:
          description: The top part &gt; Hold &gt; A check box that indicates (if selected) that the document is a draft. A document with the On Hold status may be edited and cannot be released.
          type: boolean
        invoiceAddress:
          $ref: "#/components/schemas/invoiceAddressInCashSaleDto"
        invoiceContact:
          $ref: "#/components/schemas/invoiceContactInCashSaleDto"
        invoiceText:
          description: The top part &gt; Invoice text &gt; Any user-provided description of the customer ledger document.
          type: string
        lastModifiedDateTime:
          description: System generated field for last modification date/time of document.
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInCashSaleDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the document.
          type: string
        origInvoiceDate:
          description: "The top part &gt; Orig invoice date &gt; The date based on which the Due date and Cash discount date is calculated. Only used if setting \"Use Orig Invoice Date\" is active in AR Preferences.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInCashSaleDto"
        paymentReference:
          description: ///The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          type: string
        postPeriod:
          description: The top part &gt; Post period &gt; The period to which the document should be posted. Format YYYYMM.
          type: string
        project:
          $ref: "#/components/schemas/projectInCashSaleDto"
        referenceNumber:
          description: The Top part &gt; Ref. no. &gt; The reference number of the customer ledger document in the system.
          type: string
        salesPerson:
          $ref: "#/components/schemas/salesPersonInCashSaleDto"
        salesPersonDescr:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          type: string
        salesPersonID:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          format: int32
          type: integer
        status:
          description: "The top part &gt; Status &gt; The status of the document, which can be one of the following: Hold, Balanced, Voided, Scheduled, Open, Closed, Pending print, Pending email."
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - PendingPrint
            - PendingEmail
            - CreditHold
            - CcHold
            - Reserved
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInCashSaleDto"
        vatExemptTotal:
          description: The top part &gt; VAT exempt. total &gt; The document total that is exempt from VAT. This total is calculated as the taxable amount for the tax with the Include in VAT Exempt Total check box selected on the Taxes form.This box is available only if the VAT Reporting feature is enabled in your system.
          format: double
          type: number
        vatExemptTotalInCurrency:
          description: Background calculation giving you the VAT exempt. total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subjected to VAT.
          format: double
          type: number
        vatTaxableTotalInCurrency:
          description: Background calculation giving you the VAT taxable total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTotal:
          description: The top part &gt; VAT total &gt; The VAT amount of the document, as defined on the VAT details tab.
          format: double
          type: number
        vatTotalInCurrency:
          description: Background calculation giving you the VAT total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
      type: object
    CashSaleLineDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInCashSaleLineDto"
        amount:
          description: "Amount &gt; The amount after the discount has been applied. The value of this read-only box\r

            is calculated automatically by deducting the discount amount from the extended price."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCashSaleLineDto"
        cost:
          description: "Cost &gt; The total cost of the line in default currency. \r

            The value will always be 0 for unreleased documents."
          format: double
          type: number
        deferralCode:
          description: "The deferral code assigned to the stock item or non-stock item specified in this\r

            document line.Upon release of the document, the system generates a deferral\r

            schedule (or schedules) based on the settings defined in this deferral code."
          type: string
        deferralSchedule:
          description: Original deferral schedule &gt; A read-only column filled in by the system in the Cash return documents created by the reversing process. It shows the identifier of the deferral schedule associated with the original Cash sale document.
          format: int32
          type: integer
        description:
          description: Transaction descr. &gt; Any brief comment relevant to the transaction.The alphanumeric string may contain up to 30 characters.
          type: string
        discountAmount:
          description: "Discount amount &gt; The amount of the line-level discount that has been applied manually or\r

            automatically to this line.The system selects the Manual Discount check box\r

            and calculates the line amount after you have entered the discount amount\r

            manually and save your changes or added a new line."
          format: double
          type: number
        discountAmountInCurrency:
          description: Background calculation giving you the Discount amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        discountCode:
          description: The code of the line discount that has been applied to this line automatically or manually.
          type: string
        discountPercent:
          description: "Discount percent &gt; The percent of the line-level discount that has been applied manually or\r

            automatically.The system selects the Manual Discount check box and\r

            calculates the discount amount after you have entered the percent manually and\r

            saved your changes or added a new line."
          format: double
          type: number
        externalLink:
          type: string
        inventoryNumber:
          description: Item ID &gt; The item ID of the line item, if applicable. Only a non-stock item can be selected.
          type: string
        lineNumber:
          description: Line no. &gt; A counter of lines in the overview of cash sales document overview.
          format: int32
          type: integer
        manualAmount:
          description: Manual amount &gt; a check box indicating that the amount has been entered manually.
          format: double
          type: number
        manualAmountInCurrency:
          description: Background calculation giving you the Manual amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        manualDiscount:
          description: "Manual discount &gt; A check box that indicates (if selected) that the discount has been applied\r

            manually.If you clear the check box, the system clears entered discount percent,\r

            or discount amount, or selected discount code."
          type: boolean
        note:
          description: Table &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected to the order.
          type: string
        quantity:
          description: Quantity &gt; The quantity of items (goods or services) of a particular type sold to the customer.
          format: double
          type: number
        salesperson:
          description: The field is deprecated for customer document endpoints, please use Seller instead
          type: string
        seller:
          $ref: "#/components/schemas/sellerInCashSaleLineDto"
        subaccount:
          $ref: "#/components/schemas/subaccountInCashSaleLineDto"
        unitPrice:
          description: "Unit price &gt; The unit price set for the item or service. If you want to update the unit price\r

            automatically to the current value(that is, the applicable sales or default price),\r

            you can use the Recalculate Prices and Discounts action.If you have modified\r

            the unit price and saved the document, the value will not be updated by the\r

            system if you change the document date."
          format: double
          type: number
        unitPriceInCurrency:
          description: Background calculation giving you the Unit price in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        uom:
          description: UoM &gt; The unit of measure (UoM) for the item.
          type: string
        vatCode:
          $ref: "#/components/schemas/vatCodeInCashSaleLineDto"
      type: object
    CashSaleLinesUpdateDto:
      properties:
        accountNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralCode:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralSchedule:
          $ref: "#/components/schemas/DtoValueOfInt32"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        discountAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        discountPercent:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        manualAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        manualDiscount:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        salesperson:
          $ref: "#/components/schemas/DtoValueOfString"
        subaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        termEndDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        termStartDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        unitPriceInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        vatCodeId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    CashSaleUpdateDto:
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        cashSaleLines:
          items:
            $ref: "#/components/schemas/CashSaleLinesUpdateDto"
          type: array
        creditTermsId:
          $ref: "#/components/schemas/DtoValueOfString"
        customerNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        documentDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        dontEmail:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        dontPrint:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        financialPeriod:
          $ref: "#/components/schemas/financialPeriodInCashSaleUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        invoiceText:
          $ref: "#/components/schemas/DtoValueOfString"
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        origInvoiceDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        paymentMethodId:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentReference:
          $ref: "#/components/schemas/paymentReferenceInCashSaleUpdateDto"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInCashSaleUpdateDto"
        referenceNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        salesPersonID:
          $ref: "#/components/schemas/salesPersonIDInCashSaleUpdateDto"
        salesperson:
          $ref: "#/components/schemas/salespersonInCashSaleUpdateDto"
      type: object
    CashTranTaxDetailDto:
      properties:
        deductibleTaxRate:
          description: Deductible VAT rate &gt; The percent of deduction that applies to the VAT amount paid to the supplier for specific purchases.
          format: double
          type: number
        expenseAmount:
          description: Expense amount &gt; The percentage that is deducted from the VAT amount paid to the supplier for specific purchases.
          format: double
          type: number
        includeInVatExemptTotal:
          description: Include in VAT exempt total &gt; A check box that indicates (if selected) that this value-added VAT has a zero rate and is used to calculate a document subtotal that is actually exempt from VAT.
          type: boolean
        pendingVat:
          description: Pending VAT &gt; A check box that indicates (if selected) that the VAT that should be calculated in documents, but should not be recorded to the VAT report until the VAT invoice is received.
          type: boolean
        reverseVat:
          description: Reverse VAT &gt; A check box that indicates (if selected) that this is a reverse VAT.
          type: boolean
        statisticalVat:
          description: Statistical VAT &gt; A check box that indicates (if selected) that the VAT on documents will be calculated only for statistical purposes or will be reported only but not actually paid.
          type: boolean
        tax:
          $ref: "#/components/schemas/taxInCashTranTaxDetailDto"
        taxAmount:
          description: VAT amount &gt; The VAT amount calculated for the transaction.
          format: double
          type: number
        taxRate:
          description: VAT rate &gt; The rate of the VAT.
          format: double
          type: number
        taxType:
          description: VAT type &gt; The type of VAT.
          enum:
            - Sales
            - Use
            - Vat
            - Withholding
          type: string
        taxableAmount:
          description: Taxable amount &gt; The taxable amount of the transaction.
          format: double
          type: number
      type: object
    CashTransactionDetailUpdateDto:
      properties:
        amount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        notInvoiceable:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        offsetAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        offsetSubaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        price:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        project:
          $ref: "#/components/schemas/DtoValueOfString"
        projectTask:
          $ref: "#/components/schemas/DtoValueOfString"
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        vatCode:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    CashTransactionDto:
      properties:
        amount:
          description: The top part &gt; Amount &gt; The amount of the transaction.
          format: double
          type: number
        cashAccount:
          $ref: "#/components/schemas/cashAccountInCashTransactionDto"
        controlTotal:
          description: "Mandatory field: The top part &gt; Control total &gt; The control total of the transaction."
          format: double
          type: number
        currency:
          description: The top part &gt; Currency &gt; The currency of the cash account.
          type: string
        description:
          description: The top part &gt; Description &gt; A detailed description of the transaction.
          type: string
        disbReceipt:
          description: The top part &gt; Disb./receipt &gt; The basic type of the transaction.
          enum:
            - Disbursement
            - Receipt
          type: string
        documentRef:
          description: The top part &gt; Document ref. &gt; The external document reference number.
          type: string
        entryType:
          $ref: "#/components/schemas/entryTypeInCashTransactionDto"
        finPeriod:
          description: The property is now considered obsolete. Use Financial Period instead
          type: string
        financialPeriod:
          description: "Mandatory field: The top part &gt; Period* &gt; The financial period to which the transaction should be posted."
          type: string
        financialsDetail:
          $ref: "#/components/schemas/financialsDetailInCashTransactionDto"
        hold:
          description: The top part &gt; Hold &gt; A check box that, if selected, indicates that the transaction is on hold, which means it may be edited but cannot be released.
          type: boolean
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        owner:
          $ref: "#/components/schemas/ownerInCashTransactionDto"
        referenceNbr:
          description: The top part &gt; Ref. no. &gt; The unique identifier assigned to the cash transaction in accordance with the numbering sequence.
          type: string
        status:
          description: The top part &gt; Status &gt; The status of the transaction, which is automatically assigned by the system.
          enum:
            - Balanced
            - Hold
            - Released
            - Pending
            - Rejected
          type: string
        taxAmount:
          description: The top part &gt; VAT amount &gt; The VAT amount to be paid for the document. A user enters this amount manually.
          format: double
          type: number
        taxDetails:
          description: VAT details tab &gt;
          items:
            $ref: "#/components/schemas/CashTranTaxDetailDto"
          type: array
        taxTotal:
          description: The top part &gt; VAT total &gt; The total amount of tax paid in the document.
          format: double
          type: number
        tranDate:
          description: "Mandatory field: The top part &gt; Trans. date* &gt; The date of the transaction."
          format: date-time
          type: string
        tranType:
          description: The top part &gt; Trans type &gt; 	The type of cash transaction.
          enum:
            - TransferOut
            - TransferIn
            - TransferExp
            - Adjustment
          type: string
        transactionDetails:
          description: Transaction details tab &gt;
          items:
            $ref: "#/components/schemas/TransactionDetailDto"
          type: array
        vatExemptTotal:
          description: The top part &gt; VAT exempt total &gt;  The document total that is exempt from VAT.
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subjected to VAT.
          format: double
          type: number
      type: object
    CashTransactionQueryParameters:
      properties:
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
      type: object
    CashTransactionTaxDetailUpdateDto:
      properties:
        expenseAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        taxableAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        vatAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        vatId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    CashTransactionUpdateDto:
      properties:
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        cashTransactionDetails:
          items:
            $ref: "#/components/schemas/CashTransactionDetailUpdateDto"
          type: array
        cashTransactionTaxDetails:
          items:
            $ref: "#/components/schemas/CashTransactionTaxDetailUpdateDto"
          type: array
        controlTotal:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        documentRef:
          $ref: "#/components/schemas/DtoValueOfString"
        entryType:
          $ref: "#/components/schemas/DtoValueOfString"
        finanacialPeriod:
          $ref: "#/components/schemas/finanacialPeriodInCashTransactionUpdateDto"
        financialPeriod:
          $ref: "#/components/schemas/financialPeriodInCashTransactionUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        referenceNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        taxCalculationMode:
          $ref: "#/components/schemas/DtoValueOfNullableOfTaxCalcMode"
        tranDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        vatAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        vatZone:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    ChangeCustomerCdActionDto:
      properties:
        customerCd:
          type: string
      type: object
    ChangeCustomerCdActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ChangeEmployeeNrActionDto:
      properties:
        employeeNr:
          type: string
      type: object
    ChangeEmployeeNrActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ChangeInventoryNbrActionDto:
      properties:
        inventoryNbr:
          type: string
      type: object
    ChangeInventoryNbrActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ChangeProjectIdActionDto:
      properties:
        projectId:
          type: string
      type: object
    ChangeProjectIdActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ClassAttributeDetailDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    ClassAttributeDto:
      properties:
        attributeId:
          description: The Attributes tab &gt; Attribute ID &gt; The identifier of the attribute.
          type: string
        attributeType:
          enum:
            - Text
            - Combo
            - MultiSelectCombo
            - Lookup
            - Checkbox
            - Datetime
          type: string
        defaultValue:
          description: The Attributes tab &gt; Default value &gt; The default value of the attribute.
          type: string
        description:
          description: The Attributes tab &gt; Description &gt; A read-only column that displays the detailed description of the attribute.
          type: string
        details:
          items:
            $ref: "#/components/schemas/ClassAttributeDetailDto"
          type: array
        required:
          description: The Attributes tab &gt; Required &gt; This check box indicates (if selected) that the attribute value is required for items of the class.
          type: boolean
        sortOrder:
          description: The Attributes tab &gt; Sort order &gt; A number that represents the order of the attribute in the list of class attributes.The lower the number, the higher the attribute will be in the list of class attributes.
          format: int32
          type: integer
      type: object
    ClassDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    CompanyTreeInfoDto:
      properties:
        active:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        owner:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        workGroupID:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    ConfirmShipmentActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ConsolBranchDto:
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
      type: object
    ContactDto:
      description: This class represents a contact in ContactController. Used by getting data.
      properties:
        active:
          description: The top part &gt; Active &gt; A check box that indicates (if selected) that the contact is active.
          type: boolean
        address:
          $ref: "#/components/schemas/addressInContactDto"
        businessAccount:
          description: The top part &gt; Business account &gt; The business account associated with the contact.
          type: string
        businessAccountType:
          description: The top part &gt; Business account &gt; The business account type of the business account associated with the contact.
          type: string
        contactId:
          description: The top part &gt; Contact ID &gt; The unique identifier of the contact, which the system generates automatically.
          format: int32
          type: integer
        contactMethod:
          description: CRM section not available in Visma.net ERP
          enum:
            - Any
            - Email
            - Mail
            - Fax
            - Phone
          type: string
        displayName:
          type: string
        doNotCall:
          description: CRM section not available in Visma.net ERP
          type: boolean
        doNotEmail:
          description: CRM section not available in Visma.net ERP
          type: boolean
        doNotFax:
          description: CRM section not available in Visma.net ERP
          type: boolean
        doNotMail:
          description: CRM section not available in Visma.net ERP
          type: boolean
        email:
          description: The Details tab &gt; Contact section &gt; Email &gt; The email address of the contact.
          type: string
        fax:
          description: The Details tab &gt; Contact section &gt; Business fax &gt; The fax number of the contact.
          type: string
        firstName:
          description: The top part &gt; First name &gt; The first name of the contact.
          type: string
        lastModifiedDateTime:
          description: "Background information: The date and time when the details of the contact were last updated."
          format: date-time
          type: string
        lastName:
          description: "Mandatory field: The top part &gt; Last name* &gt; The last name of the contact."
          type: string
        noMarketing:
          description: CRM section not available in Visma.net ERP
          type: boolean
        noMassMail:
          description: CRM section not available in Visma.net ERP
          type: boolean
        phone1:
          description: The Details tab &gt; Contact section &gt; Business 1/Business 2/Business 3/Business assistant 1/Business fax /Home/Home fax/Mobile &gt; The primary phone number of the contact. Select the type from the drop down.
          type: string
        phone2:
          description: The Details tab &gt; Contact section &gt; Business 1/Business 2/Business 3/Business assistant 1/Business fax /Home/Home fax/Mobile &gt; The primary phone number of the contact. Select the type from the drop down.
          type: string
        phone3:
          description: The Details tab &gt; Contact section &gt; Business 1/Business 2/Business 3/Business assistant 1/Business fax /Home/Home fax/Mobile &gt; The primary phone number of the contact. Select the type from the drop down.
          type: string
        position:
          description: The top part &gt; Job title &gt; The contact’s job title or position.
          type: string
        sameAsAccount:
          description: The Details tab &gt; Same as in account &gt; A check box that indicates (if selected) that the contact's address is the same as the address of the business account.
          type: boolean
        title:
          description: The top part &gt; First name &gt; The contact's courtesy title.
          enum:
            - Doctor
            - Miss
            - Mr
            - Mrs
            - Ms
            - Prof
          type: string
        web:
          description: The Details tab &gt; Contact section &gt; Web &gt; The website of the contact, if any.
          type: string
      type: object
    ContactIdNameDto:
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
      type: object
    ContactInfoDto:
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
      type: object
    ContactInfoUpdateDto:
      properties:
        attention:
          $ref: "#/components/schemas/DtoValueOfString"
        email:
          $ref: "#/components/schemas/DtoValueOfString"
        fax:
          $ref: "#/components/schemas/DtoValueOfString"
        name:
          $ref: "#/components/schemas/DtoValueOfString"
        phone1:
          $ref: "#/components/schemas/DtoValueOfString"
        phone2:
          $ref: "#/components/schemas/DtoValueOfString"
        web:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    ContactQueryParameters:
      properties:
        active:
          type: string
        businessAccount:
          type: string
        displayName:
          type: string
        email:
          type: string
        firstName:
          type: string
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastName:
          type: string
        numberToRead:
          format: int32
          type: integer
        orderBy:
          type: string
        skipRecords:
          format: int32
          type: integer
      type: object
    ContactUpdateDto:
      properties:
        active:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        address:
          $ref: "#/components/schemas/DtoValueOfAddressUpdateDto"
        businessAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        contactMethod:
          $ref: "#/components/schemas/DtoValueOfContactMethods"
        doNotCall:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        doNotEmail:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        doNotFax:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        doNotMail:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        email:
          $ref: "#/components/schemas/DtoValueOfString"
        fax:
          $ref: "#/components/schemas/DtoValueOfString"
        firstName:
          $ref: "#/components/schemas/DtoValueOfString"
        lastName:
          $ref: "#/components/schemas/DtoValueOfString"
        noMarketing:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        noMassMail:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        phone1:
          $ref: "#/components/schemas/DtoValueOfString"
        phone2:
          $ref: "#/components/schemas/DtoValueOfString"
        phone3:
          $ref: "#/components/schemas/DtoValueOfString"
        position:
          $ref: "#/components/schemas/DtoValueOfString"
        sameAsAccount:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        title:
          $ref: "#/components/schemas/DtoValueOfEmployeeTitles"
        web:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    ContractTemplateDto:
      properties:
        attributes:
          items:
            $ref: "#/components/schemas/ClassAttributeDto"
          type: array
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
      type: object
    ContractTemplateIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    ContractTemplateQueryParameters:
      properties:
        expandAttributes:
          type: boolean
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          type: string
        numberToRead:
          format: int32
          type: integer
        skipRecords:
          format: int32
          type: integer
      type: object
    ContractUsageDto:
      properties:
        contract:
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
        transaction:
          description: Transactions not yet invoiced tab or Transaction history tab
          items:
            $ref: "#/components/schemas/ContractUsageLineDto"
          type: array
      type: object
    ContractUsageLineDto:
      properties:
        billed:
          description: Information indicating that the contract is collected from the Transaction history tab and the contract is invoiced. Not indicated on screen CT303000.
          type: boolean
        billingDate:
          description: Transaction history tab &gt; Invoicing date &gt; The date when the invoice was issued.
          format: date-time
          type: string
        branch:
          $ref: "#/components/schemas/branchInContractUsageLineDto"
        date:
          description: "Mandatory field: Both tabs &gt; Date* &gt; The date of the activity, case, applied labour, or other usage (for the item)."
          format: date-time
          type: string
        description:
          description: Both tabs &gt; Description &gt; A description of the non-stock item.
          type: string
        item:
          $ref: "#/components/schemas/itemInContractUsageLineDto"
        lastModifiedDateTime:
          description: A system generated date/time that indicates the last change for the document.
          format: date-time
          type: string
        quantity:
          description: Both tabs &gt; Quantity &gt; A number of units used for the item.
          format: double
          type: number
        referenceNbr:
          description: Transaction history tab &gt; Ref. no. &gt; The reference number of the document/invoice.
          type: string
        transactionNumber:
          format: int32
          type: integer
        type:
          description: Transaction history tab &gt; Type &gt; The type of the customer ledger document.
          type: string
        uom:
          description: Both tabs &gt; UoM &gt; The unit of measure used for the item.
          type: string
      type: object
    ContractUsageLineUpdateDto:
      description: This class represent a Contract Usage Line in Contract Usage Controller. Used to pass data to server for creating or updating an Contract Usage Line
      properties:
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        date:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        inventory:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        transactionNumber:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    ContractUsageQueryParameters:
      properties:
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          type: string
        numberToRead:
          format: int32
          type: integer
        skipRecords:
          format: int32
          type: integer
      type: object
    ContractUsageUpdateDto:
      description: This class represent a Contract Usage in Contract Usage Controller. Used to pass data to server for creating or updating an Contract Usage
      properties:
        lines:
          items:
            $ref: "#/components/schemas/ContractUsageLineUpdateDto"
          type: array
      type: object
    CorrectArDocumentActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        documentType:
          type: string
        errorInfo:
          type: string
        refNbr:
          type: string
      type: object
    CorrectSupplierInvoiceActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
        errorMessage:
          type: string
        refNbr:
          type: string
      type: object
    CostPriceStatisticsDto:
      properties:
        averageCost:
          description: Cost price statistics section &gt; Average cost &gt; The average cost for the stock item.
          format: double
          type: number
        lastCost:
          description: Cost price statistics section &gt; Last cost &gt; The last standard cost used for the stock item.
          format: double
          type: number
        maxCost:
          description: Cost price statistics section &gt; Max. cost &gt; The maximum cost for the stock item.
          format: double
          type: number
        minCost:
          description: Cost price statistics section &gt; Min. cost &gt; The minimum cost for the stock item.
          format: double
          type: number
      type: object
    CountryDto:
      properties:
        errorInfo:
          type: string
        id:
          description: "Mandatory field: Country ID* &gt; The unique two-letter country ID according to international standard ISO 3166."
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          description: "Mandatory field: Country name* &gt; The complete name of the country."
          type: string
      type: object
    CountryQueryParameters:
      properties:
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
      type: object
    CountyDto:
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
      type: object
    CreateCurrencyRateDto:
      properties:
        effectiveDate:
          $ref: "#/components/schemas/effectiveDateInCreateCurrencyRateDto"
        fromCurrencyId:
          $ref: "#/components/schemas/fromCurrencyIdInCreateCurrencyRateDto"
        multDiv:
          $ref: "#/components/schemas/multDivInCreateCurrencyRateDto"
        rate:
          $ref: "#/components/schemas/rateInCreateCurrencyRateDto"
        rateType:
          $ref: "#/components/schemas/rateTypeInCreateCurrencyRateDto"
        toCurrencyId:
          $ref: "#/components/schemas/toCurrencyIdInCreateCurrencyRateDto"
      type: object
    CreateCurrencyRateTypeDto:
      properties:
        daysEffective:
          $ref: "#/components/schemas/daysEffectiveInCreateCurrencyRateTypeDto"
        description:
          $ref: "#/components/schemas/descriptionInCreateCurrencyRateTypeDto"
        id:
          $ref: "#/components/schemas/idInCreateCurrencyRateTypeDto"
      type: object
    CreateDunningLetterActionDto:
      properties:
        dunningLetterDate:
          format: date-time
          type: string
        levelFrom:
          format: int32
          type: integer
        levelTo:
          format: int32
          type: integer
      type: object
    CreateDunningLetterActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    CreatePurchaseOrderActionDto:
      properties:
        orderType:
          description: Mandatory field
          type: string
        preferSupplierFromSOLine:
          description: Supplier
          type: boolean
      required:
        - orderType
      type: object
    CreateShipmentActionDto:
      properties:
        operation:
          description: "Operation Type. Possible values: I or R, I = Issue, R = Receipt. If not set it will take the default one defined on Order Type."
          type: string
        orderType:
          description: Mandatory field
          type: string
        returnShipmentDto:
          type: boolean
        shipmentDate:
          description: Mandatory field
          format: date-time
          type: string
        shipmentWarehouse:
          description: Mandatory field
          type: string
      required:
        - orderType
        - shipmentDate
        - shipmentWarehouse
      type: object
    CreateShipmentActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
        referenceNumber:
          type: string
        shipmentDto:
          $ref: "#/components/schemas/ShipmentDto"
      type: object
    CreditNoteDto:
      description: This class represents a invoice in InvoiceController. Used by getting data.
      properties:
        account:
          $ref: "#/components/schemas/accountInCreditNoteDto"
        amount:
          description: "The top part &gt; Amount &gt; The amount paid by the document. The value appears for new documents if the Validate document totals on entry check box is selected on the AR101000 window.\r

            If the check box is cleared, then the value appears when the document status is Open."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        applications:
          items:
            $ref: "#/components/schemas/ArAdjustDto"
          type: array
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        balance:
          description: "The top part &gt; Balance &gt; For an open customer ledger document, the balance after any cash discount was taken. \r

            For a document used in the application process, this is the balance after the payments were applied."
          format: double
          type: number
        balanceInCurrency:
          description: Background calculation giving you the Balance in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCreditNoteDto"
        cashAccount:
          description: Financial details tab &gt; The payment information section &gt; Cash account &gt; The cash account associated with the payment method.
          type: string
        cashDiscount:
          description: The top part &gt; Cash discount &gt; The cash discount amount that has been or will be taken on the document, which the system calculates based on the specified credit terms.
          format: double
          type: number
        cashDiscountInCurrency:
          description: Background calculation giving you the Cash discount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        closedFinancialPeriod:
          description: Format YYYYMM.
          type: string
        contact:
          $ref: "#/components/schemas/ContactIdNameDto"
        createdDateTime:
          description: The Attachments tab &gt; Creation time &gt; The date the attachment was created.
          format: date-time
          type: string
        currencyId:
          description: The top part &gt; Currency &gt; The currency of the document. By default, it is the customer’s default currency,but it can be changed if the Allow Currency Override check box is selected in the AR303000 window.
          type: string
        customer:
          $ref: "#/components/schemas/customerInCreditNoteDto"
        customerProject:
          description: The top part &gt; Customer project no. &gt; The customer project no. used in AutoInvoice.
          type: string
        customerRefNumber:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        detailTotal:
          description: The top part &gt; Detail total &gt; The document total, which the system calculates for all line items in the Document details tab.
          format: double
          type: number
        detailTotalInCurrency:
          description: Background calculation giving you the Detail total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        discountTotal:
          description: The top part &gt; Discount total &gt; The document discount total.
          format: double
          type: number
        discountTotalInCurrency:
          description: The top part &gt; Discount total &gt; The document discount total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        documentDate:
          description: "The top part &gt; Date* &gt; The date when the customer ledger document was created.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        documentType:
          description: "The top part &gt; Type &gt; The document type. The following types are available: invoice, debit note, credit note, overdue charge, credit write-off"
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        dontEmail:
          type: boolean
        dontPrint:
          type: boolean
        errorInfo:
          type: string
        externalReference:
          type: string
        financialPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
          type: string
        hold:
          description: The top part &gt; Hold &gt; A check box that indicates (if selected) that the document is a draft. A document with the On Hold status may be edited and cannot be released.
          type: boolean
        invoiceAddress:
          $ref: "#/components/schemas/invoiceAddressInCreditNoteDto"
        invoiceContact:
          $ref: "#/components/schemas/invoiceContactInCreditNoteDto"
        invoiceLines:
          items:
            $ref: "#/components/schemas/CreditNoteLineDto"
          type: array
        invoiceText:
          description: The top part &gt; Invoice text &gt; Any user-provided description of the customer ledger document.
          type: string
        lastModifiedDateTime:
          description: System generated field for last modification date/time of document.
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInCreditNoteDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the document.
          type: string
        origInvoiceDate:
          description: "The top part &gt; Orig invoice date &gt; The date based on which the Due date and Cash discount date is calculated. Only used if setting \"Use Orig Invoice Date\" is active in AR Preferences.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInCreditNoteDto"
        paymentReference:
          description: ///The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          type: string
        postPeriod:
          description: The top part &gt; Post period &gt; The period to which the document should be posted. Format YYYYMM.
          type: string
        project:
          $ref: "#/components/schemas/projectInCreditNoteDto"
        referenceNumber:
          description: The Top part &gt; Ref. no. &gt; The reference number of the customer ledger document in the system.
          type: string
        salesPerson:
          $ref: "#/components/schemas/salesPersonInCreditNoteDto"
        salesPersonDescr:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          type: string
        salesPersonID:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          format: int32
          type: integer
        status:
          description: "The top part &gt; Status &gt; The status of the document, which can be one of the following: Hold, Balanced, Voided, Scheduled, Open, Closed, Pending print, Pending email."
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - PendingPrint
            - PendingEmail
            - CreditHold
            - CcHold
            - Reserved
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInCreditNoteDto"
        vatExemptTotal:
          description: The top part &gt; VAT exempt. total &gt; The document total that is exempt from VAT. This total is calculated as the taxable amount for the tax with the Include in VAT Exempt Total check box selected on the Taxes form.This box is available only if the VAT Reporting feature is enabled in your system.
          format: double
          type: number
        vatExemptTotalInCurrency:
          description: Background calculation giving you the VAT exempt. total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subjected to VAT.
          format: double
          type: number
        vatTaxableTotalInCurrency:
          description: Background calculation giving you the VAT taxable total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTotal:
          description: The top part &gt; VAT total &gt; The VAT amount of the document, as defined on the VAT details tab.
          format: double
          type: number
        vatTotalInCurrency:
          description: Background calculation giving you the VAT total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
      type: object
    CreditNoteLineDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInCreditNoteLineDto"
        amount:
          description: "Amount &gt; The amount after the discount has been applied. The value of this read-only box\r

            is calculated automatically by deducting the discount amount from the extended price."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCreditNoteLineDto"
        cost:
          description: "Cost &gt; The total cost of the line in default currency. \r

            The value will always be 0 for unreleased documents."
          format: double
          type: number
        deferralCode:
          description: "The deferral code assigned to the stock item or non-stock item specified in this\r

            document line.Upon release of the document, the system generates a deferral\r

            schedule (or schedules) based on the settings defined in this deferral code."
          type: string
        deferralSchedule:
          description: Original deferral schedule &gt; A read-only column filled in by the system in the Cash return documents created by the reversing process. It shows the identifier of the deferral schedule associated with the original Cash sale document.
          format: int32
          type: integer
        description:
          description: Transaction descr. &gt; Any brief comment relevant to the transaction.The alphanumeric string may contain up to 30 characters.
          type: string
        discountAmount:
          description: "Discount amount &gt; The amount of the line-level discount that has been applied manually or\r

            automatically to this line.The system selects the Manual Discount check box\r

            and calculates the line amount after you have entered the discount amount\r

            manually and save your changes or added a new line."
          format: double
          type: number
        discountAmountInCurrency:
          description: Background calculation giving you the Discount amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        discountCode:
          description: The code of the line discount that has been applied to this line automatically or manually.
          type: string
        discountPercent:
          description: "Discount percent &gt; The percent of the line-level discount that has been applied manually or\r

            automatically.The system selects the Manual Discount check box and\r

            calculates the discount amount after you have entered the percent manually and\r

            saved your changes or added a new line."
          format: double
          type: number
        externalLink:
          type: string
        inventoryNumber:
          description: Item ID &gt; The item ID of the line item, if applicable. Only a non-stock item can be selected.
          type: string
        lineNumber:
          description: Line no. &gt; A counter of lines in the overview of cash sales document overview.
          format: int32
          type: integer
        manualAmount:
          description: Manual amount &gt; a check box indicating that the amount has been entered manually.
          format: double
          type: number
        manualAmountInCurrency:
          description: Background calculation giving you the Manual amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        manualDiscount:
          description: "Manual discount &gt; A check box that indicates (if selected) that the discount has been applied\r

            manually.If you clear the check box, the system clears entered discount percent,\r

            or discount amount, or selected discount code."
          type: boolean
        note:
          description: Table &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected to the order.
          type: string
        projectTask:
          $ref: "#/components/schemas/ProjectTaskIdDescriptionDto"
        quantity:
          description: Quantity &gt; The quantity of items (goods or services) of a particular type sold to the customer.
          format: double
          type: number
        salesperson:
          description: The field is deprecated for customer document endpoints, please use Seller instead
          type: string
        seller:
          $ref: "#/components/schemas/sellerInCreditNoteLineDto"
        subaccount:
          $ref: "#/components/schemas/subaccountInCreditNoteLineDto"
        unitPrice:
          description: "Unit price &gt; The unit price set for the item or service. If you want to update the unit price\r

            automatically to the current value(that is, the applicable sales or default price),\r

            you can use the Recalculate Prices and Discounts action.If you have modified\r

            the unit price and saved the document, the value will not be updated by the\r

            system if you change the document date."
          format: double
          type: number
        unitPriceInCurrency:
          description: Background calculation giving you the Unit price in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        uom:
          description: UoM &gt; The unit of measure (UoM) for the item.
          type: string
        vatCode:
          $ref: "#/components/schemas/vatCodeInCreditNoteLineDto"
      type: object
    CreditNoteLineUpdateDto:
      properties:
        accountNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralCode:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralSchedule:
          $ref: "#/components/schemas/DtoValueOfInt32"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        discountAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        discountCode:
          $ref: "#/components/schemas/DtoValueOfString"
        discountPercent:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        manualAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        manualDiscount:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        salesperson:
          $ref: "#/components/schemas/DtoValueOfString"
        subaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        taskId:
          $ref: "#/components/schemas/DtoValueOfString"
        termEndDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        termStartDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        unitPriceInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        vatCodeId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    CreditNoteUpdateDto:
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        contact:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        currencyId:
          $ref: "#/components/schemas/DtoValueOfString"
        customerNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        customerRefNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        documentDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        dontEmail:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        dontPrint:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        externalReference:
          $ref: "#/components/schemas/DtoValueOfString"
        financialPeriod:
          $ref: "#/components/schemas/financialPeriodInCreditNoteUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        invoiceLines:
          items:
            $ref: "#/components/schemas/CreditNoteLineUpdateDto"
          type: array
        invoiceText:
          $ref: "#/components/schemas/DtoValueOfString"
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        origInvoiceDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInCreditNoteUpdateDto"
        referenceNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        salesPersonID:
          $ref: "#/components/schemas/salesPersonIDInCreditNoteUpdateDto"
        salesperson:
          $ref: "#/components/schemas/salespersonInCreditNoteUpdateDto"
      type: object
    CreditTermDto:
      properties:
        calculationType:
          description: "Calculation Type: G - Gross amount, N - Net amount"
          type: string
        createdDateTime:
          format: date-time
          type: string
        delayDays:
          format: int32
          type: integer
        description:
          type: string
        discountDay:
          format: int32
          type: integer
        discountPercent:
          format: double
          type: number
        discountType:
          description: "Discount Type , values:\r

            N - Fixed Number of Days, \r

            D - Day of Next Month, \r

            E - End of the Month, \r

            M - End of Next Month, \r

            T - Day of the Month, \r

            P - Fixed Number of Days starting Next Month."
          type: string
        dueDateType:
          description: "Due Date Type , values:\r

            N - Fixed Number of Days, \r

            D - Day of Next Month, \r

            E - End of the Month, \r

            M - End of Next Month, \r

            T - Day of the Month, \r

            P - Fixed Number of Days starting Next Month, \r

            C - Custom."
          type: string
        dueDay1:
          format: int32
          type: integer
        dueDay1DayFrom1:
          format: int32
          type: integer
        dueDay1DayTo1:
          format: int32
          type: integer
        dueDay2:
          format: int32
          type: integer
        dueDay2DayFrom1:
          format: int32
          type: integer
        dueDay2DayTo1:
          format: int32
          type: integer
        instalmentFrequency:
          description: "Instalment Frequency, values:\r

            W - Weekly,\r

            M - Monthly,\r

            B - Semi-monthly (the second installment comes a half a month after the first one, and so on)."
          type: string
        instalmentMethod:
          description: "Instalment Method, values:\r

            E - Equal Parts,\r

            A - All Tax in First Installment (the total amount before tax is split equally between installments and the entire amount of tax is added to the first installment),\r

            S - Split by Percents in Table (the days and amounts of installments are defined by the related Instalments Schedule records)."
          type: string
        instalmentType:
          description: "Instalment Type: S - Simple, M - Multiple"
          type: string
        instalmentsSchedule:
          items:
            $ref: "#/components/schemas/InstalmentSchedule"
          type: array
        lastModifiedDateTime:
          format: date-time
          type: string
        moveDueDateIfOnTheWeekend:
          description: "Move Due Date If On The Weekend, values:\r

            1 - Keep the exact date, \r

            2 - Day before (Friday),  \r

            3 - Day after (Monday)."
          type: string
        numberOfInstalments:
          format: int32
          type: integer
        termsId:
          type: string
        visibleTo:
          description: "VisibleTo: AL - All, VE - Suppliers, CU - Customers, DS - Disabled"
          type: string
      type: object
    CreditTermQueryParameters:
      properties:
        createdDateTime:
          description: System retrieved information for created date and time.
          type: string
        createdDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        termsId:
          type: string
      type: object
    CreditTermsDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    CurrencyDto:
      properties:
        decimalPrecision:
          description: Decimal precision.
          format: int32
          type: integer
        description:
          description: Currency description.
          type: string
        id:
          description: Currency Id.
          type: string
        isBaseCurrency:
          description: Identify if the currency is the base currency.
          type: boolean
        isUsedForAccounting:
          description: Identify if is used for accounting.
          type: boolean
        symbol:
          description: Currency symbol.
          type: string
      type: object
    CurrencyIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    CurrencyRateDto:
      properties:
        effectiveDate:
          description: EffectiveDate
          format: date-time
          type: string
        fromCurrencyId:
          description: From Currency Id.
          type: string
        id:
          description: Currency rate Id.
          format: int32
          type: integer
        multDiv:
          description: Mult/Div
          type: string
        rate:
          description: Currency rate.
          format: double
          type: number
        rateReciprocal:
          description: Rate reciprocal
          format: double
          type: number
        rateType:
          description: Currency rate type.
          type: string
        toCurrencyId:
          description: To Currency Id.
          type: string
      type: object
    CurrencyRateParameters:
      properties:
        fromCurrency:
          description: Identifies from currency.
          type: string
        fromDate:
          description: From effective date.
          format: date-time
          type: string
        rateType:
          description: Identifies rate type.
          type: string
        toCurrency:
          description: Identifies to currency.
          type: string
        toDate:
          description: To effective date.
          format: date-time
          type: string
      type: object
    CurrencyRateTypeDto:
      properties:
        daysEffective:
          description: Days effective.
          format: int32
          type: integer
        description:
          description: Description.
          type: string
        id:
          description: Currency rate type Id.
          type: string
      type: object
    CustSalesPeopleDto:
      properties:
        bAccountID:
          format: int32
          type: integer
        commisionPct:
          format: double
          type: number
        createdDateTime:
          format: date-time
          type: string
        customerName:
          type: string
        errorInfo:
          type: string
        isDefault:
          type: boolean
        lastModifiedDateTime:
          format: date-time
          type: string
        locationID:
          format: int32
          type: integer
        locationName:
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
      type: object
    CustSalesPeopleQueryParameters:
      properties:
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
      type: object
    CustSalesPeopleUpdateDto:
      properties:
        commissionPct:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        customerID:
          $ref: "#/components/schemas/DtoValueOfString"
        locationID:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
      type: object
    CustSalesPersonsDto:
      properties:
        commisionPct:
          format: double
          type: number
        errorInfo:
          type: string
        isDefault:
          type: boolean
        locationID:
          type: string
        locationName:
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          type: string
        salePersonID:
          type: string
      type: object
    CustomerBalanceDto:
      properties:
        balance:
          format: double
          type: number
        customer:
          $ref: "#/components/schemas/CustomerDescriptionDto"
        lastModified:
          format: date-time
          type: string
        totalDiscountPeriod:
          format: double
          type: number
        totalDiscountYear:
          format: double
          type: number
        totalLoan:
          format: double
          type: number
        totalOrder:
          format: double
          type: number
        totalSalePeriod:
          format: double
          type: number
        totalSaleYear:
          format: double
          type: number
      type: object
    CustomerBalanceQueryParameters:
      properties:
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          type: string
        numberToRead:
          format: int32
          type: integer
        orderBy:
          type: string
        skipRecords:
          format: int32
          type: integer
      type: object
    CustomerClassDto:
      properties:
        attributes:
          items:
            $ref: "#/components/schemas/ClassAttributeDto"
          type: array
        description:
          description: The top part &gt; Description &gt; A detailed description of the customer class.
          type: string
        id:
          description: The top part &gt; Class ID	&gt; The unique identifier of the class. You can use an alphanumeric string of up to 10 characters.
          type: string
        paymentMethodId:
          description: The General information tab &gt; Payment method &gt; The payment method used by default in relations with these customers.
          type: string
        requiredTaxzoneId:
          description: The General information tab &gt; Require VAT zone &gt; A check box that means (if selected) that the VAT zone value is required for customers of the class.
          type: boolean
        taxZoneId:
          description: The General information tab &gt; VAT zone ID &gt;	The default VAT zone for customers of the class.
          type: string
      type: object
    CustomerContractDetailsDto:
      description: This class represents the CustomerContractDetails in CustomerContractController. Used for getting data.
      properties:
        currentRecurring:
          format: double
          type: number
        currentRenewal:
          format: double
          type: number
        currentSetup:
          format: double
          type: number
        effectiveFrom:
          format: date-time
          type: string
        lines:
          items:
            $ref: "#/components/schemas/CustomerContractDetailsLineDto"
          type: array
        pendingRecurring:
          format: double
          type: number
        pendingRenewal:
          format: double
          type: number
        pendingSetup:
          format: double
          type: number
        promoCode:
          $ref: "#/components/schemas/PromoCodeIdDescriptionDto"
        totalPending:
          format: double
          type: number
      type: object
    CustomerContractDetailsLineDto:
      description: This class represents a CustomerContractDetailLine in CustomerContractController. Used for getting data.
      properties:
        contractDetailId:
          format: int32
          type: integer
        description:
          type: string
        difference:
          format: double
          type: number
        extraUsagePrice:
          format: double
          type: number
        included:
          format: double
          type: number
        invoiceType:
          enum:
            - None
            - Prepaid
            - Postpaid
          type: string
        itemCode:
          type: string
        recurringDiscount:
          format: double
          type: number
        recurringPrice:
          format: double
          type: number
        renewalDiscount:
          format: double
          type: number
        renewalPrice:
          format: double
          type: number
        setupDiscount:
          format: double
          type: number
        setupPrice:
          format: double
          type: number
      type: object
    CustomerContractDetailsUpdateDto:
      properties:
        contractDetailId:
          $ref: "#/components/schemas/DtoValueOfInt32"
        extraUsagePrice:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        included:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        itemCode:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        recurringPrice:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        renewalPrice:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        setupPrice:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
      type: object
    CustomerContractDto:
      description: This class represents a CustomerContract in CustomerContractController. Used for getting data.
      properties:
        attributes:
          description: Project attributes tab
          items:
            $ref: "#/components/schemas/AttributeIdValueDto"
          type: array
        balance:
          description: The top part &gt; Balance &gt; A read-only field that displays the sum of the balances of open invoices associated with the contract.
          format: double
          type: number
        contractId:
          description: "Mandatory field: The top part &gt; Contract ID* &gt; The unique identifier of a contract."
          type: string
        contractTemplate:
          $ref: "#/components/schemas/contractTemplateInCustomerContractDto"
        customer:
          $ref: "#/components/schemas/customerInCustomerContractDto"
        description:
          description: "Mandatory field: The top part &gt; Description* &gt; The description of the contract, which includes any related comments."
          type: string
        details:
          $ref: "#/components/schemas/detailsInCustomerContractDto"
        lastModifiedDateTime:
          description: System generated information
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInCustomerContractDto"
        status:
          description: "The top part &gt; Status &gt; The status of the contract, which is one of the following: Draft, Pending activation, Active, Expired, Cancelled, Pending update."
          enum:
            - Draft
            - InApproval
            - Active
            - Expired
            - Canceled
            - Completed
            - InUpgrade
            - PendingActivation
          type: string
        summary:
          $ref: "#/components/schemas/summaryInCustomerContractDto"
      type: object
    CustomerContractQueryParameters:
      properties:
        attributes:
          description: " Attributes (additional information) connected to the entity.\r

            \ Examples:\r

            {{base}}/customerContract?attributes={\"AttributeID\":\"ValueID\",\"AttributeID\":\"ValueID\"}\r

            {{base}}/customerContract?attributes={\"AttributeID\":\"ValueID1,ValueID2\"}"
          type: string
        contractTemplate:
          type: string
        customer:
          type: string
        expandAttributes:
          type: boolean
        expandDetails:
          type: boolean
        expandSummary:
          type: boolean
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          type: string
        numberToRead:
          format: int32
          type: integer
        orderBy:
          type: string
        skipRecords:
          format: int32
          type: integer
        status:
          enum:
            - Draft
            - InApproval
            - Active
            - Expired
            - Canceled
            - Completed
            - InUpgrade
            - PendingActivation
          type: string
      type: object
    CustomerContractRecurringSummaryDto:
      description: This class represents the CustomerContractRecurringSummary in CustomerContractController. Used for getting data.
      properties:
        extraUsageTotal:
          format: double
          type: number
        lines:
          items:
            $ref: "#/components/schemas/CustomerContractRecurringSummaryLineDto"
          type: array
        recurringTotal:
          format: double
          type: number
        totalDue:
          format: double
          type: number
      type: object
    CustomerContractRecurringSummaryLineDto:
      description: This class represents a CustomerContractRecurringSummaryLine in CustomerContractController. Used for getting data.
      properties:
        description:
          type: string
        extraUsagePrice:
          format: double
          type: number
        included:
          format: double
          type: number
        invoiceType:
          enum:
            - None
            - Prepay
            - Usage
            - Deposits
          type: string
        itemCode:
          type: string
        itemId:
          type: string
        recurringDiscount:
          format: double
          type: number
        recurringPrice:
          format: double
          type: number
        unInvoiced:
          format: double
          type: number
        uom:
          type: string
        usedTotal:
          format: double
          type: number
      type: object
    CustomerContractSummaryDto:
      description: This class represents the CustomerContractSummary in CustomerContractController. Used for getting data.
      properties:
        activationDate:
          description: Contract settings section &gt; Activation date &gt; The date to initiate the provision of the contract services.
          format: date-time
          type: string
        caseCountItem:
          $ref: "#/components/schemas/caseCountItemInCustomerContractSummaryDto"
        currency:
          description: "Mandatory field: Contract settings section &gt; Currency* &gt; The currency used in the contract."
          type: string
        expirationDate:
          description: Contract settings section &gt; Expiration date &gt; The date when the contract expires.
          format: date-time
          type: string
        gracePeriod:
          description: Contract settings section &gt; Grace period &gt; The number of days after the expiration date where the contract can still be renewed.
          format: int32
          type: integer
        invoiceAccount:
          $ref: "#/components/schemas/invoiceAccountInCustomerContractSummaryDto"
        invoiceLocation:
          $ref: "#/components/schemas/LocationNameDescriptionDto"
        invoiceTo:
          description: "Invoice information section &gt; Invoice to &gt; The setting that defines the customer account to be invoiced for a contract. The following options are available: Parent account, Customer account, Specific account."
          enum:
            - ParentAccount
            - CustomerAccount
            - SpecificAccount
          type: string
        invoicingPeriod:
          description: "Mandatory field: Invoicing schedule section &gt; Invoicing period* &gt; The type of invoicing schedule, which can be one of the following options: Weekly, Monthly; Quarterly, Half a year, Yearly, On demand, Statement based."
          enum:
            - Statement
            - Quarterly
            - Monthly
            - Annual
            - SemiAnnual
            - Weekly
            - OnDemand
          type: string
        invoicingScheduleStartsOn:
          description: Invoicing schedule section &gt; Invoice schedule starts on &gt; A read-only field that displays the start date of the first invoicing period.
          format: date-time
          type: string
        lastInvoicingDate:
          description: Invoicing schedule section &gt; Last invoicing date &gt; A read-only field that shows the date when the invoicing was performed most recently.
          format: date-time
          type: string
        massRenewal:
          description: Contract settings section &gt; Mass renewal &gt; A check box indicating renewal of all contract at expiration date.
          type: boolean
        nextInvoicingDate:
          description: Invoicing schedule section &gt; Next invoicing date &gt; The date of the next invoicing invoice, according to the invoicing schedule.
          format: date-time
          type: string
        owner:
          $ref: "#/components/schemas/ownerInCustomerContractSummaryDto"
        renewalPoint:
          description: Contract settings section &gt; Renewal point &gt; The number of days before expiration where the renewal process are to begin.
          format: int32
          type: integer
        salesPerson:
          $ref: "#/components/schemas/salesPersonInCustomerContractSummaryDto"
        setupDate:
          description: "Mandatory field: Contract settings section &gt; Setup date* &gt; The date of contract setup."
          format: date-time
          type: string
        terminationDate:
          description: Contract settings section &gt; Termination date &gt; The date when the contract will be cancelled; no services will be provided.
          format: date-time
          type: string
      type: object
    CustomerContractUpdateDto:
      properties:
        activationDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        attributeLines:
          items:
            $ref: "#/components/schemas/AttributeLineUpdateDto"
          type: array
        contractId:
          $ref: "#/components/schemas/contractIdInCustomerContractUpdateDto"
        contractTemplate:
          $ref: "#/components/schemas/contractTemplateInCustomerContractUpdateDto"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        customer:
          $ref: "#/components/schemas/customerInCustomerContractUpdateDto"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        details:
          items:
            $ref: "#/components/schemas/CustomerContractDetailsUpdateDto"
          type: array
        expirationDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        gracePeriod:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        invoiceAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        invoiceLocation:
          $ref: "#/components/schemas/DtoValueOfString"
        invoiceTo:
          $ref: "#/components/schemas/DtoValueOfNullableOfInvoiceToType"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        massRenewal:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        owner:
          $ref: "#/components/schemas/DtoValueOfString"
        renewalPoint:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        salesPerson:
          $ref: "#/components/schemas/DtoValueOfString"
        setupDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
      type: object
    CustomerCreditNoteDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInCustomerCreditNoteDto"
        amount:
          description: "The top part &gt; Amount &gt; The amount paid by the document. The value appears for new documents if the Validate document totals on entry check box is selected on the AR101000 window.\r

            If the check box is cleared, then the value appears when the document status is Open."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        applications:
          items:
            $ref: "#/components/schemas/ArAdjustDto"
          type: array
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        balance:
          description: "The top part &gt; Balance &gt; For an open customer ledger document, the balance after any cash discount was taken. \r

            For a document used in the application process, this is the balance after the payments were applied."
          format: double
          type: number
        balanceInCurrency:
          description: Background calculation giving you the Balance in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCustomerCreditNoteDto"
        cashAccount:
          description: Financial details tab &gt; The payment information section &gt; Cash account &gt; The cash account associated with the payment method.
          type: string
        cashDiscount:
          description: The top part &gt; Cash discount &gt; The cash discount amount that has been or will be taken on the document, which the system calculates based on the specified credit terms.
          format: double
          type: number
        cashDiscountDate:
          description: The top part &gt; Cash discount date* &gt; The end date of the cash discount period, which the system calculates by using the credit terms.
          format: date-time
          type: string
        cashDiscountInCurrency:
          description: Background calculation giving you the Cash discount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        closedFinancialPeriod:
          description: Format YYYYMM.
          type: string
        contact:
          $ref: "#/components/schemas/contactInCustomerCreditNoteDto"
        createdDateTime:
          description: The Attachments tab &gt; Creation time &gt; The date the attachment was created.
          format: date-time
          type: string
        creditTerms:
          $ref: "#/components/schemas/creditTermsInCustomerCreditNoteDto"
        currencyId:
          description: The top part &gt; Currency &gt; The currency of the document. By default, it is the customer’s default currency,but it can be changed if the Allow Currency Override check box is selected in the AR303000 window.
          type: string
        customer:
          $ref: "#/components/schemas/customerInCustomerCreditNoteDto"
        customerProject:
          description: The top part &gt; Customer project no. &gt; The customer project no. used in AutoInvoice.
          type: string
        customerRefNumber:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        customerVatZone:
          $ref: "#/components/schemas/customerVatZoneInCustomerCreditNoteDto"
        detailTotal:
          description: The top part &gt; Detail total &gt; The document total, which the system calculates for all line items in the Document details tab.
          format: double
          type: number
        detailTotalInCurrency:
          description: Background calculation giving you the Detail total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        discountTotal:
          description: The top part &gt; Discount total &gt; The document discount total.
          format: double
          type: number
        discountTotalInCurrency:
          description: The top part &gt; Discount total &gt; The document discount total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        documentDate:
          description: "The top part &gt; Date* &gt; The date when the customer ledger document was created.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        documentDueDate:
          description: The top part &gt; Due date* &gt; The date when payment for the document is due, in accordance with the credit terms.
          format: date-time
          type: string
        documentType:
          description: "The top part &gt; Type &gt; The document type. The following types are available: invoice, debit note, credit note, overdue charge, credit write-off"
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        dontEmail:
          type: boolean
        dontPrint:
          type: boolean
        dunningLetterDate:
          description: The Financial details tab &gt; The Dunning information section &gt; Dunning letter date &gt; The date of the last released dunning letter in which the document was listed.
          format: date-time
          type: string
        dunningLetterLevel:
          description: The Financial details tab &gt; The Dunning information section &gt; Dunning level &gt; The dunning level of the document.
          format: int32
          type: integer
        errorInfo:
          type: string
        exchangeRate:
          description: The top part &gt; Currency &gt; The middle field, click the down arrow &gt; Exchange rate - To change the currency rate, click the arrow by the rate to invoke the Rate selection dialog box.
          format: double
          type: number
        externalReference:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        financialPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
          type: string
        hold:
          description: The top part &gt; Hold &gt; A check box that indicates (if selected) that the document is a draft. A document with the On Hold status may be edited and cannot be released.
          type: boolean
        invoiceAddress:
          $ref: "#/components/schemas/invoiceAddressInCustomerCreditNoteDto"
        invoiceContact:
          $ref: "#/components/schemas/invoiceContactInCustomerCreditNoteDto"
        invoiceText:
          description: The top part &gt; Invoice text &gt; Any user-provided description of the customer ledger document.
          type: string
        isRotRutDeductible:
          description: The top part &gt; Domestic services deductible document &gt; A check box indicating if the document is Rot/rut deductible (applicable for the Swedish markets)
          type: boolean
        lastModifiedDateTime:
          description: System generated field for last modification date/time of document.
          format: date-time
          type: string
        lines:
          items:
            $ref: "#/components/schemas/CustomerCreditNoteLineDto"
          type: array
        location:
          $ref: "#/components/schemas/locationInCustomerCreditNoteDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the document.
          type: string
        origInvoiceDate:
          description: "The top part &gt; Orig invoice date &gt; The date based on which the Due date and Cash discount date is calculated. Only used if setting \"Use Orig Invoice Date\" is active in AR Preferences.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInCustomerCreditNoteDto"
        paymentReference:
          description: ///The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          type: string
        postPeriod:
          description: The top part &gt; Post period &gt; The period to which the document should be posted. Format YYYYMM.
          type: string
        project:
          $ref: "#/components/schemas/projectInCustomerCreditNoteDto"
        referenceNumber:
          description: The Top part &gt; Ref. no. &gt; The reference number of the customer ledger document in the system.
          type: string
        roundingDiff:
          description: The top part &gt; Rounding diff. &gt; The difference between the original amount and the rounded amount.
          format: double
          type: number
        salesPerson:
          $ref: "#/components/schemas/salesPersonInCustomerCreditNoteDto"
        salesPersonDescr:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          type: string
        salesPersonID:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          format: int32
          type: integer
        sendToAutoInvoice:
          description: The Attachment tab &gt; Send the file to AutoInvoice &gt; The selected files will be attached to the invoice.
          type: boolean
        status:
          description: "The top part &gt; Status &gt; The status of the document, which can be one of the following: Hold, Balanced, Voided, Scheduled, Open, Closed, Pending print, Pending email."
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - PendingPrint
            - PendingEmail
            - CreditHold
            - CcHold
            - Reserved
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInCustomerCreditNoteDto"
        taxDetails:
          items:
            $ref: "#/components/schemas/TaxDetailDto"
          type: array
        vatExemptTotal:
          description: The top part &gt; VAT exempt. total &gt; The document total that is exempt from VAT. This total is calculated as the taxable amount for the tax with the Include in VAT Exempt Total check box selected on the Taxes form.This box is available only if the VAT Reporting feature is enabled in your system.
          format: double
          type: number
        vatExemptTotalInCurrency:
          description: Background calculation giving you the VAT exempt. total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subjected to VAT.
          format: double
          type: number
        vatTaxableTotalInCurrency:
          description: Background calculation giving you the VAT taxable total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTotal:
          description: The top part &gt; VAT total &gt; The VAT amount of the document, as defined on the VAT details tab.
          format: double
          type: number
        vatTotalInCurrency:
          description: Background calculation giving you the VAT total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
      type: object
    CustomerCreditNoteLineDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInCustomerCreditNoteLineDto"
        amount:
          description: "Amount &gt; The amount after the discount has been applied. The value of this read-only box\r

            is calculated automatically by deducting the discount amount from the extended price."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCustomerCreditNoteLineDto"
        cost:
          description: "Cost &gt; The total cost of the line in default currency. \r

            The value will always be 0 for unreleased documents."
          format: double
          type: number
        deductableAmount:
          format: double
          type: number
        deferralCode:
          description: "The deferral code assigned to the stock item or non-stock item specified in this\r

            document line.Upon release of the document, the system generates a deferral\r

            schedule (or schedules) based on the settings defined in this deferral code."
          type: string
        deferralSchedule:
          description: Original deferral schedule &gt; A read-only column filled in by the system in the Cash return documents created by the reversing process. It shows the identifier of the deferral schedule associated with the original Cash sale document.
          format: int32
          type: integer
        description:
          description: Transaction descr. &gt; Any brief comment relevant to the transaction.The alphanumeric string may contain up to 30 characters.
          type: string
        discountAmount:
          description: "Discount amount &gt; The amount of the line-level discount that has been applied manually or\r

            automatically to this line.The system selects the Manual Discount check box\r

            and calculates the line amount after you have entered the discount amount\r

            manually and save your changes or added a new line."
          format: double
          type: number
        discountAmountInCurrency:
          description: Background calculation giving you the Discount amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        discountCode:
          description: The code of the line discount that has been applied to this line automatically or manually.
          type: string
        discountPercent:
          description: "Discount percent &gt; The percent of the line-level discount that has been applied manually or\r

            automatically.The system selects the Manual Discount check box and\r

            calculates the discount amount after you have entered the percent manually and\r

            saved your changes or added a new line."
          format: double
          type: number
        externalLink:
          type: string
        inventoryNumber:
          description: Item ID &gt; The item ID of the line item, if applicable. Only a non-stock item can be selected.
          type: string
        isRotRutDeductible:
          type: boolean
        itemType:
          enum:
            - Service
            - MaterialCost
            - OtherCost
          type: string
        lineNumber:
          description: Line no. &gt; A counter of lines in the overview of cash sales document overview.
          format: int32
          type: integer
        manualAmount:
          description: Manual amount &gt; a check box indicating that the amount has been entered manually.
          format: double
          type: number
        manualAmountInCurrency:
          description: Background calculation giving you the Manual amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        manualDiscount:
          description: "Manual discount &gt; A check box that indicates (if selected) that the discount has been applied\r

            manually.If you clear the check box, the system clears entered discount percent,\r

            or discount amount, or selected discount code."
          type: boolean
        note:
          description: Table &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected to the order.
          type: string
        projectTask:
          $ref: "#/components/schemas/ProjectTaskIdDescriptionDto"
        quantity:
          description: Quantity &gt; The quantity of items (goods or services) of a particular type sold to the customer.
          format: double
          type: number
        salesperson:
          description: The field is deprecated for customer document endpoints, please use Seller instead
          type: string
        seller:
          $ref: "#/components/schemas/sellerInCustomerCreditNoteLineDto"
        soOrderNbr:
          type: string
        soOrderType:
          type: string
        soShipmentNbr:
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInCustomerCreditNoteLineDto"
        termEndDate:
          description: "The date when the process of the deferred revenue recognition should finish\r

            for the selected item; this date can be specified manually if the deferral code\r

            assigned to the item is based on the Flexible by Periods, Prorate by days or\r

            Flexible by Days in Period recognition method.This column appears only if the\r

            Deferred Revenue Management feature is enabled on the Enable/Disable Features form."
          format: date-time
          type: string
        termStartDate:
          description: "The date when the process of deferred revenue recognition should start for the\r

            selected item; this date can be specified manually if the deferral code assigned\r

            to the item is based on the Flexible by Periods, Prorate by days or Flexible by\r

            Days in Period recognition method.This column appears only if the Deferred\r

            Revenue Management feature is enabled on the Enable/Disable Features screen."
          format: date-time
          type: string
        typeOfWork:
          $ref: "#/components/schemas/WorkTypeDto"
        unitPrice:
          description: "Unit price &gt; The unit price set for the item or service. If you want to update the unit price\r

            automatically to the current value(that is, the applicable sales or default price),\r

            you can use the Recalculate Prices and Discounts action.If you have modified\r

            the unit price and saved the document, the value will not be updated by the\r

            system if you change the document date."
          format: double
          type: number
        unitPriceInCurrency:
          description: Background calculation giving you the Unit price in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        uom:
          description: UoM &gt; The unit of measure (UoM) for the item.
          type: string
        vatCode:
          $ref: "#/components/schemas/vatCodeInCustomerCreditNoteLineDto"
      type: object
    CustomerCreditNoteLineUpdateDto:
      properties:
        accountNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralCode:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralSchedule:
          $ref: "#/components/schemas/DtoValueOfInt32"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        discountAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        discountCode:
          $ref: "#/components/schemas/DtoValueOfString"
        discountPercent:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        manualAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        manualDiscount:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        salesperson:
          $ref: "#/components/schemas/DtoValueOfString"
        subaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        taskId:
          $ref: "#/components/schemas/DtoValueOfString"
        termEndDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        termStartDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        unitPriceInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        vatCodeId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    CustomerCreditNoteUpdateDto:
      properties:
        applicationLines:
          items:
            $ref: "#/components/schemas/PaymentLineBaseUpdateDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        contact:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        currencyId:
          $ref: "#/components/schemas/DtoValueOfString"
        customerNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        customerRefNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        customerVatZoneId:
          $ref: "#/components/schemas/DtoValueOfString"
        documentDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        dontEmail:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        dontPrint:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        externalReference:
          $ref: "#/components/schemas/DtoValueOfString"
        financialPeriod:
          $ref: "#/components/schemas/financialPeriodInCustomerCreditNoteUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        invoiceAddress:
          $ref: "#/components/schemas/DtoValueOfSalesInvoiceAddressUpdateDto"
        invoiceContact:
          $ref: "#/components/schemas/DtoValueOfSalesInvoiceContactUpdateDto"
        invoiceText:
          $ref: "#/components/schemas/DtoValueOfString"
        lines:
          items:
            $ref: "#/components/schemas/CustomerCreditNoteLineUpdateDto"
          type: array
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        origInvoiceDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInCustomerCreditNoteUpdateDto"
        project:
          $ref: "#/components/schemas/DtoValueOfString"
        referenceNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        salesPersonID:
          $ref: "#/components/schemas/salesPersonIDInCustomerCreditNoteUpdateDto"
        salesperson:
          $ref: "#/components/schemas/salespersonInCustomerCreditNoteUpdateDto"
        sendToAutoInvoice:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        taxDetails:
          items:
            $ref: "#/components/schemas/TaxDetailUpdateDto"
          type: array
      type: object
    CustomerCreditWriteOffDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInCustomerCreditWriteOffDto"
        amount:
          description: "The top part &gt; Amount &gt; The amount paid by the document. The value appears for new documents if the Validate document totals on entry check box is selected on the AR101000 window.\r

            If the check box is cleared, then the value appears when the document status is Open."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        balance:
          description: "The top part &gt; Balance &gt; For an open customer ledger document, the balance after any cash discount was taken. \r

            For a document used in the application process, this is the balance after the payments were applied."
          format: double
          type: number
        balanceInCurrency:
          description: Background calculation giving you the Balance in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCustomerCreditWriteOffDto"
        cashAccount:
          description: Financial details tab &gt; The payment information section &gt; Cash account &gt; The cash account associated with the payment method.
          type: string
        cashDiscount:
          description: The top part &gt; Cash discount &gt; The cash discount amount that has been or will be taken on the document, which the system calculates based on the specified credit terms.
          format: double
          type: number
        cashDiscountInCurrency:
          description: Background calculation giving you the Cash discount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        closedFinancialPeriod:
          description: Format YYYYMM.
          type: string
        createdDateTime:
          description: The Attachments tab &gt; Creation time &gt; The date the attachment was created.
          format: date-time
          type: string
        currencyId:
          description: The top part &gt; Currency &gt; The currency of the document. By default, it is the customer’s default currency,but it can be changed if the Allow Currency Override check box is selected in the AR303000 window.
          type: string
        customer:
          $ref: "#/components/schemas/customerInCustomerCreditWriteOffDto"
        customerProject:
          description: The top part &gt; Customer project no. &gt; The customer project no. used in AutoInvoice.
          type: string
        customerRefNumber:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        customerVatZone:
          $ref: "#/components/schemas/customerVatZoneInCustomerCreditWriteOffDto"
        documentDate:
          description: "The top part &gt; Date* &gt; The date when the customer ledger document was created.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        documentType:
          description: "The top part &gt; Type &gt; The document type. The following types are available: invoice, debit note, credit note, overdue charge, credit write-off"
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        errorInfo:
          type: string
        financialPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
          type: string
        hold:
          description: The top part &gt; Hold &gt; A check box that indicates if the document is a draft. A document with the On Hold status may be edited and cannot be released.
          type: boolean
        invoiceText:
          description: The top part &gt; Invoice text &gt; Any user-provided description of the customer ledger document.
          type: string
        lastModifiedDateTime:
          description: System generated field for last modification date/time of document.
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInCustomerCreditWriteOffDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the document.
          type: string
        origInvoiceDate:
          description: "The top part &gt; Orig invoice date &gt; The date based on which the Due date and Cash discount date is calculated. Only used if setting \"Use Orig Invoice Date\" is active in AR Preferences.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInCustomerCreditWriteOffDto"
        postPeriod:
          description: The top part &gt; Post period &gt; The period to which the document should be posted. Format YYYYMM.
          type: string
        project:
          $ref: "#/components/schemas/projectInCustomerCreditWriteOffDto"
        referenceNumber:
          description: The Top part &gt; Ref. no. &gt; The reference number of the customer ledger document in the system.
          type: string
        roundingDiff:
          description: The top part &gt; Rounding diff. &gt; The difference between the original amount and the rounded amount.
          format: double
          type: number
        status:
          description: "The top part &gt; Status &gt; The status of the document, which can be one of the following: Hold, Balanced, Voided, Scheduled, Open, Closed, Pending print, Pending email."
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - PendingPrint
            - PendingEmail
            - CreditHold
            - CcHold
            - Reserved
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInCustomerCreditWriteOffDto"
        vatTotal:
          description: The top part &gt; VAT total &gt; The VAT amount of the document, as defined on the VAT details tab.
          format: double
          type: number
        vatTotalInCurrency:
          description: Background calculation giving you the VAT total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
      type: object
    CustomerDebitNoteDto:
      description: This class represents a Customer Debit Note. Used for getting data.
      properties:
        account:
          $ref: "#/components/schemas/accountInCustomerDebitNoteDto"
        amount:
          description: "The top part &gt; Amount &gt; The amount paid by the document. The value appears for new documents if the Validate document totals on entry check box is selected on the AR101000 window.\r

            If the check box is cleared, then the value appears when the document status is Open."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        applications:
          items:
            $ref: "#/components/schemas/ArAdjustDto"
          type: array
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        balance:
          description: "The top part &gt; Balance &gt; For an open customer ledger document, the balance after any cash discount was taken. \r

            For a document used in the application process, this is the balance after the payments were applied."
          format: double
          type: number
        balanceInCurrency:
          description: Background calculation giving you the Balance in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCustomerDebitNoteDto"
        cashAccount:
          description: Financial details tab &gt; The payment information section &gt; Cash account &gt; The cash account associated with the payment method.
          type: string
        cashDiscount:
          description: The top part &gt; Cash discount &gt; The cash discount amount that has been or will be taken on the document, which the system calculates based on the specified credit terms.
          format: double
          type: number
        cashDiscountDate:
          description: "Mandatory field: The Top part &gt; Cash discount date* &gt; The end date of the cash discount period, which the system calculates by using the credit terms."
          format: date-time
          type: string
        cashDiscountInCurrency:
          description: Background calculation giving you the Cash discount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        closedFinancialPeriod:
          description: Format YYYYMM.
          type: string
        contact:
          $ref: "#/components/schemas/contactInCustomerDebitNoteDto"
        createdDateTime:
          description: The Attachments tab &gt; Creation time &gt; The date the attachment was created.
          format: date-time
          type: string
        creditTerms:
          $ref: "#/components/schemas/creditTermsInCustomerDebitNoteDto"
        currencyId:
          description: The top part &gt; Currency &gt; The currency of the document. By default, it is the customer’s default currency,but it can be changed if the Allow Currency Override check box is selected in the AR303000 window.
          type: string
        customer:
          $ref: "#/components/schemas/customerInCustomerDebitNoteDto"
        customerProject:
          description: The top part &gt; Customer project no. &gt; The customer project no. used in AutoInvoice.
          type: string
        customerRefNumber:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        customerVatZone:
          $ref: "#/components/schemas/customerVatZoneInCustomerDebitNoteDto"
        detailTotal:
          description: The top part &gt; Detail total &gt; The document total, which the system calculates for all line items in the Document details tab.
          format: double
          type: number
        detailTotalInCurrency:
          description: Background calculation giving you the Detail total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        discountTotal:
          description: The top part &gt; Discount total &gt; The document discount total.
          format: double
          type: number
        discountTotalInCurrency:
          description: The top part &gt; Discount total &gt; The document discount total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        documentDate:
          description: "The top part &gt; Date* &gt; The date when the customer ledger document was created.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        documentDueDate:
          description: "Mandatory field: The Top part &gt; Due date* &gt; The date when payment for the document is due, in accordance with the credit terms."
          format: date-time
          type: string
        documentType:
          description: "The top part &gt; Type &gt; The document type. The following types are available: invoice, debit note, credit note, overdue charge, credit write-off"
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        dontEmail:
          type: boolean
        dontPrint:
          type: boolean
        dunningLetterDate:
          description: The Financial details tab &gt; The Dunning information section &gt; Dunning letter date &gt; The date of the last released dunning letter in which the document was listed.
          format: date-time
          type: string
        dunningLetterLevel:
          description: The Financial details tab &gt; The Dunning information section &gt; Dunning level &gt; The dunning level of the document.
          format: int32
          type: integer
        errorInfo:
          type: string
        exchangeRate:
          description: The Top part &gt; Currency &gt; The middle field, click the down arrow &gt; Exchange rate.
          format: double
          type: number
        externalReference:
          description: The Top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        financialPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
          type: string
        hold:
          description: The top part &gt; Hold &gt; A check box that indicates (if selected) that the document is a draft. A document with the On Hold status may be edited and cannot be released.
          type: boolean
        invoiceAddress:
          $ref: "#/components/schemas/invoiceAddressInCustomerDebitNoteDto"
        invoiceContact:
          $ref: "#/components/schemas/invoiceContactInCustomerDebitNoteDto"
        invoiceText:
          description: The top part &gt; Invoice text &gt; Any user-provided description of the customer ledger document.
          type: string
        isRotRutDeductible:
          description: The top part &gt; Domestic services deductible document &gt; A check box indicating if the document is Rot/rut deductible (applicable for the Swedish markets)
          type: boolean
        lastModifiedDateTime:
          description: System generated field for last modification date/time of document.
          format: date-time
          type: string
        lines:
          items:
            $ref: "#/components/schemas/CustomerDebitNoteLineDto"
          type: array
        location:
          $ref: "#/components/schemas/locationInCustomerDebitNoteDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the document.
          type: string
        origInvoiceDate:
          description: "The top part &gt; Orig invoice date &gt; The date based on which the Due date and Cash discount date is calculated. Only used if setting \"Use Orig Invoice Date\" is active in AR Preferences.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInCustomerDebitNoteDto"
        paymentReference:
          description: ///The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          type: string
        postPeriod:
          description: The top part &gt; Post period &gt; The period to which the document should be posted. Format YYYYMM.
          type: string
        project:
          $ref: "#/components/schemas/projectInCustomerDebitNoteDto"
        referenceNumber:
          description: The Top part &gt; Ref. no. &gt; The reference number of the customer ledger document in the system.
          type: string
        roundingDiff:
          description: The Top part &gt; Rounding diff. &gt; The difference between the original amount and the rounded amount.
          format: double
          type: number
        salesPerson:
          $ref: "#/components/schemas/salesPersonInCustomerDebitNoteDto"
        salesPersonDescr:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          type: string
        salesPersonID:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          format: int32
          type: integer
        status:
          description: "The top part &gt; Status &gt; The status of the document, which can be one of the following: Hold, Balanced, Voided, Scheduled, Open, Closed, Pending print, Pending email."
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - PendingPrint
            - PendingEmail
            - CreditHold
            - CcHold
            - Reserved
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInCustomerDebitNoteDto"
        taxDetails:
          items:
            $ref: "#/components/schemas/TaxDetailDto"
          type: array
        vatExemptTotal:
          description: The top part &gt; VAT exempt. total &gt; The document total that is exempt from VAT. This total is calculated as the taxable amount for the tax with the Include in VAT Exempt Total check box selected on the Taxes form.This box is available only if the VAT Reporting feature is enabled in your system.
          format: double
          type: number
        vatExemptTotalInCurrency:
          description: Background calculation giving you the VAT exempt. total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subjected to VAT.
          format: double
          type: number
        vatTaxableTotalInCurrency:
          description: Background calculation giving you the VAT taxable total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTotal:
          description: The top part &gt; VAT total &gt; The VAT amount of the document, as defined on the VAT details tab.
          format: double
          type: number
        vatTotalInCurrency:
          description: Background calculation giving you the VAT total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
      type: object
    CustomerDebitNoteLineDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInCustomerDebitNoteLineDto"
        amount:
          description: "Amount &gt; The amount after the discount has been applied. The value of this read-only box\r

            is calculated automatically by deducting the discount amount from the extended price."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCustomerDebitNoteLineDto"
        cost:
          description: "Cost &gt; The total cost of the line in default currency. \r

            The value will always be 0 for unreleased documents."
          format: double
          type: number
        deductableAmount:
          format: double
          type: number
        deferralCode:
          description: "The deferral code assigned to the stock item or non-stock item specified in this\r

            document line.Upon release of the document, the system generates a deferral\r

            schedule (or schedules) based on the settings defined in this deferral code."
          type: string
        deferralSchedule:
          description: Original deferral schedule &gt; A read-only column filled in by the system in the Cash return documents created by the reversing process. It shows the identifier of the deferral schedule associated with the original Cash sale document.
          format: int32
          type: integer
        description:
          description: Transaction descr. &gt; Any brief comment relevant to the transaction.The alphanumeric string may contain up to 30 characters.
          type: string
        discountAmount:
          description: "Discount amount &gt; The amount of the line-level discount that has been applied manually or\r

            automatically to this line.The system selects the Manual Discount check box\r

            and calculates the line amount after you have entered the discount amount\r

            manually and save your changes or added a new line."
          format: double
          type: number
        discountAmountInCurrency:
          description: Background calculation giving you the Discount amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        discountCode:
          description: The code of the line discount that has been applied to this line automatically or manually.
          type: string
        discountPercent:
          description: "Discount percent &gt; The percent of the line-level discount that has been applied manually or\r

            automatically.The system selects the Manual Discount check box and\r

            calculates the discount amount after you have entered the percent manually and\r

            saved your changes or added a new line."
          format: double
          type: number
        externalLink:
          type: string
        inventoryNumber:
          description: Item ID &gt; The item ID of the line item, if applicable. Only a non-stock item can be selected.
          type: string
        isRotRutDeductible:
          description: Domestic services deductible document &gt; A check box indicating if the document is Rot/rut deductible (applicable for the Swedish markets)
          type: boolean
        itemType:
          enum:
            - Service
            - MaterialCost
            - OtherCost
          type: string
        lineNumber:
          description: Line no. &gt; A counter of lines in the overview of cash sales document overview.
          format: int32
          type: integer
        manualAmount:
          description: Manual amount &gt; a check box indicating that the amount has been entered manually.
          format: double
          type: number
        manualAmountInCurrency:
          description: Background calculation giving you the Manual amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        manualDiscount:
          description: "Manual discount &gt; A check box that indicates (if selected) that the discount has been applied\r

            manually.If you clear the check box, the system clears entered discount percent,\r

            or discount amount, or selected discount code."
          type: boolean
        note:
          description: Table &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected to the order.
          type: string
        quantity:
          description: Quantity &gt; The quantity of items (goods or services) of a particular type sold to the customer.
          format: double
          type: number
        salesperson:
          description: The field is deprecated for customer document endpoints, please use Seller instead
          type: string
        seller:
          $ref: "#/components/schemas/sellerInCustomerDebitNoteLineDto"
        soOrderNbr:
          type: string
        soOrderType:
          type: string
        soShipmentNbr:
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInCustomerDebitNoteLineDto"
        termEndDate:
          description: "The date when the process of the deferred revenue recognition should finish\r

            for the selected item; this date can be specified manually if the deferral code\r

            assigned to the item is based on the Flexible by Periods, Prorate by days or\r

            Flexible by Days in Period recognition method.This column appears only if the\r

            Deferred Revenue Management feature is enabled on the Enable/Disable Features form."
          format: date-time
          type: string
        termStartDate:
          description: "The date when the process of deferred revenue recognition should start for the\r

            selected item; this date can be specified manually if the deferral code assigned\r

            to the item is based on the Flexible by Periods, Prorate by days or Flexible by\r

            Days in Period recognition method.This column appears only if the Deferred\r

            Revenue Management feature is enabled on the Enable/Disable Features screen."
          format: date-time
          type: string
        typeOfWork:
          $ref: "#/components/schemas/WorkTypeDto"
        unitPrice:
          description: "Unit price &gt; The unit price set for the item or service. If you want to update the unit price\r

            automatically to the current value(that is, the applicable sales or default price),\r

            you can use the Recalculate Prices and Discounts action.If you have modified\r

            the unit price and saved the document, the value will not be updated by the\r

            system if you change the document date."
          format: double
          type: number
        unitPriceInCurrency:
          description: Background calculation giving you the Unit price in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        uom:
          description: UoM &gt; The unit of measure (UoM) for the item.
          type: string
        vatCode:
          $ref: "#/components/schemas/vatCodeInCustomerDebitNoteLineDto"
      type: object
    CustomerDebitNoteLinesUpdateDto:
      properties:
        accountNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralCode:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralSchedule:
          $ref: "#/components/schemas/DtoValueOfInt32"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        discountAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        discountCode:
          $ref: "#/components/schemas/DtoValueOfString"
        discountPercent:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        domesticServicesDeductible:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        itemType:
          $ref: "#/components/schemas/DtoValueOfNullableOfRutRotItemTypes"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        manualAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        manualDiscount:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        salesperson:
          $ref: "#/components/schemas/DtoValueOfString"
        subaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        termEndDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        termStartDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        typeOfWork:
          $ref: "#/components/schemas/DtoValueOfString"
        unitPriceInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        vatCodeId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    CustomerDebitNoteUpdateDto:
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        cashDiscountDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        contact:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        creditTermsId:
          $ref: "#/components/schemas/DtoValueOfString"
        currencyId:
          $ref: "#/components/schemas/DtoValueOfString"
        customerNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        customerRefNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        customerVatZoneId:
          $ref: "#/components/schemas/DtoValueOfString"
        documentDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        documentDueDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        domesticServicesDeductibleDocument:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        dontEmail:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        dontPrint:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        exchangeRate:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        externalReference:
          $ref: "#/components/schemas/DtoValueOfString"
        financialPeriod:
          $ref: "#/components/schemas/financialPeriodInCustomerDebitNoteUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        invoiceAddress:
          $ref: "#/components/schemas/DtoValueOfSalesInvoiceAddressUpdateDto"
        invoiceContact:
          $ref: "#/components/schemas/DtoValueOfSalesInvoiceContactUpdateDto"
        invoiceText:
          $ref: "#/components/schemas/DtoValueOfString"
        lines:
          items:
            $ref: "#/components/schemas/CustomerDebitNoteLinesUpdateDto"
          type: array
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        origInvoiceDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        paymentMethodId:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentReference:
          $ref: "#/components/schemas/DtoValueOfString"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInCustomerDebitNoteUpdateDto"
        referenceNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        rotRutDetails:
          $ref: "#/components/schemas/RotRutUpdateDto"
        salesPersonID:
          $ref: "#/components/schemas/salesPersonIDInCustomerDebitNoteUpdateDto"
        salesperson:
          $ref: "#/components/schemas/salespersonInCustomerDebitNoteUpdateDto"
        taxDetailLines:
          items:
            $ref: "#/components/schemas/TaxDetailUpdateDto"
          type: array
      type: object
    CustomerDefaultPaymentMethodUpdateDto:
      properties:
        isDefault:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        paymentMethodId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    CustomerDescriptionDto:
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
      type: object
    CustomerDirectDebitDto:
      properties:
        bic:
          type: string
        dateOfSignature:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
        iban:
          type: string
        id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        isDefault:
          type: boolean
        lastCollectionDate:
          format: date-time
          type: string
        mandateDescription:
          type: string
        mandateId:
          type: string
        maxAmount:
          format: double
          type: number
        oneTime:
          type: boolean
      type: object
    CustomerDirectDebitUpdateDto:
      properties:
        bic:
          $ref: "#/components/schemas/DtoValueOfString"
        dateOfSignature:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        expirationDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        iban:
          $ref: "#/components/schemas/DtoValueOfString"
        id:
          format: uuid
          type: string
        isDefault:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        lastCollectionDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        mandateDescription:
          $ref: "#/components/schemas/DtoValueOfString"
        mandateId:
          $ref: "#/components/schemas/DtoValueOfString"
        maxAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        oneTime:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
      type: object
    CustomerDocumentAddressDto:
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInCustomerDocumentAddressDto"
        county:
          $ref: "#/components/schemas/countyInCustomerDocumentAddressDto"
        overrideAddress:
          description: Override address &gt; A check box that indicates (if selected) that the invoice address is not the default invoice address of the customer.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
      type: object
    CustomerDocumentContactDto:
      properties:
        attention:
          type: string
        businessName:
          type: string
        contactId:
          format: int32
          type: integer
        email:
          type: string
        overrideContact:
          type: boolean
        phone1:
          type: string
      type: object
    CustomerDocumentDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInCustomerDocumentDto"
        amount:
          description: "The top part &gt; Amount &gt; The amount paid by the document. The value appears for new documents if the Validate document totals on entry check box is selected on the AR101000 window.\r

            If the check box is cleared, then the value appears when the document status is Open."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        balance:
          description: "The top part &gt; Balance &gt; For an open customer ledger document, the balance after any cash discount was taken. \r

            For a document used in the application process, this is the balance after the payments were applied."
          format: double
          type: number
        balanceInCurrency:
          description: Background calculation giving you the Balance in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        branch:
          $ref: "#/components/schemas/branchInCustomerDocumentDto"
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCustomerDocumentDto"
        cashAccount:
          description: Financial details tab &gt; The payment information section &gt; Cash account &gt; The cash account associated with the payment method.
          type: string
        cashDiscount:
          description: The top part &gt; Cash discount &gt; The cash discount amount that has been or will be taken on the document, which the system calculates based on the specified credit terms.
          format: double
          type: number
        cashDiscountInCurrency:
          description: Background calculation giving you the Cash discount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        closedFinancialPeriod:
          description: Format YYYYMM.
          type: string
        createdDateTime:
          description: The Attachments tab &gt; Creation time &gt; The date the attachment was created.
          format: date-time
          type: string
        currencyId:
          description: The top part &gt; Currency &gt; The currency of the document. By default, it is the customer’s default currency,but it can be changed if the Allow Currency Override check box is selected in the AR303000 window.
          type: string
        customer:
          $ref: "#/components/schemas/customerInCustomerDocumentDto"
        customerProject:
          description: The top part &gt; Customer project no. &gt; The customer project no. used in AutoInvoice.
          type: string
        customerRefNumber:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        documentDate:
          description: "The top part &gt; Date* &gt; The date when the customer ledger document was created.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        documentDueDate:
          format: date-time
          type: string
        documentType:
          description: "The top part &gt; Type &gt; The document type. The following types are available: invoice, debit note, credit note, overdue charge, credit write-off"
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        errorInfo:
          type: string
        financialPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
          type: string
        invoiceText:
          description: The top part &gt; Invoice text &gt; Any user-provided description of the customer ledger document.
          type: string
        lastModifiedDateTime:
          description: System generated field for last modification date/time of document.
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInCustomerDocumentDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the document.
          type: string
        origInvoiceDate:
          description: "The top part &gt; Orig invoice date &gt; The date based on which the Due date and Cash discount date is calculated. Only used if setting \"Use Orig Invoice Date\" is active in AR Preferences.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInCustomerDocumentDto"
        postPeriod:
          description: The top part &gt; Post period &gt; The period to which the document should be posted. Format YYYYMM.
          type: string
        project:
          $ref: "#/components/schemas/projectInCustomerDocumentDto"
        referenceNumber:
          description: The Top part &gt; Ref. no. &gt; The reference number of the customer ledger document in the system.
          type: string
        status:
          description: "The top part &gt; Status &gt; The status of the document, which can be one of the following: Hold, Balanced, Voided, Scheduled, Open, Closed, Pending print, Pending email."
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - PendingPrint
            - PendingEmail
            - CreditHold
            - CcHold
            - Reserved
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInCustomerDocumentDto"
        vatTotal:
          description: The top part &gt; VAT total &gt; The VAT amount of the document, as defined on the VAT details tab.
          format: double
          type: number
        vatTotalInCurrency:
          description: Background calculation giving you the VAT total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
      type: object
    CustomerDocumentVatZoneDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    CustomerDto:
      description: This class represents a customer in CustomerController. Used by getting data.
      properties:
        acceptAutoInvoices:
          description: Invoicing settings &gt; Print and email settings section &gt; Send invoices to AutoInvoice &gt; Select this check box if you are using AutoInvoice and want to send invoices directly to this service.
          type: boolean
        accountReference:
          description: General information tab &gt; Main contact section &gt; Account ref. &gt; Your company's account number in the customer's system.
          type: string
        attributes:
          description: Information collected from the system. Not visible on the screen.
          items:
            $ref: "#/components/schemas/AttributeIdValueDto"
          type: array
        corporateId:
          description: Delivery settings tab &gt; Default location settings section &gt; Corporate ID &gt; The customers company ID, associated with the location.
          type: string
        createdDateTime:
          description: Information collected from the system. Not visible on the screen.
          format: date-time
          type: string
        creditDaysPastDue:
          description: General information tab &gt; Credit verification rules section &gt; Credit days past due &gt; The maximum number of days by which the customer payment may exceed the invoice date.
          format: int32
          type: integer
        creditLimit:
          description: The General information tab &gt; Credit verification rules section &gt; Credit limit &gt; The amount, if applicable, that serves as a credit limit for the customer.
          format: double
          type: number
        creditTerms:
          $ref: "#/components/schemas/creditTermsInCustomerDto"
        creditVerification:
          description: "The General information tab &gt; Credit verification rules &gt; Credit verification &gt; The credit rule applied to this customer. The following options are available: Days past due, Credit limit, Limit and days past due, disabled."
          enum:
            - Disabled
            - DaysPastDue
            - CreditLimit
            - LimitAndDaysPastDue
          type: string
        currencyId:
          description: The General information tab &gt; Financial settings section &gt; Currency ID &gt; The currency used in operations with the customer, which you can select from the list of currencies defined in the system.
          type: string
        customerClass:
          $ref: "#/components/schemas/customerClassInCustomerDto"
        defaultPaymentMethodId:
          description: Invoicing settings tab &gt; Default payment method section &gt; The default payment method.
          type: string
        deliveryAddress:
          $ref: "#/components/schemas/deliveryAddressInCustomerDto"
        deliveryContact:
          $ref: "#/components/schemas/deliveryContactInCustomerDto"
        directDebitLines:
          description: Information collected from the system. Not visible on the screen.
          items:
            $ref: "#/components/schemas/CustomerDirectDebitDto"
          type: array
        eInvoiceContract:
          $ref: "#/components/schemas/eInvoiceContractInCustomerDto"
        errorInfo:
          type: string
        glAccounts:
          $ref: "#/components/schemas/glAccountsInCustomerDto"
        gln:
          description: Delivery settings tab &gt; Default location settings section &gt; GLN &gt; The Global Location Number, associated with the location.
          type: string
        internalId:
          format: int32
          type: integer
        invoiceAddress:
          $ref: "#/components/schemas/invoiceAddressInCustomerDto"
        invoiceContact:
          $ref: "#/components/schemas/invoiceContactInCustomerDto"
        invoiceToDefaultLocation:
          description: Delivery settings tab &gt; Default location settings &gt; Invoice to default location &gt; A check box indicating that the default location is to be used.
          type: boolean
        lastModifiedDateTime:
          description: Information collected from the system. Not visible on the screen.
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInCustomerDto"
        mainAddress:
          $ref: "#/components/schemas/mainAddressInCustomerDto"
        mainContact:
          $ref: "#/components/schemas/mainContactInCustomerDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          description: "Mandatory field: The top part &gt; Customer name* &gt; The name of the customer to appear in the system, which may be a trade name or a doing-business-as (DBA) name."
          type: string
        number:
          description: "Mandatory field: The top part &gt; Customer ID* &gt; The ID of the customer account, which is defined by the BIZACCT segmented key or by the CUSTOMER segmented key. When you are creating a new customer, you must specify an ID."
          type: string
        parentRecord:
          $ref: "#/components/schemas/ParentRecordDto"
        paymentMethods:
          description: Payment methods tab.
          items:
            $ref: "#/components/schemas/CustomerPaymentMethodInfoDto"
          type: array
        priceClass:
          $ref: "#/components/schemas/priceClassInCustomerDto"
        printInvoices:
          description: Invoicing settings &gt; Print and email settings section &gt; Print invoices &gt; A check box that, if selected, indicates that invoices can be printed in the Print invoice (AR508000) window.
          type: boolean
        printMultiCurrencyStatements:
          description: Invoicing settings &gt; Print and email settings section &gt; Multi-currency statements &gt; A check box that indicates (if selected) that this customer's statements must be printed in multi-currency format.
          type: boolean
        printStatements:
          description: Invoicing settings &gt; Print and email settings section &gt; Print statements &gt; A check box that, if selected, indicates that statements can be printed in the Print statements (AR503500) window.
          type: boolean
        sendInvoicesByEmail:
          description: Invoicing settings &gt; Print and email settings section &gt; Send invoices by email &gt; A check box that, if selected, indicates that you can send invoices by email by using the Print invoices (AR508000) window.
          type: boolean
        sendStatementsByEmail:
          description: Invoicing settings &gt; Print and email settings section &gt; Send statement by email &gt; A check box that, if selected, indicates that statements can be sent by email to customers of the class in the Print statements  (AR503500) window.
          type: boolean
        statementType:
          description: "Invoicing settings &gt; Print and email settings section &gt; Statement type &gt; The statement type used by default in relations with the customer, which can be one of the following: Open item, Balance brought forward."
          enum:
            - OpenItem
            - BalanceBroughtForward
          type: string
        status:
          description: "Mandatory field: The top part &gt; Status* &gt; The status of the customer account. You can select one of the following options: Active, On hold, Credit hold, Inactive, One time."
          enum:
            - Active
            - OnHold
            - CreditHold
            - Inactive
            - OneTime
          type: string
        vatRegistrationId:
          description: Deliver settings tab &gt; Default location settings section &gt; VAT registration ID &gt; The customer's taxpayer ID associated with the location.
          type: string
        vatZone:
          $ref: "#/components/schemas/vatZoneInCustomerDto"
      type: object
    CustomerGlAccountsDto:
      properties:
        cashDiscountAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        cashDiscountSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
        customerLedgerAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        customerLedgerSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
        discountAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        discountSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
        freightAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        freightSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
        prepaymentAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        prepaymentSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
        salesAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        salesEuAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        salesExportAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        salesNonTaxableAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        salesSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
      type: object
    CustomerGlAccountsUpdateDto:
      properties:
        cashDiscountAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        cashDiscountSubaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        customerLedgerAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        customerLedgerSubaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        discountAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        discountSubaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        freightAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        freightSubaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        prepaymentAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        prepaymentSubaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        salesAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        salesEuAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        salesExportAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        salesNonTaxableAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        salesSubaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
      type: object
    CustomerIdNameDto:
      properties:
        id:
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
      type: object
    CustomerInvoiceDto:
      description: This class represents an invoice in InvoiceController. Used by getting data.
      properties:
        account:
          $ref: "#/components/schemas/accountInCustomerInvoiceDto"
        accountingCostRef:
          type: string
        amount:
          description: "The top part &gt; Amount &gt; The amount paid by the document. The value appears for new documents if the Validate document totals on entry check box is selected on the AR101000 window.\r

            If the check box is cleared, then the value appears when the document status is Open."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        applications:
          items:
            $ref: "#/components/schemas/ArAdjustDto"
          type: array
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        balance:
          description: "The top part &gt; Balance &gt; For an open customer ledger document, the balance after any cash discount was taken. \r

            For a document used in the application process, this is the balance after the payments were applied."
          format: double
          type: number
        balanceInCurrency:
          description: Background calculation giving you the Balance in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCustomerInvoiceDto"
        cashAccount:
          description: Financial details tab &gt; The payment information section &gt; Cash account &gt; The cash account associated with the payment method.
          type: string
        cashDiscount:
          description: The top part &gt; Cash discount &gt; The cash discount amount that has been or will be taken on the document, which the system calculates based on the specified credit terms.
          format: double
          type: number
        cashDiscountDate:
          description: "Mandatory field: The top part &gt; Cash discount date * &gt; The end date of the cash discount period, which the system calculates by using the credit terms."
          format: date-time
          type: string
        cashDiscountInCurrency:
          description: Background calculation giving you the Cash discount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        closedFinancialPeriod:
          description: Format YYYYMM.
          type: string
        contact:
          $ref: "#/components/schemas/contactInCustomerInvoiceDto"
        contractDocRef:
          type: string
        createdDateTime:
          description: The Attachments tab &gt; Creation time &gt; The date the attachment was created.
          format: date-time
          type: string
        creditTerms:
          $ref: "#/components/schemas/creditTermsInCustomerInvoiceDto"
        currencyId:
          description: The top part &gt; Currency &gt; The currency of the document. By default, it is the customer’s default currency,but it can be changed if the Allow Currency Override check box is selected in the AR303000 window.
          type: string
        customer:
          $ref: "#/components/schemas/customerInCustomerInvoiceDto"
        customerProject:
          description: The top part &gt; Customer project no. &gt; The customer project no. used in AutoInvoice.
          type: string
        customerRefNumber:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        customerVatZone:
          $ref: "#/components/schemas/customerVatZoneInCustomerInvoiceDto"
        detailTotal:
          description: The top part &gt; Detail total &gt; The document total, which the system calculates for all line items in the Document details tab.
          format: double
          type: number
        detailTotalInCurrency:
          description: Background calculation giving you the Detail total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        discountTotal:
          description: The top part &gt; Discount total &gt; The document discount total.
          format: double
          type: number
        discountTotalInCurrency:
          description: The top part &gt; Discount total &gt; The document discount total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        documentDate:
          description: "The top part &gt; Date* &gt; The date when the customer ledger document was created.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        documentDueDate:
          description: "Mandatory field: The top part &gt; Due date* &gt; The date when payment for the document is due, in accordance with the credit terms."
          format: date-time
          type: string
        documentType:
          description: "The top part &gt; Type &gt; The document type. The following types are available: invoice, debit note, credit note, overdue charge, credit write-off"
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        dontEmail:
          type: boolean
        dontPrint:
          type: boolean
        dunningLetterDate:
          description: The Financial details tab &gt; The dunning info section &gt; Dunning letter date &gt; The date of the last released dunning letter in which the document was listed.
          format: date-time
          type: string
        dunningLetterLevel:
          description: The Financial details tab &gt; The dunning info section &gt; Dunning level &gt; The dunning level of the document.
          format: int32
          type: integer
        endDate:
          format: date-time
          type: string
        errorInfo:
          type: string
        exchangeRate:
          format: double
          type: number
        externalReference:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        financialPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
          type: string
        hold:
          description: The top part &gt; Hold &gt; A check box that indicates (if selected) that the document is a draft. A document with the On Hold status may be edited and cannot be released.
          type: boolean
        invoiceAddress:
          $ref: "#/components/schemas/invoiceAddressInCustomerInvoiceDto"
        invoiceContact:
          $ref: "#/components/schemas/invoiceContactInCustomerInvoiceDto"
        invoiceLines:
          description: Documents details tab
          items:
            $ref: "#/components/schemas/CustomerInvoiceLineDto"
          type: array
        invoiceText:
          description: The top part &gt; Invoice text &gt; Any user-provided description of the customer ledger document.
          type: string
        isRotRutDeductible:
          description: The top part &gt; Domestic services deductible document &gt; A check box indicating if the document is Rot/rut deductible (applicable for the Swedish markets)
          type: boolean
        lastModifiedDateTime:
          description: System generated field for last modification date/time of document.
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInCustomerInvoiceDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the document.
          type: string
        origInvoiceDate:
          description: "The top part &gt; Orig invoice date &gt; The date based on which the Due date and Cash discount date is calculated. Only used if setting \"Use Orig Invoice Date\" is active in AR Preferences.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        originatorDocRef:
          type: string
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInCustomerInvoiceDto"
        paymentReference:
          description: ///The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          type: string
        postPeriod:
          description: The top part &gt; Post period &gt; The period to which the document should be posted. Format YYYYMM.
          type: string
        project:
          $ref: "#/components/schemas/projectInCustomerInvoiceDto"
        referenceNumber:
          description: The Top part &gt; Ref. no. &gt; The reference number of the customer ledger document in the system.
          type: string
        roundingDiff:
          description: The top part &gt; Rounding diff. &gt; The difference between the original amount and the rounded amount.
          format: double
          type: number
        salesPerson:
          $ref: "#/components/schemas/salesPersonInCustomerInvoiceDto"
        salesPersonDescr:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          type: string
        salesPersonID:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          format: int32
          type: integer
        sendToAutoInvoice:
          description: The Attachment tab &gt; Send the file to AutoInvoice &gt; The selected files will be attached to the invoice.
          type: boolean
        startDate:
          format: date-time
          type: string
        status:
          description: "The top part &gt; Status &gt; The status of the document, which can be one of the following: Hold, Balanced, Voided, Scheduled, Open, Closed, Pending print, Pending email."
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - PendingPrint
            - PendingEmail
            - CreditHold
            - CcHold
            - Reserved
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInCustomerInvoiceDto"
        taxDetails:
          description: VAT details tab
          items:
            $ref: "#/components/schemas/TaxDetailDto"
          type: array
        vatExemptTotal:
          description: The top part &gt; VAT exempt. total &gt; The document total that is exempt from VAT. This total is calculated as the taxable amount for the tax with the Include in VAT Exempt Total check box selected on the Taxes form.This box is available only if the VAT Reporting feature is enabled in your system.
          format: double
          type: number
        vatExemptTotalInCurrency:
          description: Background calculation giving you the VAT exempt. total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subjected to VAT.
          format: double
          type: number
        vatTaxableTotalInCurrency:
          description: Background calculation giving you the VAT taxable total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTotal:
          description: The top part &gt; VAT total &gt; The VAT amount of the document, as defined on the VAT details tab.
          format: double
          type: number
        vatTotalInCurrency:
          description: Background calculation giving you the VAT total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
      type: object
    CustomerInvoiceLineDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInCustomerInvoiceLineDto"
        amount:
          description: "Amount &gt; The amount after the discount has been applied. The value of this read-only box\r

            is calculated automatically by deducting the discount amount from the extended price."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCustomerInvoiceLineDto"
        cost:
          description: "Cost &gt; The total cost of the line in default currency. \r

            The value will always be 0 for unreleased documents."
          format: double
          type: number
        deductableAmount:
          format: double
          type: number
        deferralCode:
          description: "The deferral code assigned to the stock item or non-stock item specified in this\r

            document line.Upon release of the document, the system generates a deferral\r

            schedule (or schedules) based on the settings defined in this deferral code."
          type: string
        deferralSchedule:
          description: Original deferral schedule &gt; A read-only column filled in by the system in the Cash return documents created by the reversing process. It shows the identifier of the deferral schedule associated with the original Cash sale document.
          format: int32
          type: integer
        description:
          description: Transaction descr. &gt; Any brief comment relevant to the transaction.The alphanumeric string may contain up to 30 characters.
          type: string
        discountAmount:
          description: "Discount amount &gt; The amount of the line-level discount that has been applied manually or\r

            automatically to this line.The system selects the Manual Discount check box\r

            and calculates the line amount after you have entered the discount amount\r

            manually and save your changes or added a new line."
          format: double
          type: number
        discountAmountInCurrency:
          description: Background calculation giving you the Discount amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        discountCode:
          description: The code of the line discount that has been applied to this line automatically or manually.
          type: string
        discountPercent:
          description: "Discount percent &gt; The percent of the line-level discount that has been applied manually or\r

            automatically.The system selects the Manual Discount check box and\r

            calculates the discount amount after you have entered the percent manually and\r

            saved your changes or added a new line."
          format: double
          type: number
        endDate:
          format: date-time
          type: string
        externalLink:
          type: string
        inventoryNumber:
          description: Item ID &gt; The item ID of the line item, if applicable. Only a non-stock item can be selected.
          type: string
        isRotRutDeductible:
          type: boolean
        itemType:
          enum:
            - Service
            - MaterialCost
            - OtherCost
          type: string
        lineNumber:
          description: Line no. &gt; A counter of lines in the overview of cash sales document overview.
          format: int32
          type: integer
        lineType:
          description: "Transaction line type.\r

            Possible Values:\r

            -&gt; Inventory = \"GI\";\r

            -&gt; NonInventory = \"GN\";\r

            -&gt; MiscCharge = \"MI\";\r

            -&gt; Freight = \"FR\";\r

            -&gt; Discount = \"DS\";\r

            -&gt; Reallocation = \"RA\";"
          type: string
        manualAmount:
          description: Manual amount &gt; a check box indicating that the amount has been entered manually.
          format: double
          type: number
        manualAmountInCurrency:
          description: Background calculation giving you the Manual amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        manualDiscount:
          description: "Manual discount &gt; A check box that indicates (if selected) that the discount has been applied\r

            manually.If you clear the check box, the system clears entered discount percent,\r

            or discount amount, or selected discount code."
          type: boolean
        note:
          description: Table &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected to the order.
          type: string
        projectTask:
          $ref: "#/components/schemas/ProjectTaskIdDescriptionDto"
        quantity:
          description: Quantity &gt; The quantity of items (goods or services) of a particular type sold to the customer.
          format: double
          type: number
        salesperson:
          description: The field is deprecated for customer document endpoints, please use Seller instead
          type: string
        seller:
          $ref: "#/components/schemas/sellerInCustomerInvoiceLineDto"
        soOrderNbr:
          type: string
        soOrderType:
          type: string
        soShipmentNbr:
          type: string
        startDate:
          format: date-time
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInCustomerInvoiceLineDto"
        termEndDate:
          description: " Term end date &gt; The date when the process of the deferred revenue recognition should finish for the selected item; this date can be specified manually if the deferral code assigned to the item is based on the Flexible by periods, prorate by days or Flexible by days in period recognition method.\r

            This column only appears if the Deferred revenue management functionality is enabled in the(CS100000) window."
          format: date-time
          type: string
        termStartDate:
          description: " Term start date &gt; The date when the process of deferred revenue recognition should start for the selected item; this date can be specified manually if the deferral code assigned to the item is based on the Flexible by periods, prorate by days or Flexible by days in period recognition method.\r

            This column only appears if the Deferred revenue management functionality is enabled in the(CS100000) window."
          format: date-time
          type: string
        typeOfWork:
          $ref: "#/components/schemas/WorkTypeDto"
        unitPrice:
          description: "Unit price &gt; The unit price set for the item or service. If you want to update the unit price\r

            automatically to the current value(that is, the applicable sales or default price),\r

            you can use the Recalculate Prices and Discounts action.If you have modified\r

            the unit price and saved the document, the value will not be updated by the\r

            system if you change the document date."
          format: double
          type: number
        unitPriceInCurrency:
          description: Background calculation giving you the Unit price in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        uom:
          description: UoM &gt; The unit of measure (UoM) for the item.
          type: string
        vatCode:
          $ref: "#/components/schemas/vatCodeInCustomerInvoiceLineDto"
      type: object
    CustomerInvoiceLinesUpdateDto:
      properties:
        accountNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralCode:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralSchedule:
          $ref: "#/components/schemas/DtoValueOfInt32"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        discountAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        discountCode:
          $ref: "#/components/schemas/DtoValueOfString"
        discountPercent:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        domesticServicesDeductible:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        endDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        itemType:
          $ref: "#/components/schemas/itemTypeInCustomerInvoiceLinesUpdateDto"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        manualAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        manualDiscount:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        salesperson:
          $ref: "#/components/schemas/DtoValueOfString"
        startDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        subaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        taskId:
          $ref: "#/components/schemas/DtoValueOfString"
        termEndDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        termStartDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        typeOfWork:
          $ref: "#/components/schemas/typeOfWorkInCustomerInvoiceLinesUpdateDto"
        unitPriceInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        vatCodeId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    CustomerInvoiceUpdateDto:
      properties:
        accountingCostRef:
          $ref: "#/components/schemas/DtoValueOfString"
        billingAddress:
          $ref: "#/components/schemas/DtoValueOfSalesInvoiceAddressUpdateDto"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        cashDiscountDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        contact:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        contractDocRef:
          $ref: "#/components/schemas/DtoValueOfString"
        creditTermsId:
          $ref: "#/components/schemas/DtoValueOfString"
        currencyId:
          $ref: "#/components/schemas/DtoValueOfString"
        customerNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        customerProject:
          $ref: "#/components/schemas/DtoValueOfString"
        customerRefNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        customerVatZoneId:
          $ref: "#/components/schemas/DtoValueOfString"
        documentDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        documentDueDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        domesticServicesDeductibleDocument:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        dontEmail:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        dontPrint:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        endDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        exchangeRate:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        externalReference:
          $ref: "#/components/schemas/DtoValueOfString"
        financialPeriod:
          $ref: "#/components/schemas/financialPeriodInCustomerInvoiceUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        invoiceContact:
          $ref: "#/components/schemas/DtoValueOfSalesInvoiceContactUpdateDto"
        invoiceLines:
          items:
            $ref: "#/components/schemas/CustomerInvoiceLinesUpdateDto"
          type: array
        invoiceText:
          $ref: "#/components/schemas/DtoValueOfString"
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        origInvoiceDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        originatorDocRef:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideNumberSeries:
          $ref: "#/components/schemas/overrideNumberSeriesInCustomerInvoiceUpdateDto"
        paymentMethodId:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentReference:
          $ref: "#/components/schemas/DtoValueOfString"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInCustomerInvoiceUpdateDto"
        project:
          $ref: "#/components/schemas/DtoValueOfString"
        referenceNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        rotRutDetails:
          $ref: "#/components/schemas/RotRutUpdateDto"
        salesPersonID:
          $ref: "#/components/schemas/salesPersonIDInCustomerInvoiceUpdateDto"
        salesperson:
          $ref: "#/components/schemas/salespersonInCustomerInvoiceUpdateDto"
        sendToAutoInvoice:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        startDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        taxDetailLines:
          items:
            $ref: "#/components/schemas/TaxDetailUpdateDto"
          type: array
      type: object
    CustomerNumberDto:
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
      type: object
    CustomerOverdueChargeDto:
      description: This class represents a invoice in CustomerOverdueChargeController. Used by getting data.
      properties:
        account:
          $ref: "#/components/schemas/accountInCustomerOverdueChargeDto"
        amount:
          description: "The top part &gt; Amount &gt; The amount paid by the document. The value appears for new documents if the Validate document totals on entry check box is selected on the AR101000 window.\r

            If the check box is cleared, then the value appears when the document status is Open."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        applications:
          items:
            $ref: "#/components/schemas/ArAdjustDto"
          type: array
        attachments:
          description: Attachments tab
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        balance:
          description: "The top part &gt; Balance &gt; For an open customer ledger document, the balance after any cash discount was taken. \r

            For a document used in the application process, this is the balance after the payments were applied."
          format: double
          type: number
        balanceInCurrency:
          description: Background calculation giving you the Balance in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCustomerOverdueChargeDto"
        cashAccount:
          description: Financial details tab &gt; The payment information section &gt; Cash account &gt; The cash account associated with the payment method.
          type: string
        cashDiscount:
          description: The top part &gt; Cash discount &gt; The cash discount amount that has been or will be taken on the document, which the system calculates based on the specified credit terms.
          format: double
          type: number
        cashDiscountDate:
          description: "Madatory field: The top part &gt; Cash discount date* &gt; The end date of the cash discount period, which the system calculates by using the credit terms."
          format: date-time
          type: string
        cashDiscountInCurrency:
          description: Background calculation giving you the Cash discount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        closedFinancialPeriod:
          description: Format YYYYMM.
          type: string
        contact:
          $ref: "#/components/schemas/contactInCustomerOverdueChargeDto"
        createdDateTime:
          description: The Attachments tab &gt; Creation time &gt; The date the attachment was created.
          format: date-time
          type: string
        creditTerms:
          $ref: "#/components/schemas/creditTermsInCustomerOverdueChargeDto"
        currencyId:
          description: The top part &gt; Currency &gt; The currency of the document. By default, it is the customer’s default currency,but it can be changed if the Allow Currency Override check box is selected in the AR303000 window.
          type: string
        customer:
          $ref: "#/components/schemas/customerInCustomerOverdueChargeDto"
        customerProject:
          description: The top part &gt; Customer project no. &gt; The customer project no. used in AutoInvoice.
          type: string
        customerRefNumber:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        customerVatZone:
          $ref: "#/components/schemas/customerVatZoneInCustomerOverdueChargeDto"
        detailTotal:
          description: The top part &gt; Detail total &gt; The document total, which the system calculates for all line items in the Document details tab.
          format: double
          type: number
        detailTotalInCurrency:
          description: Background calculation giving you the Detail total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        discountTotal:
          description: The top part &gt; Discount total &gt; The document discount total.
          format: double
          type: number
        discountTotalInCurrency:
          description: The top part &gt; Discount total &gt; The document discount total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        documentDate:
          description: "The top part &gt; Date* &gt; The date when the customer ledger document was created.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        documentDueDate:
          description: "Mandatory field: The Top part &gt; Due date* &gt; The date when payment for the document is due, in accordance with the credit terms."
          format: date-time
          type: string
        documentType:
          description: "The top part &gt; Type &gt; The document type. The following types are available: invoice, debit note, credit note, overdue charge, credit write-off"
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        dontEmail:
          type: boolean
        dontPrint:
          type: boolean
        dunningLetterDate:
          description: Financial details tab &gt; Dunning information section &gt; Dunning letter date &gt; The date of the last released dunning letter in which the document was listed.
          format: date-time
          type: string
        dunningLetterLevel:
          description: Financial details tab &gt; Dunning information section &gt; Dunning level &gt; The dunning level of the document.
          format: int32
          type: integer
        errorInfo:
          type: string
        exchangeRate:
          description: The top part &gt; Currency &gt; The currency of the document.
          format: double
          type: number
        externalReference:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        financialPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
          type: string
        hold:
          description: The top part &gt; Hold &gt; A check box that indicates (if selected) that the document is a draft. A document with the On Hold status may be edited and cannot be released.
          type: boolean
        invoiceAddress:
          $ref: "#/components/schemas/invoiceAddressInCustomerOverdueChargeDto"
        invoiceContact:
          $ref: "#/components/schemas/invoiceContactInCustomerOverdueChargeDto"
        invoiceText:
          description: The top part &gt; Invoice text &gt; Any user-provided description of the customer ledger document.
          type: string
        lastModifiedDateTime:
          description: System generated field for last modification date/time of document.
          format: date-time
          type: string
        lines:
          description: Document details tab
          items:
            $ref: "#/components/schemas/CustomerOverdueChargeLineDto"
          type: array
        location:
          $ref: "#/components/schemas/locationInCustomerOverdueChargeDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the document.
          type: string
        origInvoiceDate:
          description: "The top part &gt; Orig invoice date &gt; The date based on which the Due date and Cash discount date is calculated. Only used if setting \"Use Orig Invoice Date\" is active in AR Preferences.\r

            By default, for a new document, it is the current business date, but you can change the date."
          format: date-time
          type: string
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInCustomerOverdueChargeDto"
        paymentReference:
          description: ///The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          type: string
        postPeriod:
          description: The top part &gt; Post period &gt; The period to which the document should be posted. Format YYYYMM.
          type: string
        project:
          $ref: "#/components/schemas/projectInCustomerOverdueChargeDto"
        referenceNumber:
          description: The Top part &gt; Ref. no. &gt; The reference number of the customer ledger document in the system.
          type: string
        roundingDiff:
          description: The top part &gt; Rounding diff. &gt; The difference between the original amount and the rounded amount.
          format: double
          type: number
        salesPerson:
          $ref: "#/components/schemas/salesPersonInCustomerOverdueChargeDto"
        salesPersonDescr:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          type: string
        salesPersonID:
          description: The field is deprecated for customer document endpoints, please use SalesPerson instead
          format: int32
          type: integer
        status:
          description: "The top part &gt; Status &gt; The status of the document, which can be one of the following: Hold, Balanced, Voided, Scheduled, Open, Closed, Pending print, Pending email."
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - PendingPrint
            - PendingEmail
            - CreditHold
            - CcHold
            - Reserved
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInCustomerOverdueChargeDto"
        taxDetails:
          description: VAT details tab
          items:
            $ref: "#/components/schemas/TaxDetailDto"
          type: array
        vatExemptTotal:
          description: The top part &gt; VAT exempt. total &gt; The document total that is exempt from VAT. This total is calculated as the taxable amount for the tax with the Include in VAT Exempt Total check box selected on the Taxes form.This box is available only if the VAT Reporting feature is enabled in your system.
          format: double
          type: number
        vatExemptTotalInCurrency:
          description: Background calculation giving you the VAT exempt. total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subjected to VAT.
          format: double
          type: number
        vatTaxableTotalInCurrency:
          description: Background calculation giving you the VAT taxable total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        vatTotal:
          description: The top part &gt; VAT total &gt; The VAT amount of the document, as defined on the VAT details tab.
          format: double
          type: number
        vatTotalInCurrency:
          description: Background calculation giving you the VAT total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
      type: object
    CustomerOverdueChargeLineDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInCustomerOverdueChargeLineDto"
        amount:
          description: "Amount &gt; The amount after the discount has been applied. The value of this read-only box\r

            is calculated automatically by deducting the discount amount from the extended price."
          format: double
          type: number
        amountInCurrency:
          description: Background calculation giving you the Amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/branchNumberInCustomerOverdueChargeLineDto"
        cost:
          description: "Cost &gt; The total cost of the line in default currency. \r

            The value will always be 0 for unreleased documents."
          format: double
          type: number
        deferralCode:
          description: "The deferral code assigned to the stock item or non-stock item specified in this\r

            document line.Upon release of the document, the system generates a deferral\r

            schedule (or schedules) based on the settings defined in this deferral code."
          type: string
        deferralSchedule:
          description: Original deferral schedule &gt; A read-only column filled in by the system in the Cash return documents created by the reversing process. It shows the identifier of the deferral schedule associated with the original Cash sale document.
          format: int32
          type: integer
        description:
          description: Transaction descr. &gt; Any brief comment relevant to the transaction.The alphanumeric string may contain up to 30 characters.
          type: string
        discountAmount:
          description: "Discount amount &gt; The amount of the line-level discount that has been applied manually or\r

            automatically to this line.The system selects the Manual Discount check box\r

            and calculates the line amount after you have entered the discount amount\r

            manually and save your changes or added a new line."
          format: double
          type: number
        discountAmountInCurrency:
          description: Background calculation giving you the Discount amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        discountCode:
          description: The code of the line discount that has been applied to this line automatically or manually.
          type: string
        discountPercent:
          description: "Discount percent &gt; The percent of the line-level discount that has been applied manually or\r

            automatically.The system selects the Manual Discount check box and\r

            calculates the discount amount after you have entered the percent manually and\r

            saved your changes or added a new line."
          format: double
          type: number
        externalLink:
          type: string
        inventoryNumber:
          description: Item ID &gt; The item ID of the line item, if applicable. Only a non-stock item can be selected.
          type: string
        lineNumber:
          description: Line no. &gt; A counter of lines in the overview of cash sales document overview.
          format: int32
          type: integer
        manualAmount:
          description: Manual amount &gt; a check box indicating that the amount has been entered manually.
          format: double
          type: number
        manualAmountInCurrency:
          description: Background calculation giving you the Manual amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        manualDiscount:
          description: "Manual discount &gt; A check box that indicates (if selected) that the discount has been applied\r

            manually.If you clear the check box, the system clears entered discount percent,\r

            or discount amount, or selected discount code."
          type: boolean
        note:
          description: Table &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected to the order.
          type: string
        quantity:
          description: Quantity &gt; The quantity of items (goods or services) of a particular type sold to the customer.
          format: double
          type: number
        salesperson:
          description: The field is deprecated for customer document endpoints, please use Seller instead
          type: string
        seller:
          $ref: "#/components/schemas/sellerInCustomerOverdueChargeLineDto"
        subaccount:
          $ref: "#/components/schemas/subaccountInCustomerOverdueChargeLineDto"
        unitPrice:
          description: "Unit price &gt; The unit price set for the item or service. If you want to update the unit price\r

            automatically to the current value(that is, the applicable sales or default price),\r

            you can use the Recalculate Prices and Discounts action.If you have modified\r

            the unit price and saved the document, the value will not be updated by the\r

            system if you change the document date."
          format: double
          type: number
        unitPriceInCurrency:
          description: Background calculation giving you the Unit price in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        uom:
          description: UoM &gt; The unit of measure (UoM) for the item.
          type: string
        vatCode:
          $ref: "#/components/schemas/vatCodeInCustomerOverdueChargeLineDto"
      type: object
    CustomerOverdueChargeLineUpdateDto:
      properties:
        accountNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralCode:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralSchedule:
          $ref: "#/components/schemas/DtoValueOfInt32"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        discountAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        discountCode:
          $ref: "#/components/schemas/DtoValueOfString"
        discountPercent:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        domesticServicesDeductible:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        itemType:
          $ref: "#/components/schemas/DtoValueOfNullableOfRutRotItemTypes"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        manualAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        manualDiscount:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        salesperson:
          $ref: "#/components/schemas/DtoValueOfString"
        subaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        termEndDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        termStartDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        typeOfWork:
          $ref: "#/components/schemas/DtoValueOfString"
        unitPriceInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        vatCodeId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    CustomerOverdueChargeUpdateDto:
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        cashDiscountDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        contact:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        creditTermsId:
          $ref: "#/components/schemas/DtoValueOfString"
        currencyId:
          $ref: "#/components/schemas/DtoValueOfString"
        customerNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        customerRefNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        documentDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        documentDueDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        domesticServicesDeductibleDocument:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        dontEmail:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        dontPrint:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        exchangeRate:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        externalReference:
          $ref: "#/components/schemas/DtoValueOfString"
        financialPeriod:
          $ref: "#/components/schemas/financialPeriodInCustomerOverdueChargeUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        invoiceText:
          $ref: "#/components/schemas/DtoValueOfString"
        lines:
          items:
            $ref: "#/components/schemas/CustomerOverdueChargeLineUpdateDto"
          type: array
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        origInvoiceDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        paymentMethodId:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentReference:
          $ref: "#/components/schemas/DtoValueOfString"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInCustomerOverdueChargeUpdateDto"
        referenceNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        salesPersonID:
          $ref: "#/components/schemas/salesPersonIDInCustomerOverdueChargeUpdateDto"
        salesperson:
          $ref: "#/components/schemas/salespersonInCustomerOverdueChargeUpdateDto"
      type: object
    CustomerPaymentMethodCreateDto:
      properties:
        active:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        cashAccountId:
          $ref: "#/components/schemas/DtoValueOfString"
        customerId:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentMethodDetails:
          items:
            $ref: "#/components/schemas/CustomerPaymentMethodDetailUpdateDto"
          type: array
        paymentMethodId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    CustomerPaymentMethodDetailDto:
      properties:
        description:
          description: Payment method details tab &gt; Description &gt; A description of the selected payment method.
          type: string
        detailId:
          type: string
        value:
          description: Payment method details tab &gt; Value &gt; The value you enter. This must match the input validation mask set for the column.
          type: string
      type: object
    CustomerPaymentMethodDetailUpdateDto:
      properties:
        detailId:
          $ref: "#/components/schemas/DtoValueOfString"
        value:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    CustomerPaymentMethodDto:
      properties:
        active:
          description: The top part &gt; Active &gt; A check box that indicates (if selected) that the selected customer payment method is active (that is, available for recording payments).
          type: boolean
        cardOrAccountNo:
          description: The top part &gt; Card/account no. &gt; The identifier for the customer's payment method.
          type: string
        cashAccount:
          $ref: "#/components/schemas/cashAccountInCustomerPaymentMethodDto"
        customer:
          $ref: "#/components/schemas/customerInCustomerPaymentMethodDto"
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInCustomerPaymentMethodDto"
        paymentMethodDetails:
          description: Payment method details tab &gt; The specific elements on this tab depend on the selected payment method, which is defined in the window.
          items:
            $ref: "#/components/schemas/CustomerPaymentMethodDetailDto"
          type: array
      type: object
    CustomerPaymentMethodInfoDto:
      properties:
        isDefault:
          type: boolean
        paymentMethodId:
          type: string
      type: object
    CustomerPaymentMethodQueryParameters:
      properties:
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
      type: object
    CustomerPaymentMethodUpdateDto:
      properties:
        active:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        cashAccountId:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentMethodDetails:
          items:
            $ref: "#/components/schemas/CustomerPaymentMethodDetailUpdateDto"
          type: array
      type: object
    CustomerPaymentMethodsDto:
      properties:
        customerId:
          type: string
        paymentMethods:
          items:
            $ref: "#/components/schemas/CustomerPaymentMethodDto"
          type: array
      type: object
    CustomerQueryParameters:
      properties:
        attributes:
          description: " Attributes (additional information) connected to the entity.\r

            \ Examples:\r

            {{base}}/customer?attributes={\"AttributeID\":\"ValueID\",\"AttributeID\":\"ValueID\"}\r

            {{base}}/customer?attributes={\"AttributeID\":\"ValueID1,ValueID2\"}"
          type: string
        corporateId:
          description: Equals Corporate ID from Delivery settings tab.
          type: string
        createdDateTime:
          type: string
        createdDateTimeCondition:
          type: string
        email:
          description: Equals Email for customer.
          type: string
        expandAccountInformation:
          type: boolean
        expandDirectDebit:
          description: Expand direct debit info
          type: boolean
        expandPaymentMethods:
          type: boolean
        greaterThanValue:
          description: This field does not work and has been deprecated. It will be removed in future versions.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        name:
          description: Equals Customer name.
          type: string
        numberToRead:
          description: "[This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.]\r

            Tells the service to return only {numberToRead} number of records."
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        phone:
          description: Equals Phone 1 for customer.
          type: string
        skipRecords:
          description: "[This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.]\r

            Tells the service to return only records after the first {skipRecords} number of records."
          format: int32
          type: integer
        status:
          description: Drop down and select Status.
          enum:
            - Active
            - OnHold
            - CreditHold
            - Inactive
            - OneTime
          type: string
        vatRegistrationId:
          description: Equals VAT registration ID from Delivery settings tab.
          type: string
      type: object
    CustomerSalesPriceDto:
      description: This class represents a CustomerSalesPrice in CustomerSalesPriceController.
      properties:
        breakQty:
          description: The Sales price table &gt; Break quantity &gt; The quantity to define a lower bound for a quantity tier with the specific price.
          format: double
          type: number
        currency:
          description: "Mandatory field: The Sales price table &gt; Currency* &gt; The currency in which this price is specified."
          type: string
        description:
          description: The Sales price table &gt; Description &gt; The description of the stock item.
          type: string
        effectiveDate:
          description: The Sales price table &gt; Effective date &gt; The date when the price became effective.
          format: date-time
          type: string
        errorInfo:
          type: string
        expirationDate:
          description: The Sales price table &gt; Ecpiration date &gt; The date when the price expires.
          format: date-time
          type: string
        inventoryId:
          description: The Sales price table or the top part &gt; Warehouse &gt; The warehouse in which the price applies.
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        price:
          description: The Sales Price table &gt; Price &gt; The price for the item.
          format: double
          type: number
        priceCode:
          description: The Sales price table or the top part &gt; Price code &gt; The customer or a customer price class for which you want to create or edit a price list.
          type: string
        priceType:
          description: "The Sales price table or the top part &gt; Price type &gt; The type of prices you want to view: All prices, Base, Customer, Customer price class."
          enum:
            - All
            - Base
            - Customer
            - CustomerPriceClass
          type: string
        promotion:
          description: The Sales price table &gt; Promotion &gt; A check box that indicates (if selected) that the price for this item is promotional.
          type: boolean
        recordId:
          description: "Mandatory field: The Sales price table &gt; Item ID* &gt; The ID of the stock or non-stock stock item for which price information is listed."
          format: int32
          type: integer
        uoM:
          description: "Mandatory field: The Sales price table &gt; UoM* &gt; The unit of measure (UoM) used for the item."
          type: string
        vat:
          description: The Sales price table &gt; VAT &gt; The VAT amount that is included in the sales price.
          type: string
      type: object
    CustomerSalesPriceQueryParameters:
      properties:
        effectiveAsOf:
          format: date-time
          type: string
        greaterThanValue:
          type: string
        inventoryId:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        priceCode:
          type: string
        priceType:
          enum:
            - All
            - Base
            - Customer
            - CustomerPriceClass
          type: string
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
      type: object
    CustomerUpdateDto:
      properties:
        acceptAutoInvoices:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        accountReference:
          $ref: "#/components/schemas/DtoValueOfString"
        attributeLines:
          items:
            $ref: "#/components/schemas/AttributeLineUpdateDto"
          type: array
        corporateId:
          $ref: "#/components/schemas/DtoValueOfString"
        creditDaysPastDue:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt16"
        creditLimit:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        creditTermsId:
          $ref: "#/components/schemas/DtoValueOfString"
        creditVerification:
          $ref: "#/components/schemas/DtoValueOfCreditRule"
        currencyId:
          $ref: "#/components/schemas/DtoValueOfString"
        customerClassId:
          $ref: "#/components/schemas/DtoValueOfString"
        defaultPaymentMethod:
          $ref: "#/components/schemas/DtoValueOfCustomerDefaultPaymentMethodUpdateDto"
        deliveryAddress:
          $ref: "#/components/schemas/DtoValueOfAddressUpdateDto"
        deliveryContact:
          $ref: "#/components/schemas/DtoValueOfContactInfoUpdateDto"
        directDebitLines:
          description: Update direct debit information for a customer(only for Netherlands)
          items:
            $ref: "#/components/schemas/CustomerDirectDebitUpdateDto"
          type: array
        eInvoiceContract:
          $ref: "#/components/schemas/DtoValueOfEInvoiceContractUpdateDto"
        glAccounts:
          $ref: "#/components/schemas/DtoValueOfCustomerGlAccountsUpdateDto"
        gln:
          $ref: "#/components/schemas/DtoValueOfString"
        invoiceAddress:
          $ref: "#/components/schemas/DtoValueOfAddressUpdateDto"
        invoiceContact:
          $ref: "#/components/schemas/DtoValueOfContactInfoUpdateDto"
        invoiceToDefaultLocation:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        mainAddress:
          $ref: "#/components/schemas/DtoValueOfAddressUpdateDto"
        mainContact:
          $ref: "#/components/schemas/DtoValueOfContactInfoUpdateDto"
        name:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        number:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        overrideWithClassValues:
          type: boolean
        parentRecordNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        priceClassId:
          $ref: "#/components/schemas/DtoValueOfString"
        printInvoices:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        printMultiCurrencyStatements:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        printStatements:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        sendInvoicesByEmail:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        sendStatementsByEmail:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        statementType:
          $ref: "#/components/schemas/DtoValueOfStatementTypes"
        status:
          $ref: "#/components/schemas/DtoValueOfCustomerStatus"
        vatRegistrationId:
          $ref: "#/components/schemas/DtoValueOfString"
        vatZoneId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    DefaultIssueFromDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    DefaultReceiptToDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    DefaultWarehouseDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    DeferralCodeDto:
      properties:
        codeType:
          description: Code type &gt; The type of the deferral code.
          enum:
            - Income
            - Expense
          type: string
        deferralAccount:
          $ref: "#/components/schemas/deferralAccountInDeferralCodeDto"
        deferralCode:
          description: "Mandatory field: Deferral code* &gt; \tThe unique code for the deferral type."
          type: string
        deferralSub:
          $ref: "#/components/schemas/deferralSubInDeferralCodeDto"
        deferredRevenueFromItem:
          description: Deferred revenue from item &gt; When this check box is selected, the deferred revenue of the code will be retrieved from the connected item.
          type: boolean
        description:
          description: Description &gt; The description of the deferral code.
          type: string
        errorInfo:
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        recognitionMethod:
          description: Recognition method &gt; The method used to distribute the document amount over the periods.
          enum:
            - EvenPeriods
            - ProrateDays
            - ExactDays
            - FlexibileProrateDays
            - FlexibileExactDays
            - CashReceipt
          type: string
      type: object
    DeferralCodeQueryParameters:
      properties:
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
      type: object
    DepartmentDto:
      properties:
        departmentId:
          description: "Mandatory field : The table &gt; Department ID* &gt; The unique identifier for the department."
          type: string
        description:
          description: The table &gt; Description &gt; A detailed description of the department.
          type: string
        expenseAccount:
          $ref: "#/components/schemas/expenseAccountInDepartmentDto"
        expenseSubaccount:
          $ref: "#/components/schemas/expenseSubaccountInDepartmentDto"
        lastModifiedDateTime:
          description: A system generated date/time that indicates the last change for the department.
          format: date-time
          type: string
        publicId:
          description: Identifies the Department by its publicId
          format: uuid
          type: string
      type: object
    DepartmentIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    DepartmentQueryParameters:
      properties:
        greaterThanValue:
          description: Greater-than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          type: string
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
      type: object
    DepartmentUpdateBaseDto:
      properties:
        departmentId:
          type: string
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseSubaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
      type: object
    DetailsDto:
      properties:
        acquisitionCost:
          description: The acquisition cost of this fixed asset
          format: double
          type: number
        billNumber:
          description: The bill number of the fixed asset invoice
          type: string
        depreciateFromDate:
          description: The date this asset is placed in service
          format: date-time
          type: string
        disposalDate:
          description: The date of the disposal of this fixed asset
          format: date-time
          type: string
        disposalMethod:
          $ref: "#/components/schemas/disposalMethodInDetailsDto"
        disposalMethodID:
          description: The disposal method of this fixed asset
          format: int32
          type: integer
        disposalPeriodID:
          description: The period of the disposal of this fixed asset
          type: string
        leaseAndRentInfo:
          $ref: "#/components/schemas/leaseAndRentInfoInDetailsDto"
        propertyType:
          description: Type can be
          enum:
            - Property
            - GrantProperty
            - Leased
            - LeasedtoOthers
            - Rented
            - RentedtoOthers
            - Credit
          type: string
        receiptDate:
          description: The date of the receipt
          format: date-time
          type: string
        saleAmount:
          description: The disposal amount of this fixed asset
          format: double
          type: number
        salvageAmount:
          description: The salvage amount of this fixed asset
          format: double
          type: number
        serialNumber:
          description: The serial number of this fixed asset
          type: string
        status:
          description: Status can be
          enum:
            - Active
            - Disposed
            - FullyDepreciated
            - Hold
            - Reversed
            - Suspended
          type: string
      type: object
    DimensionQueryParameters:
      properties:
        expandSegmentsValues:
          description: Flag can be used to return data without the segment values.
          type: boolean
        greaterThanValue:
          description: Greater-than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          type: string
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.        ///
          format: int32
          type: integer
      type: object
    DiscountBranchDto:
      properties:
        branch:
          type: string
      type: object
    DiscountBreakpointDto:
      properties:
        active:
          description: The top part &gt; Active &gt; A check box that indicates (if selected) that the series is active.
          type: boolean
        amountTo:
          format: double
          type: number
        breakAmount:
          description: Discount breakpoints tab &gt; Break amount &gt; The line amount (break point) that starts the new range for the currently effective series.
          format: double
          type: number
        breakQuantity:
          description: Discount breakpoints tab &gt; Break quantity &gt; The quantity of items (break quantity) that starts the new range for a discount level for the currently effective series. Any break quantity should be specified in the base units.
          format: double
          type: number
        discountAmount:
          description: Discount breakpoints tab &gt; Discount amount &gt; The discount amount to be used for the quantities that exceed this break quantity if the Amount option is selected as Discount by.
          format: double
          type: number
        discountPercent:
          description: Discount breakpoints tab &gt; Discount percent &gt; The discount percent to be currently used for the quantities that exceed this break quantity if the Percent option is selected as Discount by.
          format: double
          type: number
        effectiveDate:
          format: date-time
          type: string
        freeItemQty:
          description: Discount breakpoints tab &gt; Free item qty. &gt; The quantity of the free item to be added as the discount to orders for this discount series.
          format: double
          type: number
        lastAmountTo:
          format: double
          type: number
        lastBreakAmount:
          description: Discount breakpoints tab &gt; Last break amount &gt; The amount (break point) that started the new range for the previously effective series (the one that was used before the effective date).
          format: double
          type: number
        lastBreakQuantity:
          description: Discount breakpoints tab &gt; Last break quantity &gt; The quantity of item (break point) that started the range for the discount series used before the effective date.
          format: double
          type: number
        lastDiscount:
          description: Discount breakpoints tab &gt; Last discount amount &gt; The amount used as the discount for the discount series that was in effect before the effective date.
          format: double
          type: number
        lastDiscountAmount:
          description: Discount breakpoints tab &gt; Last discount amount &gt; The amount used as the discount for the discount series that was in effect before the effective date.
          format: double
          type: number
        lastDiscountPercent:
          description: Discount breakpoints tab &gt; Last discount percent &gt; The percentage used for the break point in the previously effective series.
          format: double
          type: number
        lastFreeItemQty:
          description: Discount breakpoints tab &gt; Last free item qty. &gt; The quantity of the free item that was used as the discount for the previously effective series.
          format: double
          type: number
        lastQuantityTo:
          format: double
          type: number
        lineNbr:
          format: int32
          type: integer
        pendingBreakAmount:
          description: Discount breakpoints tab &gt; Pending break amount &gt; The amount (break point) that starts the new range for the pending series (one that is not yet in effect).
          format: double
          type: number
        pendingBreakQuantity:
          description: Discount breakpoints tab &gt; Pending break quantity &gt; The quantity of items (break point) that starts the new range for the pending (not yet effective) series.
          format: double
          type: number
        pendingDate:
          format: date-time
          type: string
        pendingDiscountAmount:
          description: Discount breakpoints tab &gt; Pending discount amount &gt; The amount to be used as the discount for the pending series if the Amount option is selected as Discount by.
          format: double
          type: number
        pendingDiscountPercent:
          description: Discount breakpoints tab &gt; Pending discount percent &gt; The discount percent to be used for the break point in the pending series.
          format: double
          type: number
        pendingFreeItemQty:
          description: Discount breakpoints tab &gt; Pending free item qty. &gt; The quantity of the free item to be added as the discount to orders for the pending discount series.
          format: double
          type: number
        quantityTo:
          format: double
          type: number
      type: object
    DiscountBreakpointUpdateDto:
      properties:
        breakAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        discountAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        discountPercent:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfInt32"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        pendingBreakAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        pendingBreakQuantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        pendingDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        pendingDiscountAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        pendingDiscountPercent:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
      type: object
    DiscountCodeDto:
      properties:
        applicableTo:
          description: "Mandatory field: Discount codes table &gt; Applicable to &gt; The entity to which the discount may be applied.\r

            Applicable To values: \r

            CU - Customer,\r

            CI - Customer and Item,\r

            CP - Customer and Item Price Class,\r

            CE - Customer Price Class,\r

            PI - Customer Price Class and Item,\r

            PP - Customer Price Class and Item Price Class,\r

            CB - Customer and Branch,\r

            PB - Customer Price Class and Branch,\r

            WH - Warehouse,\r

            WI - Warehouse and Item,\r

            WC - Warehouse and Customer,\r

            WP - Warehouse and Item Price Class,\r

            WE - Warehouse and Customer Price Class,\r

            BR - Branch,\r

            IN - Item,\r

            IE - Item Price Class,\r

            UN - Unconditional"
          type: string
        applyToDeferredRevenue:
          description: Discount codes table &gt; Apply to deferred revenue &gt; A check box that (if selected) indicates that a discount should be applied to a component price while computing a deferred revenue for the component.
          type: boolean
        autoNumbering:
          description: Discount codes table &gt; Auto numbering &gt; A check box that you select to use auto-numbering for generating IDs for series based on this discount code.
          type: boolean
        createdDateTime:
          description: System generated value.
          format: date-time
          type: string
        description:
          type: string
        discountCode:
          type: string
        discountType:
          description: "DiscountType: L - Line, G - Group, D - Document"
          type: string
        errorInfo:
          type: string
        excludeFromDiscountableAmount:
          description: Discount codes table &gt; Exclude from discountable amount &gt; A check box that (if selected) indicates that the line amount is excluded from the amount that is the base for any applicable Group or Document discount.
          type: boolean
        lastModifiedDateTime:
          description: System generated value.
          format: date-time
          type: string
        lastNumber:
          description: Discount codes table &gt; Last number &gt; The last ID used for the series if series IDs are auto-numbered.
          type: string
        manual:
          description: Discount codes table &gt; Manual &gt; A check box that (if selected) indicates that this discount is excluded from automatic searches for the best available discount.
          type: boolean
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        skipDocumentDiscounts:
          description: Discount codes table &gt; Skip document discounts &gt; A check box that indicates (if selected) that after this discount has been applied, no other applicable discounts should be applied.
          type: boolean
      type: object
    DiscountCodeNumberDescriptionDto:
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
      type: object
    DiscountCodeQueryParameters:
      properties:
        createdDateTime:
          description: System retrieved information for created date and time.
          type: string
        createdDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        discountCode:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
      type: object
    DiscountCustomer2Dto:
      properties:
        customer:
          type: string
      type: object
    DiscountCustomerPriceClassDto:
      properties:
        priceClassId:
          type: string
      type: object
    DiscountDetailDto:
      properties:
        discount:
          description: The table &gt; Discount percent &gt; The discount percent if by definition the discount is calculated as a percentage.
          format: double
          type: number
        discountAmt:
          description: The table &gt; Discount amt. &gt; The amount of the discount.
          format: double
          type: number
        discountCode:
          description: "Mandatory field: The table &gt; Discount code* &gt; The discount code of the supplier discount applied to the document automatically or manually."
          type: string
        discountableAmt:
          description: The table &gt; Discountable amt. &gt; The amount used as a base for discount calculation if the discount is defined as based on the amount.
          format: double
          type: number
        discountableQty:
          description: The table &gt; Discountable qty. &gt; The quantity used as a base for discount calculation if the discount is defined as based on the item quantity.
          format: double
          type: number
        freeItem:
          description: The table &gt; Free item &gt; The item ID of the free item, if one is specified by the discount applied to the document.
          format: int32
          type: integer
        freeItemQty:
          description: The table &gt; Free item qty.&gt; The quantity of the free item to be added as the discount.
          format: double
          type: number
        lineNbr:
          description: The table &gt; Line number.
          format: int32
          type: integer
        manualDiscount:
          description: The table &gt; Manual discount &gt; A check box that indicates (if selected) that the supplier discount shown in this row has been applied manually .
          type: boolean
        sequanceID:
          description: "Mandatory field: The table &gt; Series ID* &gt; The ID of the discount sequence applied to the document."
          type: string
        skipDiscount:
          description: The table &gt; Skip discount &gt; A check box that you select to cancel a Group or Document level discount for the document.
          type: boolean
        type:
          description: The table &gt; Type &gt; The type of discount applied to the document (Group or Document).
          enum:
            - Line
            - Group
            - Document
            - Flat
          type: string
      type: object
    DiscountDetailUpdateDto:
      description: This class represent a Discount Detail for Purchase Order in Purchase Order Controller. Used to pass data to server for creating or updating an order
      properties:
        discountCode:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        sequanceID:
          $ref: "#/components/schemas/DtoValueOfString"
        skipDiscount:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
      type: object
    DiscountDto:
      properties:
        active:
          description: The top part &gt; Active &gt; A check box that indicates (if selected) that the series is active.
          type: boolean
        branches:
          description: Branches tab &gt; Branch &gt; The branch to which the series can be applied.
          items:
            $ref: "#/components/schemas/DiscountBranchDto"
          type: array
        breakBy:
          description: The top part &gt; Break by &gt; The way the breakpoints for this discount series are specified. Quantity, Amount.
          type: string
        createdDateTime:
          format: date-time
          type: string
        customerPriceClasses:
          description: Customer price classes tab &gt; Customer price class ID &gt; The customer price class to which the series is applicable.
          items:
            $ref: "#/components/schemas/DiscountCustomerPriceClassDto"
          type: array
        customers:
          description: Customers tab &gt; Customer &gt; The customer to which the series is applicable.
          items:
            $ref: "#/components/schemas/DiscountCustomer2Dto"
          type: array
        description:
          description: The top part &gt; Description &gt; A brief description of the series.
          type: string
        discountBreakpoints:
          items:
            $ref: "#/components/schemas/DiscountBreakpointDto"
          type: array
        discountBy:
          description: The top part &gt; Discount by &gt; The way the discount for the series is specified. Percent, Amount, Free item.
          type: string
        discountCode:
          description: "Mandatory field: The top part &gt; Discount code &gt; The code of the discount for which you want to create a new series or view an existing one."
          type: string
        effectiveDate:
          description: The top part &gt; Effective date &gt; The date when the series becomes effective; this field appears for promotional discount series only.
          format: date-time
          type: string
        errorInfo:
          type: string
        expirationDate:
          description: The top part &gt; Expiration date &gt; The date when the promotional discount expires. This field appears for the series if the Promotional check box is selected.
          format: date-time
          type: string
        freeItem:
          description: Free item tab &gt; Free item &gt; The free item (by its item ID) that is added to orders as the discount for this series.
          format: int32
          type: integer
        itemPriceClasses:
          description: Item price classes tab &gt; Price class ID &gt; The item price class to which the series is applicable.
          items:
            $ref: "#/components/schemas/DiscountItemPriceClassDto"
          type: array
        items:
          description: Items tab &gt; Items ID &gt; The stock or non-stock item, by its item ID, to which the series can be applied.
          items:
            $ref: "#/components/schemas/DiscountItemDto"
          type: array
        lastFreeItem:
          description: Free item tab &gt; Last free item &gt; The free item (by its item ID) that had been added to orders as the discount for this series before the date shown in the Last date column on the Discount breakpoints tab.
          format: int32
          type: integer
        lastModifiedDateTime:
          description: Free item tab &gt; Last update date &gt; A read-only field that shows the date when this discount series has been updated last.
          format: date-time
          type: string
        lastUpdateDate:
          description: The top part &gt; Last update date &gt; A read-only field that shows the date when the discount series was last updated.
          format: date-time
          type: string
        lineCntr:
          description: Free item tab &gt; A line counter for the table.
          format: int32
          type: integer
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        pendingFreeItem:
          description: Free item tab &gt; Pending free item &gt; The free item (by its item ID) that will be added to orders as the discount for this series, starting on the date specified in the Pending date column on the Discount breakpoints tab.
          format: int32
          type: integer
        promotional:
          description: The top part &gt; Promotional &gt; A check box that indicates (if selected) that the series is a promotional discount.
          type: boolean
        prorateDiscount:
          description: The top part &gt; Prorate discount &gt; A check box that indicates (if selected) that the discount can be prorated.
          type: boolean
        series:
          description: "Mandatory field: The top part &gt; Series &gt; The ID of the series defined for the discount."
          type: string
        warehouses:
          description: Warehouses tab &gt; Warehouse ID &gt; The warehouse to which the series can be applied.
          items:
            $ref: "#/components/schemas/DiscountWarehouseDto"
          type: array
      type: object
    DiscountItemDto:
      properties:
        itemId:
          type: string
      type: object
    DiscountItemPriceClassDto:
      properties:
        priceClassId:
          type: string
      type: object
    DiscountQueryParameters:
      properties:
        createdDateTime:
          description: System retrieved information for created date and time.
          type: string
        createdDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        discountCode:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        series:
          type: string
      type: object
    DiscountUpdateDto:
      properties:
        active:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        breakBy:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        discountBreakpoints:
          items:
            $ref: "#/components/schemas/DiscountBreakpointUpdateDto"
          type: array
        discountBy:
          $ref: "#/components/schemas/DtoValueOfString"
        discountCode:
          $ref: "#/components/schemas/DtoValueOfString"
        effectiveDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        expirationDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        promotional:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        prorateDiscount:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        series:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    DiscountWarehouseDto:
      properties:
        warehouse:
          type: string
      type: object
    DisposalMethodDto:
      properties:
        description:
          description: The description of the disposal method
          type: string
      type: object
    DocumentQueryParameters:
      properties:
        closedFinancialPeriod:
          description: The date of the closing of the financial period.
          type: string
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        customerRefNumber:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        documentDueDate:
          description: The date when payment for the document is due, in accordance with the credit terms.
          format: date-time
          type: string
        documentType:
          description: The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint.
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        dunningLetterDateTime:
          description: The date and time for when the document last released a dunning letter.
          type: string
        dunningLetterDateTimeCondition:
          description: Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame.
          type: string
        dunningLevel:
          description: The dunning level of the document.
          format: int32
          type: integer
        expandApplications:
          description: True if you want to see all dunning information regarding this document.
          type: boolean
        expandAttachments:
          description: True if you want to see all attachments regarding this document.
          type: boolean
        expandDunningInformation:
          type: boolean
        expandInvoiceAddress:
          description: True if you want to see all information regarding the invoice address for this document.
          type: boolean
        expandTaxDetails:
          description: True if you want to see all VAT details regarding this document.
          type: boolean
        externalReference:
          description: The top part &gt; External reference &gt; The external reference used in AutoInvoice.
          type: string
        financialPeriod:
          description: The financial period to which the transactions recorded in the document is posted. Format YYYYMM.
          type: string
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        paymentReference:
          description: The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window..
          type: string
        project:
          description: The project with which the document is associated.
          type: string
        released:
          description: Parameter for showing if invoice has been released or not.
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          description: The status of the document. Use the dropdown to select status.
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - PendingPrint
            - PendingEmail
            - CreditHold
            - CcHold
            - Reserved
          type: string
      type: object
    DtoDimension:
      properties:
        description:
          description: "Mandatory field: The top part &gt; Description* &gt; A detailed description of the segmented key."
          type: string
        id:
          description: "Mandatory field: The top part &gt; Segment key ID* &gt; The ID of the segmented key. ACCGROUP, ACCOUNT, BIZACCT, CASHACCOUNT, CONTRACT, CONTRACTITEM, CUSTOMER, EMPLOYEE, INLOCATION, INSITE, INSUBITEM, INVENTORY, LOCATION, MLISTCD, PROJECT, PROTASK, SALESPER, SUBACCOUNT, TMCONTRACT, SUPLLIER"
          type: string
        length:
          description: The top part &gt; Length &gt; The total length of the key.
          format: int32
          type: integer
        segments:
          description: The table &gt;
          items:
            $ref: "#/components/schemas/DtoSegment"
          type: array
      type: object
    DtoSegment:
      properties:
        consolNumChar:
          description: Select segment and click View segment &gt; Number of characters &gt; The length (in characters) of the string in the parent's subaccount to which the segment value is mapped; this column is displayed for only the SUBACCOUNT key.
          format: int32
          type: integer
        consolOrder:
          description: Select segment and click View segment &gt; Consol. order &gt; The number that represents the order of this string among other strings in the parent company's subaccount; this column is displayed for only the SUBACCOUNT key.
          format: int32
          type: integer
        description:
          description: "Mandatory field: Description &gt; The user-defined segment description."
          type: string
        isAutoNumber:
          description: Select segment and click View segment &gt; Auto number &gt; A check box that indicates (if selected) that the number series selected in the Number series ID field will be used to generate values for this segment in IDs.
          type: boolean
        lastModified:
          description: System generated information.
          format: date-time
          type: string
        length:
          description: Length &gt; The maximum length of the segment.
          format: int32
          type: integer
        publicId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        segmentId:
          description: Segment ID &gt; The system-generated number representing the order of the segment in the segmented key.
          format: int32
          type: integer
        segmentValues:
          description: The table &gt;
          items:
            $ref: "#/components/schemas/DtoSegmentValue"
          type: array
        timeStamp:
          type: string
        validate:
          description: Validate &gt; A check box that indicates (if selected) that validation of segment values is turned on.
          type: boolean
      type: object
    DtoSegmentUpdateDto:
      properties:
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        dimensionId:
          type: string
        segementId:
          format: int32
          type: integer
        segmentValues:
          items:
            $ref: "#/components/schemas/DtoSegmentValueUpdateDtoBase"
          type: array
      type: object
    DtoSegmentValue:
      properties:
        active:
          description: The table &gt; Active &gt; A check box that indicates (if selected) that the value is active.
          type: boolean
        description:
          description: The table &gt; Description &gt; The user-defined segment description.
          type: string
        lastModified:
          format: date-time
          type: string
        mappedSegValue:
          type: string
        publicId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        segmentId:
          description: The top part &gt; Segment ID &gt; The system-generated number representing the order of the segment in the segmented key.
          format: int32
          type: integer
        timeStamp:
          type: string
        valueId:
          description: The table &gt; Value &gt; The string that is the value of the selected segment.
          type: string
      type: object
    DtoSegmentValueUpdateDtoBase:
      properties:
        active:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        value:
          type: string
      type: object
    DtoValueOfAccountTypes:
      properties:
        value:
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
      type: object
    DtoValueOfAccountUsedForPayment:
      properties:
        value:
          enum:
            - IBAN
            - BBAN
            - BANKGIRO
            - PLUSGIRO
          type: string
      type: object
    DtoValueOfAddressUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/AddressUpdateDto"
      type: object
    DtoValueOfAttributeControlType:
      properties:
        value:
          enum:
            - Text
            - Combo
            - MultiSelectCombo
            - Lookup
            - Checkbox
            - Datetime
          type: string
      type: object
    DtoValueOfBoolean:
      properties:
        value:
          type: boolean
      type: object
    DtoValueOfContactInfoUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/ContactInfoUpdateDto"
      type: object
    DtoValueOfContactMethods:
      properties:
        value:
          enum:
            - Any
            - Email
            - Mail
            - Fax
            - Phone
          type: string
      type: object
    DtoValueOfCreditRule:
      properties:
        value:
          enum:
            - Disabled
            - DaysPastDue
            - CreditLimit
            - LimitAndDaysPastDue
          type: string
      type: object
    DtoValueOfCurrencyMultDiv:
      properties:
        value:
          enum:
            - Multiply
            - Divide
          type: string
      type: object
    DtoValueOfCustomerDefaultPaymentMethodUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/CustomerDefaultPaymentMethodUpdateDto"
      type: object
    DtoValueOfCustomerDocumentTypes:
      properties:
        value:
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
      type: object
    DtoValueOfCustomerGlAccountsUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/CustomerGlAccountsUpdateDto"
      type: object
    DtoValueOfCustomerStatus:
      properties:
        value:
          enum:
            - Active
            - OnHold
            - CreditHold
            - Inactive
            - OneTime
          type: string
      type: object
    DtoValueOfDateTime:
      properties:
        value:
          format: date-time
          type: string
      type: object
    DtoValueOfDecimal:
      properties:
        value:
          format: double
          type: number
      type: object
    DtoValueOfEInvoiceContractUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/EInvoiceContractUpdateDto"
      type: object
    DtoValueOfEmployeeTitles:
      properties:
        value:
          enum:
            - Doctor
            - Miss
            - Mr
            - Mrs
            - Ms
            - Prof
          type: string
      type: object
    DtoValueOfInt16:
      properties:
        value:
          format: int32
          type: integer
      type: object
    DtoValueOfInt32:
      properties:
        value:
          format: int32
          type: integer
      type: object
    DtoValueOfInt64:
      properties:
        value:
          format: int64
          type: integer
      type: object
    DtoValueOfInventoryCrossReferenceAlternateTypes:
      properties:
        value:
          enum:
            - CPN
            - VPN
            - Global
            - Barcode
          type: string
      type: object
    DtoValueOfInventoryStatus:
      properties:
        value:
          enum:
            - Active
            - NoSales
            - NoPurchases
            - NoRequest
            - Inactive
            - MarkedForDeletion
            - Unknown
          type: string
      type: object
    DtoValueOfInventoryType:
      properties:
        value:
          enum:
            - NonStockItem
            - LaborItem
            - ServiceItem
            - ChargeItem
            - ExpenseItem
            - FinishedGoodItem
            - ComponentPartItem
            - SubassemblyItem
          type: string
      type: object
    DtoValueOfNullableOfBillingPeriod:
      properties:
        value:
          enum:
            - Weekly
            - Monthly
            - Quarterly
            - Annual
            - OnDemand
          type: string
      type: object
    DtoValueOfNullableOfBoolean:
      properties:
        value:
          type: boolean
      type: object
    DtoValueOfNullableOfDateTime:
      properties:
        value:
          format: date-time
          type: string
      type: object
    DtoValueOfNullableOfDecimal:
      properties:
        value:
          format: double
          type: number
      type: object
    DtoValueOfNullableOfEmployeeStatus:
      properties:
        value:
          enum:
            - Active
            - Hold
            - HoldPayments
            - Inactive
            - OneTime
          type: string
      type: object
    DtoValueOfNullableOfGuid:
      properties:
        value:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
    DtoValueOfNullableOfInt16:
      properties:
        value:
          format: int32
          type: integer
      type: object
    DtoValueOfNullableOfInt32:
      properties:
        value:
          format: int32
          type: integer
      type: object
    DtoValueOfNullableOfInventoryReplenishmentSources:
      properties:
        value:
          enum:
            - DropShipToOrder
            - Manufactured
            - None
            - Purchased
            - PurchaseToOrder
            - Transfer
          type: string
      type: object
    DtoValueOfNullableOfInventoryTransactionType:
      properties:
        value:
          enum:
            - Issue
            - Return
            - Invoice
            - DebitNote
            - CreditNote
          type: string
      type: object
    DtoValueOfNullableOfInvoiceToType:
      properties:
        value:
          enum:
            - ParentAccount
            - CustomerAccount
            - SpecificAccount
          type: string
      type: object
    DtoValueOfNullableOfJournalTransactionModule:
      properties:
        value:
          enum:
            - ModuleGL
            - ModuleAP
            - ModuleAR
            - ModuleCA
            - ModuleCM
            - ModuleIN
            - ModuleSO
            - ModulePO
            - ModuleDR
            - ModuleFA
            - ModuleEP
            - ModulePM
            - ModuleTX
            - ModuleCR
          type: string
      type: object
    DtoValueOfNullableOfPOShippingDestinationType:
      properties:
        value:
          enum:
            - CompanyLocation
            - Customer
            - Vendor
            - Site
          type: string
      type: object
    DtoValueOfNullableOfPaymentTypes:
      properties:
        value:
          enum:
            - Payment
            - CreditNote
            - Prepayment
            - Refund
            - VoidPayment
            - SmallBalanceWo
            - VoidRefund
            - Undefined
          type: string
      type: object
    DtoValueOfNullableOfPoLineType:
      properties:
        value:
          enum:
            - GoodsForInventory
            - GoodsForSalesOrder
            - GoodsForReplenishment
            - GoodsForDropShip
            - NonStockForDropShip
            - NonStockForSalesOrder
            - NonStock
            - Service
            - Freight
            - Description
          type: string
      type: object
    DtoValueOfNullableOfPrimaryItemValid:
      properties:
        value:
          enum:
            - PrimaryNothing
            - PrimaryItemWarning
            - PrimaryItemError
            - PrimaryItemClassWarning
            - PrimaryItemClassError
          type: string
      type: object
    DtoValueOfNullableOfProjTaskStatus:
      properties:
        value:
          enum:
            - Planned
            - Active
            - Cancelled
            - Canceled
            - Completed
          type: string
      type: object
    DtoValueOfNullableOfProjectStatus:
      properties:
        value:
          enum:
            - Planned
            - Active
            - Completed
            - Cancelled
            - OnHold
            - PendingApproval
          type: string
      type: object
    DtoValueOfNullableOfProjectTransactionStatus:
      properties:
        value:
          enum:
            - Hold
            - Balanced
            - Released
          type: string
      type: object
    DtoValueOfNullableOfPurchaseOrderReceiptAction:
      properties:
        value:
          enum:
            - Reject
            - AcceptButWarn
            - Accept
          type: string
      type: object
    DtoValueOfNullableOfPurchaseOrderType:
      properties:
        value:
          enum:
            - RegularOrder
            - DropShip
            - Blanket
            - StandardBlanket
          type: string
      type: object
    DtoValueOfNullableOfRutRotItemTypes:
      properties:
        value:
          enum:
            - Service
            - MaterialCost
            - OtherCost
          type: string
      type: object
    DtoValueOfNullableOfRutRotTypes:
      properties:
        value:
          enum:
            - Rut
            - Rot
          type: string
      type: object
    DtoValueOfNullableOfSalesOrderOperations:
      properties:
        value:
          enum:
            - Issue
            - Receipt
          type: string
      type: object
    DtoValueOfNullableOfSalesOrderShipCompleteStatuses:
      properties:
        value:
          enum:
            - BackOrderAllowed
            - CancelRemainder
            - ShipComplete
          type: string
      type: object
    DtoValueOfNullableOfSalesOrderTypes:
      properties:
        value:
          enum:
            - CreditNote
            - DebitNote
            - Invoice
            - QuoteOrder
            - RMAOrder
            - SalesOrder
            - StandardOrder
            - TransferOrder
          type: string
      type: object
    DtoValueOfNullableOfShipmentOperations:
      properties:
        value:
          enum:
            - Issue
            - Receipt
          type: string
      type: object
    DtoValueOfNullableOfShipmentTypes:
      properties:
        value:
          enum:
            - Issue
            - DropShip
            - Transfer
          type: string
      type: object
    DtoValueOfNullableOfSupplierDocumentType:
      properties:
        value:
          enum:
            - Check
            - CreditAdj
            - DebitAdj
            - Invoice
            - Prepayment
            - QuickCheck
            - Refund
            - VoidCheck
            - VoidQuickCheck
          type: string
      type: object
    DtoValueOfNullableOfSupplierInvoiceTypes:
      properties:
        value:
          enum:
            - Invoice
            - CreditAdj
            - DebitAdj
            - Prepayment
          type: string
      type: object
    DtoValueOfNullableOfSupplierPaymentTypes:
      properties:
        value:
          enum:
            - Payment
            - DebitAdj
            - Prepayment
            - Refund
            - VoidPayment
            - VoidRefund
          type: string
      type: object
    DtoValueOfNullableOfTaxCalcMode:
      properties:
        value:
          enum:
            - TaxSetting
            - Gross
            - Net
          type: string
      type: object
    DtoValueOfNullableOfTransportationModes:
      properties:
        value:
          enum:
            - Unknown
            - BySea
            - ByRail
            - ByRoad
            - ByAeroPlane
            - ConsignmentsByPosts
            - FixedInstallations
            - InlandWaterway
          type: string
      type: object
    DtoValueOfPaymentBy:
      properties:
        value:
          enum:
            - DueDate
            - DiscountDate
          type: string
      type: object
    DtoValueOfPeppolSchemeUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/PeppolSchemeUpdateDto"
      type: object
    DtoValueOfPurchaseOrderAddressUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/PurchaseOrderAddressUpdateDto"
      type: object
    DtoValueOfPurchaseOrderContactUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/PurchaseOrderContactUpdateDto"
      type: object
    DtoValueOfPurchaseReceiptType:
      properties:
        value:
          enum:
            - PoReceipt
            - PoReturn
            - TransferReceipt
          type: string
      type: object
    DtoValueOfSalesInvoiceAddressUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/SalesInvoiceAddressUpdateDto"
      type: object
    DtoValueOfSalesInvoiceContactUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/SalesInvoiceContactUpdateDto"
      type: object
    DtoValueOfSalesOrderAddressUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/SalesOrderAddressUpdateDto"
      type: object
    DtoValueOfSalesOrderContactUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/SalesOrderContactUpdateDto"
      type: object
    DtoValueOfStatementTypes:
      properties:
        value:
          enum:
            - OpenItem
            - BalanceBroughtForward
          type: string
      type: object
    DtoValueOfString:
      properties:
        value:
          type: string
      type: object
    DtoValueOfSupplierChargeBearer:
      properties:
        value:
          enum:
            - Payer
            - Beneficiary
            - Shared
            - ServiceLevel
          type: string
      type: object
    DtoValueOfSupplierGlAccountsUpdateDto:
      properties:
        value:
          $ref: "#/components/schemas/SupplierGlAccountsUpdateDto"
      type: object
    DtoValueOfSupplierStatus:
      properties:
        value:
          enum:
            - Active
            - OnHold
            - HoldPayments
            - Inactive
            - OneTime
          type: string
      type: object
    EInvoiceContractDto:
      properties:
        fInvoiceContractID:
          type: string
        fInvoiceIntermediatorID:
          type: string
      type: object
    EInvoiceContractUpdateDto:
      properties:
        fInvoiceContractID:
          $ref: "#/components/schemas/DtoValueOfString"
        fInvoiceIntermediatorID:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    EarningTypeDto:
      properties:
        code:
          description: "Mandatory field: Code* &gt; The unique ID of the type of hour."
          type: string
        description:
          description: "Mandatory field: Description &gt; The brief description of the type of hour."
          type: string
        isActive:
          description: Active &gt; A check box that indicates (if selected) that the type of hour is active and can be used.
          type: boolean
        isBillable:
          description: Invoicable &gt; A check box that indicates (if selected) that the type is treated as invoiceable by default.
          type: boolean
        isOvertime:
          description: Overtime &gt; A check box that indicates (if selected) that the type of hour is treated as overtime.
          type: boolean
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        overtimeMultiplier:
          description: Multiplier &gt; The value by which the employee cost for this type of hour is multiplied when the time activity is released.
          format: double
          type: number
      type: object
    EarningTypeQueryParameters:
      properties:
        greaterThanValue:
          description: Greater-than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          type: string
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
      type: object
    EmployeeContactDto:
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        employeeContact:
          description: Employee contact &gt; The link to the contact record associated with the employee.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        firstName:
          description: First name &gt; The first name of the employee.
          type: string
        lastName:
          description: "Mandatory field: Last name* &gt; The last name of the employee."
          type: string
        midName:
          description: Middle name &gt; The middle name of the employee.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        phone3:
          description: Phone 3 &gt; An additional phone number of the employee.
          type: string
        title:
          description: Title &gt; The courtesy title to be used for the employee.
          enum:
            - Doctor
            - Miss
            - Mr
            - Mrs
            - Ms
            - Prof
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
      type: object
    EmployeeContactUpdateDto:
      properties:
        email:
          $ref: "#/components/schemas/DtoValueOfString"
        fax:
          $ref: "#/components/schemas/DtoValueOfString"
        firstName:
          $ref: "#/components/schemas/DtoValueOfString"
        lastName:
          $ref: "#/components/schemas/DtoValueOfString"
        middleName:
          $ref: "#/components/schemas/DtoValueOfString"
        phone1:
          $ref: "#/components/schemas/DtoValueOfString"
        phone2:
          $ref: "#/components/schemas/DtoValueOfString"
        phone3:
          $ref: "#/components/schemas/DtoValueOfString"
      required:
        - lastName
        - email
      type: object
    EmployeeCreateDTO:
      properties:
        address:
          $ref: "#/components/schemas/AddressUpdateDto"
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        calendar:
          $ref: "#/components/schemas/DtoValueOfString"
        contact:
          $ref: "#/components/schemas/EmployeeContactUpdateDto"
        department:
          $ref: "#/components/schemas/DtoValueOfString"
        employeeCd:
          $ref: "#/components/schemas/DtoValueOfString"
        employeeClass:
          $ref: "#/components/schemas/DtoValueOfString"
        status:
          $ref: "#/components/schemas/statusInEmployeeCreateDTO"
      required:
        - employeeCd
        - department
        - employeeClass
        - branch
        - calendar
        - contact
      type: object
    EmployeeDescriptionDto:
      properties:
        employeeId:
          description: The Financial settings tab &gt; The Financial information section &gt; Owner &gt; Click the magnifier  &gt; Employee ID &gt; The unique identifier, which is assigned to the employee in accordance with the configuration of the EMPLOYEEsegmented key. This information is retrieved from window EP203000.
          type: string
        id:
          description: Employee internal user ID. This is the ID of the user linked to the employee
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: The Financial settings tab &gt; The Financial information section &gt; Owner &gt; Click the magnifier &gt; Employee name &gt; The name of this employee. This information is retrieved from window EP203000.
          type: string
      type: object
    EmployeeDto:
      description: This class represents an Employee in EmployeeController. Used for getting data.
      properties:
        address:
          $ref: "#/components/schemas/addressInEmployeeDto"
        branch:
          $ref: "#/components/schemas/BranchNumberDto"
        calendarID:
          type: string
        contact:
          $ref: "#/components/schemas/contactInEmployeeDto"
        department:
          description: "Mandatory field: General information tab &gt; Employee section &gt; Department* &gt; The department the employee works for."
          type: string
        employeeClass:
          $ref: "#/components/schemas/employeeClassInEmployeeDto"
        employeeId:
          description: "Mandatory field: The top part &gt; Employee ID* &gt; The unique identifier, which is assigned to the employee in accordance with the configuration of the EMPLOYEE segmented key."
          format: int32
          type: integer
        employeeLogin:
          type: string
        employeeName:
          description: The top part &gt; Employee name &gt; The name of this employee.
          type: string
        employeeNumber:
          description: General information tab &gt; Employee settings section &gt; Employee ref. no. &gt; A reference number for the employee.
          type: string
        employeeUserId:
          description: Employee internal user ID. This is the ID of the user linked to the employee
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        status:
          description: "Mandatory field: The top part &gt; Status &gt; The status of the employee. The following options are available: Active, On hold, Hold payments, Inactive, One-time."
          enum:
            - Active
            - OnHold
            - HoldPayments
            - Inactive
            - OneTime
          type: string
        workGroupDescription:
          items:
            type: string
          type: array
      type: object
    EmployeeNumberNameDto:
      description: This class represents an Employee with its Number and Name. Used for getting data.
      properties:
        internalId:
          type: string
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
      type: object
    EmployeeQueryParameters:
      properties:
        greaterThanValue:
          description: Greater-than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        linkedToUser:
          description: If the employee is linked to a user.
          type: boolean
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
      type: object
    EmployeeTimeCardQueryParameters:
      properties:
        greaterThanValue:
          description: Greater-than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          type: string
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          description: The status of the document.
          enum:
            - Hold
            - Open
            - Approved
            - Rejected
            - Released
          type: string
        type:
          description: Identifies the type of the time card (Normal, Corrected, NormalCorrected)
          enum:
            - Normal
            - Correction
            - NormalCorrected
          type: string
        week:
          description: Identifies the week number of the time card
          type: string
      type: object
    EmployeeUpdateDto:
      properties:
        address:
          $ref: "#/components/schemas/addressInEmployeeUpdateDto"
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        calendar:
          $ref: "#/components/schemas/DtoValueOfString"
        companyTreeInfo:
          items:
            $ref: "#/components/schemas/CompanyTreeInfoDto"
          type: array
        contact:
          $ref: "#/components/schemas/contactInEmployeeUpdateDto"
        department:
          $ref: "#/components/schemas/departmentInEmployeeUpdateDto"
        employeeClass:
          $ref: "#/components/schemas/DtoValueOfString"
        status:
          $ref: "#/components/schemas/statusInEmployeeUpdateDto"
      required:
        - contact
      type: object
    EntryTypeDto:
      properties:
        businessAccount:
          $ref: "#/components/schemas/businessAccountInEntryTypeDto"
        defaultOffsetAccount:
          $ref: "#/components/schemas/defaultOffsetAccountInEntryTypeDto"
        defaultOffsetAccountBranch:
          $ref: "#/components/schemas/defaultOffsetAccountBranchInEntryTypeDto"
        defaultOffsetSubaccount:
          $ref: "#/components/schemas/defaultOffsetSubaccountInEntryTypeDto"
        description:
          description: Description &gt; A detailed description of the entry type that is used as transaction description by default.
          type: string
        disableReceipt:
          description: "Disb/receipt &gt; The basic type of cash transaction designated by this entry type: Receipt or Disbursement."
          enum:
            - Disbursement
            - Receipt
          type: string
        entryTypeId:
          description: Entry type ID* &gt; The entry type, selected by its identifier.
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
        module:
          description: Module &gt; The way the entry type is used in the system.
          type: string
        offsetAccountBranch:
          $ref: "#/components/schemas/offsetAccountBranchInEntryTypeDto"
        offsetAccountOverride:
          $ref: "#/components/schemas/offsetAccountOverrideInEntryTypeDto"
        offsetSubaccountOverride:
          $ref: "#/components/schemas/offsetSubaccountOverrideInEntryTypeDto"
        reclasificationAccount:
          $ref: "#/components/schemas/reclasificationAccountInEntryTypeDto"
        reclasificationAccountOverride:
          $ref: "#/components/schemas/reclasificationAccountOverrideInEntryTypeDto"
        taxCalculationMode:
          description: Tax calculation mode &gt; The tax calculation mode to be used by default with this entry type
          enum:
            - TaxSetting
            - Gross
            - Net
          type: string
        useForPaymentsReclasification:
          description: A check box that you select if this entry type is used to record unknown payments that need to be reclassified later.
          type: boolean
        vatZone:
          $ref: "#/components/schemas/vatZoneInEntryTypeDto"
      type: object
    EntryTypeIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    EventDto:
      properties:
        description:
          type: string
        eventType:
          type: string
        name:
          type: string
      required:
        - eventType
        - name
      type: object
    ExpenseClaimDetailDto:
      properties:
        amountInClaimCurr:
          description: Amount in claim currency &gt; The amount claimed by the employee, which is expressed in the currency of the expense claim.
          format: double
          type: number
        approvalStatus:
          description: Approval status &gt; The approval status, which indicates whether the detail row requires approval and, if it does, what the current state of approval is.
          enum:
            - New
            - Canceled
            - SentToApproval
            - ReceivedByApproval
            - InProgressApproval
            - RejectedInApproval
            - ApprovedInApproval
            - ActiveWorkflowApproval
          type: string
        approvalStatusText:
          description: Last approval comment &gt; The approval status text suitable for display
          type: string
        approver:
          description: Pending approver &gt; The identifier of the person authorized to approve the activity, if approval is required. This is either the approver of the project task or, if no approver is assigned to the project task, the project manager.
          type: string
        arReferenceNbr:
          description: REef.no. customer &gt; The reference number of the customer ledger document.
          type: string
        attachments:
          description: Expense claim detail line attachtments
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branch:
          $ref: "#/components/schemas/branchInExpenseClaimDetailDto"
        claimAmount:
          description: Claim amount &gt; The amount claimed by the employee, which is calculated as the total claim amount minus the employee part.
          format: double
          type: number
        claimDetailId:
          description: Identifies the expense claim detail id, necessary when updating detail information
          format: int32
          type: integer
        currency:
          description: Currency &gt; The currency of the expense receipt. However, if you enter a claim line directly, the currency value is read-only and matching the claim currency.
          type: string
        customer:
          $ref: "#/components/schemas/customerInExpenseClaimDetailDto"
        date:
          description: "Mandatory field: Date &gt; The date when the expense was incurred."
          format: date-time
          type: string
        description:
          description: "Mandatory field: Description* &gt; A description of the transaction."
          type: string
        employeePart:
          description: Employee part &gt; The part of the total amount that will not be paid back to the employee. The percentage depends on the company policy.
          format: double
          type: number
        expenseAccount:
          $ref: "#/components/schemas/expenseAccountInExpenseClaimDetailDto"
        expenseItem:
          $ref: "#/components/schemas/expenseItemInExpenseClaimDetailDto"
        expenseSubaccount:
          $ref: "#/components/schemas/expenseSubaccountInExpenseClaimDetailDto"
        invoiceable:
          description: Invoicable &gt; A check box that, if selected, indicates that the claim amount is invoiceable to the customer (the total amount minus the employee's part).
          type: boolean
        lineId:
          description: The expense claim line id
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        location:
          $ref: "#/components/schemas/locationInExpenseClaimDetailDto"
        project:
          $ref: "#/components/schemas/projectInExpenseClaimDetailDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInExpenseClaimDetailDto"
        quantity:
          description: Quantity &gt; The quantity of this expense item.
          format: double
          type: number
        refNbr:
          description: Ref. no. &gt; The identifier of the transaction.
          type: string
        salesAccount:
          $ref: "#/components/schemas/salesAccountInExpenseClaimDetailDto"
        salesSubaccount:
          $ref: "#/components/schemas/salesSubaccountInExpenseClaimDetailDto"
        taxCategory:
          $ref: "#/components/schemas/taxCategoryInExpenseClaimDetailDto"
        totalAmount:
          description: Amount &gt; The total amount paid for the expense item in the specified quantity.
          format: double
          type: number
        unitCost:
          description: Unit cost &gt; The cost of a unit of the item.
          format: double
          type: number
        uom:
          description: "Mandatory field: UoM &gt; The unit of measure in which the quantity is shown."
          type: string
      type: object
    ExpenseClaimDetailUpdateDto:
      properties:
        branch:
          $ref: "#/components/schemas/branchInExpenseClaimDetailUpdateDto"
        claimDetailId:
          $ref: "#/components/schemas/claimDetailIdInExpenseClaimDetailUpdateDto"
        customer:
          $ref: "#/components/schemas/customerInExpenseClaimDetailUpdateDto"
        date:
          $ref: "#/components/schemas/dateInExpenseClaimDetailUpdateDto"
        description:
          $ref: "#/components/schemas/descriptionInExpenseClaimDetailUpdateDto"
        employeePart:
          $ref: "#/components/schemas/employeePartInExpenseClaimDetailUpdateDto"
        expenseAccount:
          $ref: "#/components/schemas/expenseAccountInExpenseClaimDetailUpdateDto"
        expenseItem:
          $ref: "#/components/schemas/expenseItemInExpenseClaimDetailUpdateDto"
        expenseSubaccount:
          description: The corresponding subaccount the system uses to record the part of the expense to be paid back to the employee.
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        invoiceable:
          $ref: "#/components/schemas/invoiceableInExpenseClaimDetailUpdateDto"
        location:
          $ref: "#/components/schemas/locationInExpenseClaimDetailUpdateDto"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        project:
          $ref: "#/components/schemas/projectInExpenseClaimDetailUpdateDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInExpenseClaimDetailUpdateDto"
        quantity:
          $ref: "#/components/schemas/quantityInExpenseClaimDetailUpdateDto"
        refNbr:
          $ref: "#/components/schemas/refNbrInExpenseClaimDetailUpdateDto"
        taxCategory:
          $ref: "#/components/schemas/taxCategoryInExpenseClaimDetailUpdateDto"
        unitCost:
          $ref: "#/components/schemas/unitCostInExpenseClaimDetailUpdateDto"
        uom:
          $ref: "#/components/schemas/uomInExpenseClaimDetailUpdateDto"
      type: object
    ExpenseClaimDto:
      description: This class represents a Expense Claim in ExpenseClaimController. Used for getting data.
      properties:
        approvalDate:
          description: The top part &gt; Approval date &gt; The date when the claim was approved.
          format: date-time
          type: string
        approvalStatus:
          description: The top part &gt; Approval status &gt; The status of the claim in Approval.
          enum:
            - New
            - Canceled
            - SentToApproval
            - ReceivedByApproval
            - InProgressApproval
            - RejectedInApproval
            - ApprovedInApproval
            - ActiveWorkflowApproval
          type: string
        approvalStatusText:
          description: The top part &gt; Approval status &gt; A text field.
          type: string
        claimTotal:
          description: The top part &gt; Claim total &gt; The total amount of the claim.
          format: double
          type: number
        claimedBy:
          $ref: "#/components/schemas/claimedByInExpenseClaimDto"
        currency:
          description: The top part &gt; Currency &gt; The currency of the claim.
          type: string
        customer:
          $ref: "#/components/schemas/customerInExpenseClaimDto"
        date:
          description: "Mandatory field: The top part &gt; Date* &gt; The date when the claim was entered."
          format: date-time
          type: string
        department:
          $ref: "#/components/schemas/departmentInExpenseClaimDto"
        description:
          description: "Mandatory field: The top part &gt; Description &gt; A description of the claim."
          type: string
        details:
          description: Expence claim details tab &gt;
          items:
            $ref: "#/components/schemas/ExpenseClaimDetailDto"
          type: array
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: "System generated information: The lastest time the expense claim was modified"
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInExpenseClaimDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        refNbr:
          description: The top part &gt; Ref. no. &gt; The unique reference number of the expense claim document.
          type: string
        status:
          description: "The top part &gt; Status &gt; The current status of the expense claim: On Hold/Pending Approval/Approved/Rejected/Released."
          enum:
            - Hold
            - PendingApproval
            - Approved
            - Rejected
            - Released
          type: string
        vatExemptTotal:
          description: The top part &gt; VAT exempt total &gt; The document total that is exempt from VAT.
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subjected to VAT.
          format: double
          type: number
      type: object
    ExpenseClaimNumberDescriptionDto:
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
      type: object
    ExpenseClaimQueryParameters:
      properties:
        customer:
          description: The customer from the document
          type: string
        date:
          description: The date of the document
          format: date-time
          type: string
        departmentId:
          description: Identifies the department
          type: string
        greaterThanValue:
          description: Greater-than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          description: The status of the document.
          enum:
            - Hold
            - PendingApproval
            - Approved
            - Rejected
            - Released
          type: string
      type: object
    ExpenseClaimUpdateDto:
      properties:
        claimedBy:
          $ref: "#/components/schemas/claimedByInExpenseClaimUpdateDto"
        customer:
          $ref: "#/components/schemas/customerInExpenseClaimUpdateDto"
        customerUpdateAnswer:
          description: If the customer is updated the claim details customer information can be updated using the provided answer. By default 'SelectedCustomer' is selected.
          enum:
            - SelectedCustomer
            - AllLines
            - Nothing
          type: string
        date:
          $ref: "#/components/schemas/dateInExpenseClaimUpdateDto"
        description:
          $ref: "#/components/schemas/descriptionInExpenseClaimUpdateDto"
        details:
          description: Expense Claim detail information
          items:
            $ref: "#/components/schemas/ExpenseClaimDetailUpdateDto"
          type: array
        location:
          $ref: "#/components/schemas/locationInExpenseClaimUpdateDto"
      type: object
    ExpenseReceiptDto:
      description: This class represents a Expense Receipt in ExpenseReceiptController. Used by getting data.
      properties:
        branch:
          $ref: "#/components/schemas/branchInExpenseReceiptDto"
        claimAmount:
          description: Receipt details tab &gt; Expense details section &gt; Expense claim &gt; The expense claim with which the expense receipt is associated.
          format: double
          type: number
        claimedBy:
          $ref: "#/components/schemas/claimedByInExpenseReceiptDto"
        currency:
          $ref: "#/components/schemas/currencyInExpenseReceiptDto"
        customer:
          $ref: "#/components/schemas/customerInExpenseReceiptDto"
        date:
          description: Both tabs &gt; Date &gt; The date of the expense receipt.
          format: date-time
          type: string
        description:
          description: "Open the receipt\r

            Mandatory field: Receipt details tab &gt; Expense details section &gt; Description* &gt; The expense description, which is displayed as a link."
          type: string
        employeePart:
          description: Receipt details tab &gt; Expense details section &gt; Employee part  &gt; The part of the total amount that will not be paid back to the employee.
          format: double
          type: number
        expenseAccount:
          $ref: "#/components/schemas/expenseAccountInExpenseReceiptDto"
        expenseClaim:
          $ref: "#/components/schemas/expenseClaimInExpenseReceiptDto"
        expenseSub:
          $ref: "#/components/schemas/expenseSubInExpenseReceiptDto"
        image:
          $ref: "#/components/schemas/imageInExpenseReceiptDto"
        internalId:
          format: int32
          type: integer
        inventory:
          $ref: "#/components/schemas/InventoryNumberDescriptionDto"
        invoiceable:
          description: Receipt details tab &gt; Financial details section &gt; Invoiceable &gt; A check box that indicates (if selected) that the customer should be invoiced for the claim amount.
          type: boolean
        location:
          $ref: "#/components/schemas/locationInExpenseReceiptDto"
        project:
          $ref: "#/components/schemas/projectInExpenseReceiptDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInExpenseReceiptDto"
        quantity:
          description: Receipt details tab &gt; Expense details section &gt; Quantity &gt; The quantity of the expense item that the employee purchased according to the receipt.
          format: double
          type: number
        receiptId:
          description: The top part &gt; Employee &gt; 	The identifier of the employee whose expense receipts you want to manage.
          type: string
        refNbr:
          description: Both tabs &gt; Ref. no. &gt; The reference number, which usually matches the number of the original receipt.
          type: string
        salesAccount:
          $ref: "#/components/schemas/salesAccountInExpenseReceiptDto"
        salesSub:
          $ref: "#/components/schemas/salesSubInExpenseReceiptDto"
        status:
          description: "Receipt details tab &gt; Expense details section &gt; Expense claim status &gt; The current status of the associated expense claim, which can be one of the following options: On hold, Pending apporval, Approved, Rejected, Released."
          enum:
            - Open
            - Pending
            - Approved
            - Rejected
            - Released
          type: string
        taxCategory:
          $ref: "#/components/schemas/taxCategoryInExpenseReceiptDto"
        taxTotal:
          description: The top part &gt; VAT total &gt; The total amount of VAT or taxes calculated for the expense receipt.
          format: double
          type: number
        totalAmount:
          description: Receipt details tab &gt; Expense details section &gt; Amount &gt; The total amount of the receipt (for VAT-inclusive taxes), or the total amount before taxes (for VAT-exclusive taxes).
          format: double
          type: number
        unitCost:
          description: Receipt details tab &gt; Expense details section &gt; Unit cost &gt; The cost of one unit of the expense item.
          format: double
          type: number
        uom:
          description: Receipt details tab &gt; Expense details section &gt; UoM &gt; The unit of measure of the expense item.
          type: string
      type: object
    ExpenseReceiptQueryParameters:
      properties:
        claimedBy:
          description: Identifies the employee from the document
          type: string
        customer:
          description: Identifies the customer from the document
          type: string
        date:
          description: The date of the document
          type: string
        dateCondition:
          type: string
        inventory:
          description: Identifies the inventory item from the document
          type: string
        invoiceable:
          description: If the document is invoiceable
          type: boolean
        project:
          description: Identifies the project from the document
          type: string
        projectTask:
          description: Filter on Task ID.
          type: string
        status:
          description: The status of the document.
          enum:
            - Open
            - Pending
            - Approved
            - Rejected
            - Released
          type: string
      type: object
    ExpenseReceiptUpdateDto:
      description: This class represents a Expense Receipt in ExpenseReceiptController. Used to post data to server.
      properties:
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        claimedBy:
          $ref: "#/components/schemas/DtoValueOfString"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        customer:
          $ref: "#/components/schemas/DtoValueOfString"
        date:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        employeePart:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        expenseAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseClaim:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseSub:
          $ref: "#/components/schemas/DtoValueOfString"
        inventory:
          $ref: "#/components/schemas/DtoValueOfString"
        invoiceable:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        project:
          $ref: "#/components/schemas/DtoValueOfString"
        projectTask:
          $ref: "#/components/schemas/DtoValueOfString"
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        refNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        salesAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        salesSub:
          $ref: "#/components/schemas/DtoValueOfString"
        taxCategory:
          $ref: "#/components/schemas/DtoValueOfString"
        totalAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        unitCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    ExtendedOrganizationDto:
      description: ExtendedOrganizationDto
      properties:
        bankSettings:
          $ref: "#/components/schemas/bankSettingsInExtendedOrganizationDto"
        baseCurrency:
          description: Base Currency
          type: string
        branches:
          description: Branches
          items:
            $ref: "#/components/schemas/BranchNumberDto"
          type: array
        corporateId:
          description: CorporateId
          type: string
        currency:
          $ref: "#/components/schemas/currencyInExtendedOrganizationDto"
        defaultCountry:
          $ref: "#/components/schemas/defaultCountryInExtendedOrganizationDto"
        deliveryAddress:
          $ref: "#/components/schemas/deliveryAddressInExtendedOrganizationDto"
        deliveryContact:
          $ref: "#/components/schemas/deliveryContactInExtendedOrganizationDto"
        fileTaxByBranches:
          description: File Tax By Branches
          type: boolean
        industryCode:
          $ref: "#/components/schemas/industryCodeInExtendedOrganizationDto"
        lastModifiedDateTime:
          description: LastModifiedDateTime
          format: date-time
          type: string
        ledger:
          $ref: "#/components/schemas/ledgerInExtendedOrganizationDto"
        mainAddress:
          $ref: "#/components/schemas/mainAddressInExtendedOrganizationDto"
        mainContact:
          $ref: "#/components/schemas/mainContactInExtendedOrganizationDto"
        name:
          description: Name
          type: string
        organizationCd:
          description: Organization Cd
          type: string
        organizationType:
          description: Organization Type
          type: string
        vatRegistrationId:
          description: VatRegistrationId
          type: string
        vatZone:
          $ref: "#/components/schemas/vatZoneInExtendedOrganizationDto"
      type: object
    ExternalCodeNumberDescriptionDto:
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
      type: object
    FOBPointDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    FinancialPeriodAmountDto:
      properties:
        amount:
          format: double
          type: number
        periodId:
          type: string
      type: object
    FinancialPeriodAmountUpdateDto:
      properties:
        amount:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        periodId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    FinancialPeriodDto:
      description: This class represents a Financial Period in FinancialPeriodController. Used by getting data.
      properties:
        active:
          description: The table &gt; Active &gt; A check box that indicates (if selected) that the period can be used for posting transactions.
          type: boolean
        closedInCashManagement:
          description: The table &gt; Closed in Cash management &gt; A read-only check box that indicates (if selected) that the financial period is closed in the Cash management; if this check box is cleared, the period is active in this workspace.
          type: boolean
        closedInCustomerLedger:
          description: The table &gt; Closed in Customer ledger &gt; A read-only check box that indicates (if selected) that the financial period is closed in the Customer ledger workspace; if this check box is cleared, the period is active in this workspace.
          type: boolean
        closedInFixedAssets:
          description: The table &gt; Closed in Fixed assets &gt; A read-only check box that indicates (if selected) that the financial period is closed in the Fixed assets workspace; if this check box is cleared, the period is active in the this workspace.
          type: boolean
        closedInGeneralLedger:
          description: The table &gt; Closed in General ledger &gt; A read-only check box that indicates (if selected) that the financial period is closed in the General ledger workspace; if this check box is cleared, the period is active in the this workspace.
          type: boolean
        closedInInventoryManagement:
          description: The table &gt; Closed in Inventory management &gt; Inventory management	A read-only check box that indicates (if selected) that the financial period is closed in the Inventory workspace; if this check box is cleared, the period is active in the workspace.
          type: boolean
        closedInSupplierLedger:
          description: The table &gt; Closed in Supplier ledger &gt; A read-only check box that indicates (if selected) that the financial period is closed in the Supplier ledger workspace; if this check box is cleared, the period is active in the this workspace.
          type: boolean
        description:
          description: The table &gt; Description &gt; The description of the financial period (such as the name of the month or the number of the quarter).
          type: string
        endDate:
          description: The table &gt; End date &gt; The date when the financial period ends.
          format: date-time
          type: string
        period:
          description: The table &gt; Period &gt; The period no and the year.
          type: string
        startDate:
          description: The table &gt; Start date &gt; The date when the financial period starts.
          format: date-time
          type: string
        year:
          description: "Mandatory field: The top part &gt; Financial year* &gt; The financial year."
          format: int32
          type: integer
      type: object
    FinancialPeriodQueryParameters:
      properties:
        greaterThanValue:
          description: Enter the year or year-period lower than the first period or year you want, format YYYY or YYYYPP
          type: string
      type: object
    FinancialsDetailDto:
      properties:
        batchNumber:
          description: Link to general ledger section &gt; Batch number &gt; The number of the batch generated to implement the cash transaction.
          type: string
        branch:
          $ref: "#/components/schemas/branchInFinancialsDetailDto"
        clearDate:
          description: Link to general ledger section &gt; Clear date &gt; 	The date when the transaction was cleared.
          format: date-time
          type: string
        cleared:
          description: Link to general ledger section &gt; Cleared &gt; A check box that indicates (if selected) that the transaction was cleared.
          type: boolean
        taxCalcMode:
          description: VAT settings section &gt; VAT calculation &gt; The VAT calculation mode, which defines which amounts (VAT-inclusive or VAT-exclusive) should be entered in the detail lines of a document.
          enum:
            - TaxSetting
            - Gross
            - Net
          type: string
        taxZone:
          $ref: "#/components/schemas/taxZoneInFinancialsDetailDto"
      type: object
    FixedAssetAccountsDto:
      properties:
        accountID:
          description: The fixed asset account for this fixed asset
          type: string
        accrualAccountID:
          description: The accrual account for this fixed asset
          type: string
        accrualSubAccountID:
          description: The accrual sub account for this fixed asset
          type: string
        accumulatedDepreciationAccountID:
          description: The accumulated depreciation account for this fixed asset
          type: string
        accumulatedDepreciationSubAccountID:
          description: The accumulated depreciation sub for this fixed asset
          type: string
        creditAccountID:
          description: The credit account
          type: string
        creditSubAccountID:
          description: The credit sub account
          type: string
        debitAccountID:
          description: The debit account
          type: string
        debitSubAccountID:
          description: The debit sub account
          type: string
        depreciatedExpenseAccountID:
          description: The depreciation expense account for this fixed asset
          type: string
        depreciatedExpenseSubAccountID:
          description: The depreciation expense sub for this fixed asset
          type: string
        disposalAccountID:
          description: The proceeds account for this fixed asset
          type: string
        disposalSubAccountID:
          description: The proceeds sub for this fixed asset
          type: string
        gainAccountID:
          description: The gain account for this fixed asset
          type: string
        gainSubAccountID:
          description: The gain sub for this fixed asset
          type: string
        lossAccountID:
          description: The loss account for this fixed asset
          type: string
        lossSubAccountID:
          description: The loss sub for this fixed asset
          type: string
        subAccountID:
          description: The sub account for this fixed asset
          type: string
      type: object
    FixedAssetBookSettingsDto:
      properties:
        bookID:
          description: The book id
          type: string
        depreciationMethodID:
          description: The depreciation method id
          type: string
      type: object
    FixedAssetClassDto:
      description: This class represents an attribute in FixedAssetClass. Used for getting data.
      properties:
        acceleratedDepreciation:
          description: Indicates whether the fixed asset using this fixed asset class will use accelerated depreciation depending on selected depreciation method
          type: boolean
        accounts:
          $ref: "#/components/schemas/accountsInFixedAssetClassDto"
        accumulatedDepreciationSubAccountMask:
          description: The accumulated depreciation sub account mask for this fixed asset class
          type: string
        active:
          description: Indicates whether this fixed asset class is active or not
          type: boolean
        assetTypeID:
          description: The type id of this fixed asset class
          type: string
        bookSettings:
          $ref: "#/components/schemas/bookSettingsInFixedAssetClassDto"
        classID:
          description: The id that identifies this fixed asset class
          type: string
        depreciable:
          description: Indicates whether the fixed asset using this fixed asset class can be depreciated or not by default
          type: boolean
        depreciatedExpenseSubAccountMask:
          description: The depreciated expense sub account mask for this fixed asset class
          type: string
        description:
          description: The description of this fixed asset class
          type: string
        errorInfo:
          type: string
        gainLossSubAccountMask:
          description: The gain/loss sub account mask for this fixed asset class
          type: string
        isTangible:
          description: Indicates whether the fixed asset using this fixed asset class is tangible or not by default
          type: boolean
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        proceedSubAccountMask:
          description: The proceed sub account mask for this fixed asset class
          type: string
        recordType:
          description: The type of the record. This value is 'C' for fixed asset classes
          type: string
        subAccountMask:
          description: The sub account mask for this fixed asset class
          type: string
        usefulLife:
          description: Default useful life in years of the fixed asset using this fixed asset class
          format: double
          type: number
      type: object
    FixedAssetClassQueryParameters:
      properties:
        classID:
          description: Fixed Asset Class ID that identifies the fixed asset class.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
      type: object
    FixedAssetDto:
      description: This class represents an attribute in FixedAssetController. Used for getting data.
      properties:
        accounts:
          $ref: "#/components/schemas/accountsInFixedAssetDto"
        assetID:
          description: The id that identifies this fixed asset
          type: string
        bookBalance:
          $ref: "#/components/schemas/bookBalanceInFixedAssetDto"
        classID:
          description: The class id of this fixed asset
          type: string
        depreciable:
          description: Indicates if this fixed asset can be depreciated or not
          type: boolean
        description:
          description: The description of this fixed asset
          type: string
        details:
          $ref: "#/components/schemas/detailsInFixedAssetDto"
        errorInfo:
          type: string
        isTangible:
          description: Indicates whether this fixed asset is tangible or not
          type: boolean
        lastModifiedDateTime:
          description: A system generated date/time that indicates the last change for this fixed asset
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInFixedAssetDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        parentAssetID:
          description: The asset id of the parent of this fixed asset
          type: string
        propertyTax:
          $ref: "#/components/schemas/propertyTaxInFixedAssetDto"
        quantity:
          description: The quantity of this fixed asset
          format: double
          type: number
        recordType:
          description: The type of the record. This value is 'A' for fixed assets
          type: string
        type:
          $ref: "#/components/schemas/typeInFixedAssetDto"
        usefulLife:
          description: Useful life of this fixed asset in years
          format: double
          type: number
      type: object
    FixedAssetLocationDto:
      properties:
        branchID:
          description: The current branch id of this fixed asset
          type: string
        departmentID:
          description: The current department id of this fixed asset
          type: string
      type: object
    FixedAssetPropertyTaxDetailsDto:
      description: This class represents an attribute in FixedAssetPropertyTaxGroup. Used for getting data.
      properties:
        date:
          description: The date
          format: date-time
          type: string
        minPercent:
          description: The minimum value percentage
          format: double
          type: number
        propertyValue:
          description: The property value
          format: double
          type: number
      type: object
    FixedAssetPropertyTaxDto:
      description: This class represents an attribute in FixedAssetPropertyTaxGroup. Used for getting data.
      properties:
        active:
          description: A flag that indicates whether this fixed asset property tax group is active.
          type: boolean
        description:
          description: The description of this property tax group
          type: string
        details:
          description: Fixed Asset Property Tax Details
          items:
            $ref: "#/components/schemas/FixedAssetPropertyTaxDetailsDto"
          type: array
        errorInfo:
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        propertyTaxID:
          description: The property tax id of this property tax group
          type: string
      type: object
    FixedAssetPropertyTaxQueryParameters:
      properties:
        active:
          description: Set to True to select active fixed asset property tax groups.
          type: boolean
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        propertyTaxID:
          description: Property Tax ID that identifies the property tax group.
          type: string
      type: object
    FixedAssetQueryParameters:
      properties:
        assetID:
          description: Fixed Asset ID that identifies the asset.
          type: string
        classID:
          description: View all fixed assets with this Fixed Asset Class ID.
          type: string
        expandAccounts:
          description: Set to True to include accounts and subaccounts. Default value is False
          type: boolean
        fromDate:
          description: "From 'Placed in service date' inclusive. Date format: YYYY-MM-DD."
          format: date-time
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        status:
          description: "View all fixed assets with this Status. Available statuses are: Active, Disposed, FullyDepriciated, Hold, Reversed, Suspended."
          enum:
            - Active
            - Disposed
            - FullyDepreciated
            - Hold
            - Reversed
            - Suspended
          type: string
        toDate:
          description: "To 'Placed in service date' inclusive. Date format: YYYY-MM-DD."
          format: date-time
          type: string
      type: object
    FixedAssetRegisterDto:
      properties:
        documentDate:
          description: The document date for this fixed asset transaction
          format: date-time
          type: string
        hold:
          description: Indecates whether this fixed asset transaction is on hold or not
          type: boolean
        status:
          description: Status can be
          enum:
            - Balanced
            - OnHold
            - Posted
            - Unposted
          type: string
      type: object
    FixedAssetTransactionAccountsDto:
      properties:
        creditAccountID:
          description: The credit account
          type: string
        creditSubAccountID:
          description: The credit sub account
          type: string
        debitAccountID:
          description: The debit account
          type: string
        debitSubAccountID:
          description: The debit sub account
          type: string
      type: object
    FixedAssetTransactionDto:
      properties:
        accounts:
          $ref: "#/components/schemas/accountsInFixedAssetTransactionDto"
        assetID:
          description: The asset id this fixed asset transaction belongs to
          type: string
        batchNo:
          description: The batch number of the general ledger transaction for this fixed asset transaction
          type: string
        bookID:
          description: The book id for this fixed asset transaction
          type: string
        branchID:
          description: The branch id for this fixed asset transaction
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: A system generated date/time that indicates the last change for this fixed asset transaction
          format: date-time
          type: string
        lineNo:
          description: The line number of this fixed asset transaction
          format: int32
          type: integer
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        origin:
          description: The origin of this fixed asset transaction. Origin can be
          enum:
            - Adjustment
            - Purchasing
            - Depreciation
            - Disposal
            - Transfer
            - Reconciliation
            - Split
            - Reversal
            - DisposalReversal
          type: string
        refNo:
          description: The referance number for this fixed asset transaction
          type: string
        register:
          $ref: "#/components/schemas/registerInFixedAssetTransactionDto"
        transactionAmount:
          description: The amount of this fixed asset transaction
          format: double
          type: number
        transactionDate:
          description: The transaction date for this fixed asset transaction
          format: date-time
          type: string
        transactionDescription:
          description: The description of this fixed asset transaction
          type: string
        transactionPeriodID:
          description: The transaction period id for this fixed asset transaction
          type: string
        transactionType:
          description: Type can be
          enum:
            - PurchasingPlus
            - PurchasingMinus
            - DepreciationPlus
            - DepreciationMinus
            - CalculatedPlus
            - CalculatedMinus
            - SalePlus
            - SaleMinus
            - TransferPurchasing
            - TransferDepreciation
            - ReconciliationPlus
            - ReconciliationMinus
            - PurchasingDisposal
            - PurchasingReversal
            - AdjustingDeprPlus
            - AdjustingDeprMinus
          type: string
      type: object
    FixedAssetTransactionQueryParameters:
      properties:
        accountID:
          description: View all transactions for this Account ID.
          type: string
        assetID:
          description: View all transactions connected to this Asset ID.
          type: string
        bookID:
          description: View all transactions in this Book ID.
          type: string
        fromPeriod:
          description: "View all transactions from and including this Period. Format: YYYYMM."
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        refNo:
          description: View all transactions connected to this Reference number.
          type: string
        status:
          description: "View all transactions with this Status. Available statuses: Balanced, OnHold, Posted and UnPosted."
          enum:
            - Balanced
            - OnHold
            - Posted
            - Unposted
          type: string
        subAccountID:
          description: View all transactions for this Sub Account ID.
          type: string
        toPeriod:
          description: "View all transactions to and including this Period. Format: YYYYMM."
          type: string
        transactionFromDate:
          description: "View all transactions from and including this Transaction Date. Date format: YYYY-MM-DD."
          type: string
        transactionToDate:
          description: "View all transactions to and including this Transaction Date inclusive. Date format: YYYY-MM-DD ."
          type: string
        transactionType:
          description: "View all transactions with this Transaction Type. Available types: PurchasingPlus, PurchasingMinus, DepreciationPlus, DepreciationMinus, CalculatedPlus, CalculatedMinu,SalePlus, SaleMinus,TransferPurchasing, TransferDepreciation, ReconciliationPlus, ReconciliationMinus, PurchasingDisposal, PurchasingReversal, AdjustingDeprPlus and AdjustingDeprMinus."
          enum:
            - PurchasingPlus
            - PurchasingMinus
            - DepreciationPlus
            - DepreciationMinus
            - CalculatedPlus
            - CalculatedMinus
            - SalePlus
            - SaleMinus
            - TransferPurchasing
            - TransferDepreciation
            - ReconciliationPlus
            - ReconciliationMinus
            - PurchasingDisposal
            - PurchasingReversal
            - AdjustingDeprPlus
            - AdjustingDeprMinus
          type: string
      type: object
    GeneralLedgerBalanceDto:
      description: This class represents a General Ledger Balance in GeneralLedgerBalanceController. Used by getting data.
      properties:
        account:
          $ref: "#/components/schemas/AccountNumberDescriptionDto"
        balanceType:
          enum:
            - Actual
            - Report
            - Statistical
            - Budget
          type: string
        beginningBalance:
          format: double
          type: number
        beginningBalanceInCurrency:
          format: double
          type: number
        branch:
          $ref: "#/components/schemas/BranchNumberDto"
        currencyId:
          type: string
        errorInfo:
          type: string
        financialPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
        ledger:
          $ref: "#/components/schemas/LedgerDescriptionDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        periodToDateCredit:
          format: double
          type: number
        periodToDateCreditInCurrency:
          format: double
          type: number
        periodToDateDebit:
          format: double
          type: number
        periodToDateDebitInCurrency:
          format: double
          type: number
        subAccountCd:
          type: string
        subaccountId:
          type: string
        yearClosed:
          type: boolean
        yearToDateBalance:
          format: double
          type: number
        yearToDateBalanceInCurrency:
          format: double
          type: number
      type: object
    GeneralLedgerBudgetQueryParameters:
      properties:
        branch:
          description: Mandatory. Filter by budgets Branch.
          type: string
        financialYear:
          description: The budgets financial year.
          type: string
        greaterThanValue:
          description: Filter by from date.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        ledger:
          description: Mandatory. The budgets Ledger
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
        orderBy:
          description: Order by Last modified date and time.
          type: string
        skipRecords:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
        subaccount:
          description: The Subaccount of the budget article.
          type: string
      type: object
    GeneralLedgerPeriodBalanceQueryParameters:
      properties:
        account:
          description: Account to retrieve balance for
          type: string
        balanceType:
          description: Balance Type of the ledger to be exported
          enum:
            - Actual
            - Report
            - Statistical
            - Budget
          type: string
        branch:
          description: Branch to retrieve balance for
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            Mandatory if 'PeriodId' is not provided.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```"
          format: date-time
          type: string
        ledger:
          description: Ledger to retrieve balance for
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        periodId:
          description: "Period to retrieve balance for. Mandatory if 'LastModifiedDateTime' not provided. Format: 'yyyyMM'"
          type: string
        toggleBalanceSigns:
          description: Parameter can be used in order to change the balance sign for liability and income accounts
          type: boolean
      type: object
    GeneralLedgerTransactionDetailsDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInGeneralLedgerTransactionDetailsDto"
        batchNumber:
          description: Batch number &gt; The reference number of the batch (generated for the transaction) that updated the balance of the selected account.
          type: string
        begBalance:
          description: Beg. balance &gt; The running total of the account's beginning balance calculated in the order of transactions displayed in the table.
          format: double
          type: number
        branch:
          $ref: "#/components/schemas/branchInGeneralLedgerTransactionDetailsDto"
        creditAmount:
          description: Credit amount &gt; The transaction credit amount charged to the account during the selected financial period.
          format: double
          type: number
        currBegBalance:
          description: Beg. balance (currency) &gt; The account balance in the selected currency at the start of the selected period.
          format: double
          type: number
        currCreditAmount:
          description: Credit amount (currency) &gt; The credit amount in the selected currency for the specified account over the selected period.
          format: double
          type: number
        currDebitAmount:
          description: Debit amount (currency) &gt; The debit amount in the selected currency for the specified account over the selected period.
          format: double
          type: number
        currEndingBalance:
          description: Ending balance (currency) &gt; The account balance in the selected currency at the start of the selected period.
          format: double
          type: number
        currency:
          description: "Click the Show currency details check box to view the below fields in the window.\r

            Currency &gt; The currency of transactions in the account. If it is not specified, the balance is in the base currency."
          type: string
        debitAmount:
          description: Debit amount &gt; The transaction debit amount charged to the account during the selected financial period.
          format: double
          type: number
        description:
          description: Description &gt; The user-defined description of the transaction.
          type: string
        endingBalance:
          description: Ending balance &gt; The running total of the account's ending balance calculated in the order of transactions displayed in the table.
          format: double
          type: number
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information reflecting when the last change was done.
          format: date-time
          type: string
        ledger:
          $ref: "#/components/schemas/ledgerInGeneralLedgerTransactionDetailsDto"
        lineNumber:
          format: int32
          type: integer
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        module:
          description: Workspace &gt; The workspace where the transaction originated.
          type: string
        period:
          description: Period &gt; The financial period of the transaction.
          type: string
        refNumber:
          description: Ref. number &gt; The reference number of the external document on which this transaction is based.
          type: string
        subaccount:
          description: Subaccount &gt; The subaccount used in the batch.
          type: string
        tranDate:
          description: Trans date &gt; The date of the transaction.
          format: date-time
          type: string
      type: object
    GeneralLedgerTransactionsQueryParameters:
      properties:
        account:
          description: The account CD for which you want to view activities in the selected financial period.
          type: string
        branch:
          description: The branch CD
          type: string
        expandAccountInfo:
          description: "By default, if no value is provided, False and the account information will include only Number, Description, Type and GlConsolAccountCD.\r

            If True, each transaction returned will include extended information about account."
          type: boolean
        expandBranchInfo:
          description: "By default, if no value is provided, False and branch information will include only branch number.\r

            If True, each transaction returned will include extended information about Branch (number and name)."
          type: boolean
        fromDate:
          description: The first date of the interval within the period. Format YYYY-MM-DD
          type: string
        fromPeriod:
          description: The financial period that begins the date range of the batches you want to view. Format YYYYPP
          type: string
        includeTransactionBalance:
          description: "By default, if no value is provided, False and the transactions returned will not include their balances (fields BegBalance, EndingBalance, CurrBegBalance, CurrEndingBalance)\r

            If True, each transaction returned will include its balance."
          type: boolean
        includeUnposted:
          description: Checkmark indicating if unposted batches are included.
          type: boolean
        includeUnreleased:
          description: Checkmark indicating if unreleased (balanced) batches are included.
          type: boolean
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        ledger:
          description: Mandatory. The ledger in which you want to view the account balances.
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        subaccountId:
          description: The Subaccount
          type: string
        toDate:
          description: The last date of the interval within the selected period. Format YYYY-MM-DD
          type: string
        toPeriod:
          description: The financial period that ends the date range of the batches you want to view. Format YYYYPP
          type: string
      required:
        - ledger
      type: object
    INAllocationsDto:
      description: This class represents Allocation/Kit Allocation. Used for getting data.
      properties:
        expirationDate:
          format: date-time
          type: string
        lineNbr:
          format: int32
          type: integer
        location:
          $ref: "#/components/schemas/LocationDescriptionDto"
        lotSerialNumber:
          type: string
        quantity:
          format: double
          type: number
        uom:
          type: string
      type: object
    INAllocationsUpdateDto:
      description: This class represents a Kit Allocations from Kit Assembly. Used to add/update data.
      properties:
        expirationDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfInt32"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        lotSerialNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          description: The operation &gt;  Insert=1, Update=2, Delete=3
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    IdDescriptionDtoOfString:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    IndustryCodeDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    InstalmentSchedule:
      properties:
        days:
          format: int32
          type: integer
        percent:
          format: double
          type: number
      type: object
    IntrastatDto:
      description: This class represents a Intrastat part of InventoryItem in InventoryItemController. Used for getting data.
      properties:
        cN8:
          description: "Represents the 8 digit level Combine Nomenclature commodity code specific for the year\r

            for which the creating / actualizations Intrastat declarations is drafted."
          type: string
        countryOfOrigin:
          description: "The country of origin of the commodity will be selected,\r

            that country where the good has been produced or had the last substantial transformation."
          type: string
        supplementaryMeasureUnit:
          description: "The requirement for Supplementary Measure Units applies only to certain classes of goods(NC8 Positions)\r

            that may be expressed from quantitative point of view in other measurement units but kilo also."
          type: string
      type: object
    IntrastatUpdateDto:
      description: This class represents a Intrastat part of InventoryItem in InventoryItemController. Used for insert/update data.
      properties:
        cN8:
          $ref: "#/components/schemas/cN8InIntrastatUpdateDto"
        countryOfOrigin:
          $ref: "#/components/schemas/countryOfOriginInIntrastatUpdateDto"
        supplementaryMeasureUnit:
          $ref: "#/components/schemas/supplementaryMeasureUnitInIntrastatUpdateDto"
      type: object
    InventoryAccountInformationDto:
      properties:
        cogsAccount:
          $ref: "#/components/schemas/cogsAccountInInventoryAccountInformationDto"
        cogsSubaccount:
          $ref: "#/components/schemas/cogsSubaccountInInventoryAccountInformationDto"
        expenseAccount:
          $ref: "#/components/schemas/expenseAccountInInventoryAccountInformationDto"
        expenseAccrualAccount:
          $ref: "#/components/schemas/expenseAccrualAccountInInventoryAccountInformationDto"
        expenseEuAccount:
          $ref: "#/components/schemas/expenseEuAccountInInventoryAccountInformationDto"
        expenseImportAccount:
          $ref: "#/components/schemas/expenseImportAccountInInventoryAccountInformationDto"
        expenseNonTaxableAccount:
          $ref: "#/components/schemas/expenseNonTaxableAccountInInventoryAccountInformationDto"
        expenseSubaccount:
          $ref: "#/components/schemas/expenseSubaccountInInventoryAccountInformationDto"
        inventoryAccount:
          $ref: "#/components/schemas/inventoryAccountInInventoryAccountInformationDto"
        salesAccount:
          $ref: "#/components/schemas/salesAccountInInventoryAccountInformationDto"
        salesEuAccount:
          $ref: "#/components/schemas/salesEuAccountInInventoryAccountInformationDto"
        salesExportAccount:
          $ref: "#/components/schemas/salesExportAccountInInventoryAccountInformationDto"
        salesNonTaxableAccount:
          $ref: "#/components/schemas/salesNonTaxableAccountInInventoryAccountInformationDto"
        salesSubaccount:
          $ref: "#/components/schemas/salesSubaccountInInventoryAccountInformationDto"
      type: object
    InventoryAdjustmentDto:
      description: This class represents a inventory issue in InventoryIssueController. Used by getting data.
      properties:
        adjusmentLines:
          description: Transaction details tab &gt; The inventory adjusment lines
          items:
            $ref: "#/components/schemas/InventoryAdjustmentLineDto"
          type: array
        attachments:
          description: The data containing information about the document attachments
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        batchNumber:
          description: The reference number of the batch generated for the receipt. Click the number to open the Journal Transactions (GL.30.10.00) form and view the details of the transactions.
          type: string
        branchNumber:
          $ref: "#/components/schemas/branchNumberInInventoryAdjustmentDto"
        controlCost:
          description: The top part &gt; Control cost &gt; The manually entered cost of stock items listed in the adjustment. Control cost is available only if the Validate document totals on Entry option is selected on the Inventory preferences window. The user enters this value manually to confirm the total cost as calculated automatically for the document. If the Control Cost and Total Cost values do not match, the system generates a warning message and the document cannot be saved.
          format: double
          type: number
        controlQuantity:
          description: The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
          format: double
          type: number
        date:
          description: The date when the receipt was created. All transactions included in this document will have this transaction date.
          format: date-time
          type: string
        description:
          description: A brief description of the inventory issue or its transactions.
          type: string
        errorInfo:
          type: string
        externalReference:
          description: The external reference number of the inventory issue document (for example, the vendor’s reference code).
          type: string
        hold:
          description: A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
          type: boolean
        lastModifiedDateTime:
          description: The date when the document was last modified.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        postPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.
          type: string
        referenceNumber:
          description: The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
          type: string
        status:
          description: " The current status of the receipt. The following options are available: \r

            On Hold:The receipt/issue is a draft and can be edited. Receipts with this status cannot be released.\r

            Balanced: The receipt/issue data has been validated by the system and the receipt can be released. It also can be modified or deleted, but changes can be saved only if the receipt is balanced.\r

            Released: The receipt/issue has been released and cannot be edited or deleted."
          enum:
            - Hold
            - Balanced
            - Released
          type: string
        totalCost:
          description: The top part &gt; Total cost &gt; The total cost of the inventory items received. The system automatically calculates this value as a sum of all extended cost values of all received inventory items listed in the Transaction Details tab of this form.
          format: double
          type: number
        totalQuantity:
          description: The total quantity of inventory items, which the system calculates automatically, for the document.
          format: double
          type: number
      type: object
    InventoryAdjustmentLineDto:
      properties:
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/BranchNumberDto"
        description:
          description: Description &gt; A brief description of the goods transfer transaction.
          type: string
        extCost:
          description: Cost &gt; The cost of the item.
          format: double
          type: number
        inventoryItem:
          $ref: "#/components/schemas/inventoryItemInInventoryAdjustmentLineDto"
        lineNumber:
          format: int32
          type: integer
        location:
          $ref: "#/components/schemas/locationInInventoryAdjustmentLineDto"
        quantity:
          description: Quantity &gt; The quantity of the transferred goods (in the units indicated below).
          format: double
          type: number
        reasonCode:
          $ref: "#/components/schemas/reasonCodeInInventoryAdjustmentLineDto"
        receiptNumber:
          description: Receipt no. &gt; Reference number for the receipt for the stock item.
          type: string
        unitCost:
          description: Unit cost &gt; The cost of the unit used as base unit for the stock item.
          format: double
          type: number
        uom:
          description: "Mandatory field: UoM* &gt; The unit of measure (UoM) used for the goods to be transferred."
          type: string
        warehouse:
          $ref: "#/components/schemas/warehouseInInventoryAdjustmentLineDto"
      type: object
    InventoryAdjustmentLineUpdateDto:
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        extCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        reasonCode:
          $ref: "#/components/schemas/DtoValueOfString"
        receiptNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        unitCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        warehouseId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    InventoryAdjustmentUpdateDto:
      description: This class represents a inventory issue in InventoryIssueController. Used by getting data.
      properties:
        adjustmentLines:
          description: The inventory adjustment lines
          items:
            $ref: "#/components/schemas/InventoryAdjustmentLineUpdateDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/branchNumberInInventoryAdjustmentUpdateDto"
        controlCost:
          $ref: "#/components/schemas/controlCostInInventoryAdjustmentUpdateDto"
        controlQuantity:
          $ref: "#/components/schemas/controlQuantityInInventoryAdjustmentUpdateDto"
        date:
          $ref: "#/components/schemas/dateInInventoryAdjustmentUpdateDto"
        description:
          $ref: "#/components/schemas/descriptionInInventoryAdjustmentUpdateDto"
        externalReference:
          $ref: "#/components/schemas/externalReferenceInInventoryAdjustmentUpdateDto"
        hold:
          $ref: "#/components/schemas/holdInInventoryAdjustmentUpdateDto"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInInventoryAdjustmentUpdateDto"
        referenceNumber:
          $ref: "#/components/schemas/referenceNumberInInventoryAdjustmentUpdateDto"
      type: object
    InventoryCrossReferenceDto:
      properties:
        alternateID:
          description: "Mandatory field: Alternate ID &gt; The alternate ID of the stock item (under the specified item ID) as used by the supplier or customer."
          type: string
        alternateType:
          description: Alternate type &gt; The type of alternate codification used for the item if applicable.
          enum:
            - CPN
            - VPN
            - Global
            - Barcode
          type: string
        bAccount:
          $ref: "#/components/schemas/bAccountInInventoryCrossReferenceDto"
        description:
          description: Description &gt; Any comments applicable to the specified cross-reference.
          type: string
        uom:
          description: UoM &gt; The unit of measure used for this component.
          type: string
      type: object
    InventoryCrossReferenceUpdateDto:
      properties:
        alternateID:
          $ref: "#/components/schemas/DtoValueOfString"
        alternateType:
          $ref: "#/components/schemas/alternateTypeInInventoryCrossReferenceUpdateDto"
        bAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    InventoryDocumentQueryParameters:
      properties:
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          enum:
            - Hold
            - Balanced
            - Released
          type: string
      type: object
    InventoryDto:
      properties:
        accountInformation:
          $ref: "#/components/schemas/accountInformationInInventoryDto"
        attachments:
          description: Attributes tab &gt;
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        attributes:
          items:
            $ref: "#/components/schemas/AttributeIdValueDto"
          type: array
        baseUnit:
          description: "Mandatory field: General information tab &gt; Unit of measurement section &gt; Base unit* &gt; The UoM used as the base unit for this stock item."
          type: string
        body:
          description: The top part &gt; Body *&gt; A brief description of the stock item.
          type: string
        costPriceStatistics:
          $ref: "#/components/schemas/costPriceStatisticsInInventoryDto"
        crossReferences:
          description: Cross-reference tab &gt;
          items:
            $ref: "#/components/schemas/InventoryCrossReferenceDto"
          type: array
        currentCost:
          description: Price/cost information tab &gt; Standard cost section &gt; Current cost &gt; Read-only. This field displays the current standard cost for the stock item.
          format: double
          type: number
        defaultIssueFrom:
          $ref: "#/components/schemas/defaultIssueFromInInventoryDto"
        defaultPrice:
          description: Price/cost information tab &gt; Price management section &gt; Default price &gt; The price of the stock item.
          format: double
          type: number
        defaultReceiptTo:
          $ref: "#/components/schemas/defaultReceiptToInInventoryDto"
        defaultWarehouse:
          $ref: "#/components/schemas/defaultWarehouseInInventoryDto"
        description:
          description: The top part &gt; Description *&gt; A brief description of the stock item.
          type: string
        effectiveDate:
          description: Price/cost information tab &gt; Standard cost section &gt; Effective date &gt; Read-only. This field shows the effective date for the current standard cost of the stock item.
          format: date-time
          type: string
        errorInfo:
          type: string
        intrastat:
          $ref: "#/components/schemas/intrastatInInventoryDto"
        inventoryId:
          description: The unique internal identifier of the  item as is stored in the database. This Id is not visible in the window.
          format: int32
          type: integer
        inventoryNumber:
          description: "Mandatory field: The top part &gt; Item Id* &gt; The unique alphanumeric identifier of the stock item."
          type: string
        inventoryUnits:
          description: General information tab &gt; The Unit conversion table just below the Unit of measurement section. Several fields collected from different parts of the window.
          items:
            $ref: "#/components/schemas/InventoryUnitDto"
          type: array
        itemClass:
          $ref: "#/components/schemas/itemClassInInventoryDto"
        kitItem:
          type: boolean
        lastCost:
          description: Price/cost information tab &gt; Standard cost section &gt; Last cost &gt; Read-only. This field showing the last standard cost defined for the stock item.
          format: double
          type: number
        lastModifiedDateTime:
          description: Information collected from system.
          format: date-time
          type: string
        lotSerialClass:
          $ref: "#/components/schemas/lotSerialClassInInventoryDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the inventory item.
          type: string
        packaging:
          $ref: "#/components/schemas/packagingInInventoryDto"
        pendingCost:
          description: Price/cost information tab &gt; Standard cost section &gt; Pending cost &gt; The pending standard cost for the stock item.
          format: double
          type: number
        pendingCostDate:
          description: Price/cost information tab &gt; Standard cost section &gt; Pending cost date &gt; The date when the pending standard cost becomes effective.
          format: date-time
          type: string
        postingClass:
          $ref: "#/components/schemas/postingClassInInventoryDto"
        priceClass:
          $ref: "#/components/schemas/priceClassInInventoryDto"
        priceClassID:
          description: The Price/cost information tab &gt; Price management section &gt; Price class &gt; The price class of the item.
          type: string
        priceManager:
          $ref: "#/components/schemas/priceManagerInInventoryDto"
        priceManagerID:
          description: The Price/cost information tab &gt; Price management section &gt; Price manager &gt; The ID of the manager responsible for the product pricing.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        priceWorkgroupID:
          description: The Price/cost information tab &gt; Price management section &gt; Price work group &gt; The work group responsible for product pricing. Select the pricing work group for the stock item.
          format: int32
          type: integer
        purchaseUnit:
          description: "Mandatory field: General information tab &gt; Unit of measurement section &gt; Purchase unit *&gt; The UoM to be used as the purchase unit for the stock item."
          type: string
        recommendedPrice:
          description: The Price/cost information tab &gt; Price management section &gt; List price &gt; The manufacturer's suggested retail price (MSRP) of the stock item.
          format: double
          type: number
        salesCategories:
          description: Attributes tab &gt; Sales categories grid
          items:
            $ref: "#/components/schemas/SalesCategoryLineDto"
          type: array
        salesUnit:
          description: "Mandatory field: General information tab &gt; Unit of measurement section &gt; Sales unit *&gt; The UoM to be used as the sales unit for the stock item."
          type: string
        status:
          description: "The top part &gt; Item status &gt; The status of the stock item. The alternatives are: Active, No sales, No purchases, No request, Inactive, Marked for deletion."
          enum:
            - Active
            - NoSales
            - NoPurchases
            - NoRequest
            - Inactive
            - MarkedForDeletion
            - Unknown
          type: string
        stockItem:
          type: boolean
        supplierDetails:
          description: Supplier details tab
          items:
            $ref: "#/components/schemas/SupplierDetailsLineDto"
          type: array
        type:
          description: General information tab &gt; Item defaults section &gt; Type &gt; The type of stock item.
          enum:
            - NonStockItem
            - LaborItem
            - ServiceItem
            - ChargeItem
            - ExpenseItem
            - FinishedGoodItem
            - ComponentPartItem
            - SubassemblyItem
          type: string
        vatCode:
          $ref: "#/components/schemas/vatCodeInInventoryDto"
        warehouseDetails:
          description: Warehouse details tab &gt;
          items:
            $ref: "#/components/schemas/WarehouseDetailDto"
          type: array
      type: object
    InventoryIdNameDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click the magnifier &gt; The displayed name
          type: string
        internalId:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
      type: object
    InventoryIdNameDto:
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
      type: object
    InventoryIssueDto:
      description: This class represents a inventory issue in InventoryIssueController. Used by getting data.
      properties:
        attachments:
          description: The data containing information about the document attachments
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        batchNumber:
          description: The reference number of the batch generated for the receipt. Click the number to open the Journal Transactions (GL.30.10.00) form and view the details of the transactions.
          type: string
        branchNumber:
          $ref: "#/components/schemas/branchNumberInInventoryIssueDto"
        controlAmount:
          description: The top part &gt; Control amount &gt; The manually entered summary amount for all specified inventory items. Control Amount is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Amount and Total Amount values do not match, the system generates a warning message and the issue cannot be saved.
          format: double
          type: number
        controlQuantity:
          description: The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
          format: double
          type: number
        date:
          description: The date when the receipt was created. All transactions included in this document will have this transaction date.
          format: date-time
          type: string
        description:
          description: A brief description of the inventory issue or its transactions.
          type: string
        errorInfo:
          type: string
        externalReference:
          description: The external reference number of the inventory issue document (for example, the vendor’s reference code).
          type: string
        hold:
          description: A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
          type: boolean
        issueLines:
          description: Transaction details tab &gt;
          items:
            $ref: "#/components/schemas/InventoryIssueLineDto"
          type: array
        lastModifiedDateTime:
          description: The date when the document was last modified.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        postPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.
          type: string
        referenceNumber:
          description: The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
          type: string
        status:
          description: " The current status of the receipt. The following options are available: \r

            On Hold:The receipt/issue is a draft and can be edited. Receipts with this status cannot be released.\r

            Balanced: The receipt/issue data has been validated by the system and the receipt can be released. It also can be modified or deleted, but changes can be saved only if the receipt is balanced.\r

            Released: The receipt/issue has been released and cannot be edited or deleted."
          enum:
            - Hold
            - Balanced
            - Released
          type: string
        totalAmount:
          description: The top part &gt; Total amount &gt; The total amount, calculated as a sum of amounts for all inventory issue operations included in this issue document.
          format: double
          type: number
        totalQuantity:
          description: The total quantity of inventory items, which the system calculates automatically, for the document.
          format: double
          type: number
      type: object
    InventoryIssueLineDto:
      properties:
        allocations:
          items:
            $ref: "#/components/schemas/INAllocationsDto"
          type: array
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/BranchNumberDto"
        description:
          description: Description &gt; A brief description of the goods transfer transaction.
          type: string
        expirationDate:
          format: date-time
          type: string
        extCost:
          description: Ext. cost &gt; The extended cost of the specified stock item. An extended cost is calculated automatically as the unit cost multiplied by the quantity of units involved in this transaction.
          format: double
          type: number
        extPrice:
          description: Ext. price &gt; The extended price of the specified stock item, calculated automatically as the unit price multiplied by the quantity of the stock item involved in the inventory issue operation.
          format: double
          type: number
        inventoryItem:
          $ref: "#/components/schemas/inventoryItemInInventoryIssueLineDto"
        lineNumber:
          format: int32
          type: integer
        location:
          $ref: "#/components/schemas/locationInInventoryIssueLineDto"
        lotSerialNumber:
          type: string
        project:
          $ref: "#/components/schemas/projectInInventoryIssueLineDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInInventoryIssueLineDto"
        quantity:
          description: Quantity &gt; The quantity of the transferred goods (in the units indicated below).
          format: double
          type: number
        reasonCode:
          $ref: "#/components/schemas/reasonCodeInInventoryIssueLineDto"
        transactionType:
          description: "Trans. type &gt; The type of inventory issue transaction. Select one of the following types: Issue, Return, Invoice, Debit note, Credit note."
          enum:
            - Issue
            - Return
            - Invoice
            - DebitNote
            - CreditNote
          type: string
        unitCost:
          description: Unit cost &gt; The cost of the specified unit of this stock item.
          format: double
          type: number
        unitPrice:
          description: Unit price &gt; The price of the specified unit of this stock item.
          format: double
          type: number
        uom:
          description: "Mandatory field: UoM* &gt; The unit of measure (UoM) used for the goods to be transferred."
          type: string
        warehouse:
          $ref: "#/components/schemas/warehouseInInventoryIssueLineDto"
      type: object
    InventoryIssueLineUpdateDto:
      properties:
        allocations:
          items:
            $ref: "#/components/schemas/INAllocationsUpdateDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        expirationDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        extCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        extPrice:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        lotSerialNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        reasonCode:
          $ref: "#/components/schemas/DtoValueOfString"
        tranType:
          $ref: "#/components/schemas/DtoValueOfNullableOfInventoryTransactionType"
        unitCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        unitPrice:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        warehouseId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    InventoryIssueUpdateDto:
      description: This class represents a inventory issue in InventoryIssueController. Used by getting data.
      properties:
        branchNumber:
          $ref: "#/components/schemas/branchNumberInInventoryIssueUpdateDto"
        controlAmount:
          $ref: "#/components/schemas/controlAmountInInventoryIssueUpdateDto"
        controlQuantity:
          $ref: "#/components/schemas/controlQuantityInInventoryIssueUpdateDto"
        date:
          $ref: "#/components/schemas/dateInInventoryIssueUpdateDto"
        description:
          $ref: "#/components/schemas/descriptionInInventoryIssueUpdateDto"
        externalReference:
          $ref: "#/components/schemas/externalReferenceInInventoryIssueUpdateDto"
        hold:
          $ref: "#/components/schemas/holdInInventoryIssueUpdateDto"
        issueLines:
          description: The inventory issue lines
          items:
            $ref: "#/components/schemas/InventoryIssueLineUpdateDto"
          type: array
        postPeriod:
          $ref: "#/components/schemas/postPeriodInInventoryIssueUpdateDto"
        referenceNumber:
          $ref: "#/components/schemas/referenceNumberInInventoryIssueUpdateDto"
      type: object
    InventoryNumberDescriptionDto:
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
      type: object
    InventoryQueryParameters:
      properties:
        addCostPriceStatistics:
          description: This filter can be used only for stock items, from the Price/cost information tab.
          type: boolean
        alternateID:
          description: Applies for both Stock and Non-stock items.  Some fields in this filter applies only for one of these.
          type: string
        attachmentLastModifiedDateTime:
          description: System retrieved information for last modified date and time for attachment.
          type: string
        attachmentLastModifiedDateTimeCondition:
          description: System retrieved information for state/condition for attachment.
          type: string
        attributes:
          description: " Attributes (additional information) connected to the entity.\r

            \ Examples:\r

            {{base}}/inventory?attributes={\"AttributeID\":\"ValueID\",\"AttributeID\":\"ValueID\"}\r

            {{base}}/inventory?attributes={\"AttributeID\":\"ValueID1,ValueID2\"}"
          type: string
        availabilityLastModifiedDateTime:
          description: System retrieved information.
          type: string
        availabilityLastModifiedDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        description:
          description: A brief description of the stock item from the Top part of the window.
          type: string
        expandAccountInformation:
          description: Set to true to retrieve information about the account information connected to the item.
          type: boolean
        expandAttachment:
          description: Set to true to retrieve information about the attachments connected to the item.
          type: boolean
        expandAttribute:
          description: Set to true to retrieve the attribute descriptions used for the item.
          type: boolean
        expandCrossReference:
          description: "These expand fields are by default set to true, but will be changed in the future. \r

            Set to true to retrieve information about the cross-references (item ID and suppliers/customers ID for the item connected to the item."
          type: boolean
        expandInventoryUnits:
          description: Set to true to retrieve information about the units of measure connected to the item.
          type: boolean
        expandNote:
          description: Set to true to retrieve the note value connected to the item.
          type: boolean
        expandSalesCategories:
          description: Set to true to retrieve details about the sales categories connected to the item.
          type: boolean
        expandSupplierDetails:
          description: Set to true to retrieve details about the supplier connected to the item.
          type: boolean
        expandWarehouseDetail:
          description: Set to true to retrieve information about the warehouse connected to the item.
          type: boolean
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        inventoryNumber:
          description: The Item ID.
          type: string
        inventoryTypes:
          description: "Filter on one or more inventory types: NonStockItem, LaborItem, ServiceItem, ChargeItem, ExpenseItem, FinishedGoodItem, ComponentPartItem or SubassemblyItem"
          items:
            type: string
          type: array
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size.\r

            MaxPageSize will be set to 5000 from 1. April 2022"
          format: int32
          type: integer
        salesCategory:
          description: The Category ID for the sales category, found on the Attributes tab.
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
      type: object
    InventoryReceiptDto:
      description: This class represents a inventory issue in InventoryIssueController. Used by getting data.
      properties:
        attachments:
          description: The data containing information about the document attachments
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        batchNumber:
          description: The reference number of the batch generated for the receipt. Click the number to open the Journal Transactions (GL.30.10.00) form and view the details of the transactions.
          type: string
        branchNumber:
          $ref: "#/components/schemas/branchNumberInInventoryReceiptDto"
        controlCost:
          description: The total cost of the inventory items to be received. Control Cost is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. The user enters this value manually to confirm the total cost as calculated automatically for the document. If the Control Cost and Total Cost values do not match, the system generates a warning message and the document cannot be saved.
          format: double
          type: number
        controlQuantity:
          description: The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
          format: double
          type: number
        date:
          description: The date when the receipt was created. All transactions included in this document will have this transaction date.
          format: date-time
          type: string
        description:
          description: A brief description of the inventory issue or its transactions.
          type: string
        errorInfo:
          type: string
        externalReference:
          description: The external reference number of the inventory issue document (for example, the vendor’s reference code).
          type: string
        hold:
          description: A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
          type: boolean
        lastModifiedDateTime:
          description: The date when the document was last modified.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        postPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.
          type: string
        receiptLines:
          description: The inventory receipt lines
          items:
            $ref: "#/components/schemas/InventoryReceiptLineDto"
          type: array
        referenceNumber:
          description: The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
          type: string
        status:
          description: " The current status of the receipt. The following options are available: \r

            On Hold:The receipt/issue is a draft and can be edited. Receipts with this status cannot be released.\r

            Balanced: The receipt/issue data has been validated by the system and the receipt can be released. It also can be modified or deleted, but changes can be saved only if the receipt is balanced.\r

            Released: The receipt/issue has been released and cannot be edited or deleted."
          enum:
            - Hold
            - Balanced
            - Released
          type: string
        totalCost:
          description: The top part &gt; Total cost &gt; The total cost of the inventory items received. The system automatically calculates this value as a sum of all extended cost values of all received inventory items listed in the Transaction Details tab of this form.
          format: double
          type: number
        totalQuantity:
          description: The total quantity of inventory items, which the system calculates automatically, for the document.
          format: double
          type: number
        transferNumber:
          description: The top part &gt; Transfer no. &gt; The transfer number for the receipt operation. (Enter this number only if the two-step transfer operation is performed.)
          type: string
      type: object
    InventoryReceiptLineDto:
      properties:
        allocations:
          items:
            $ref: "#/components/schemas/INAllocationsDto"
          type: array
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/BranchNumberDto"
        description:
          description: Description &gt; A brief description of the goods transfer transaction.
          type: string
        extCost:
          description: Cost &gt; The extended cost of the received stock item. An extended cost is calculated automatically as the unit cost multiplied by the quantity (or amount) of item that was received.
          format: double
          type: number
        inventoryItem:
          $ref: "#/components/schemas/inventoryItemInInventoryReceiptLineDto"
        lineNumber:
          format: int32
          type: integer
        location:
          $ref: "#/components/schemas/locationInInventoryReceiptLineDto"
        project:
          $ref: "#/components/schemas/projectInInventoryReceiptLineDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInInventoryReceiptLineDto"
        quantity:
          description: Quantity &gt; The quantity of the transferred goods (in the units indicated below).
          format: double
          type: number
        reasonCode:
          $ref: "#/components/schemas/reasonCodeInInventoryReceiptLineDto"
        unitCost:
          description: Unit cost &gt; The cost of a unit of the received stock item.
          format: double
          type: number
        uom:
          description: "Mandatory field: UoM* &gt; The unit of measure (UoM) used for the goods to be transferred."
          type: string
        warehouse:
          $ref: "#/components/schemas/warehouseInInventoryReceiptLineDto"
      type: object
    InventoryReceiptLineUpdateDto:
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        extCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        reasonCode:
          $ref: "#/components/schemas/DtoValueOfString"
        unitCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        warehouseId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    InventoryReceiptUpdateDto:
      description: This class represents a inventory issue in InventoryIssueController. Used by getting data.
      properties:
        branchNumber:
          $ref: "#/components/schemas/branchNumberInInventoryReceiptUpdateDto"
        controlCost:
          $ref: "#/components/schemas/controlCostInInventoryReceiptUpdateDto"
        controlQuantity:
          $ref: "#/components/schemas/controlQuantityInInventoryReceiptUpdateDto"
        date:
          $ref: "#/components/schemas/dateInInventoryReceiptUpdateDto"
        description:
          $ref: "#/components/schemas/descriptionInInventoryReceiptUpdateDto"
        externalReference:
          $ref: "#/components/schemas/externalReferenceInInventoryReceiptUpdateDto"
        hold:
          $ref: "#/components/schemas/holdInInventoryReceiptUpdateDto"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInInventoryReceiptUpdateDto"
        receiptLines:
          description: The inventory issue lines
          items:
            $ref: "#/components/schemas/InventoryReceiptLineUpdateDto"
          type: array
        referenceNumber:
          $ref: "#/components/schemas/referenceNumberInInventoryReceiptUpdateDto"
        transferNumber:
          $ref: "#/components/schemas/transferNumberInInventoryReceiptUpdateDto"
      type: object
    InventorySummaryDto:
      description: This class represents a InventorySummary in InventorySummaryController. Used by getting data.
      properties:
        available:
          description: The table &gt; Available &gt; The quantity of the stock items available at the specific warehouse and location.
          format: double
          type: number
        availableForShipment:
          description: The table &gt; Available for shipment &gt; The quantity of the stock items available at the specific warehouse and location calculated based on the quantity on hand with the quantities shipped and on shipping deducted.
          format: double
          type: number
        baseUnit:
          description: The table &gt; Base unit &gt; The unit of measure (UoM) selected as the base unit for the stock items in the Stock items (IN202500) window.
          type: string
        dropShipForSO:
          description: The table &gt; Drop-ship for sales order &gt; The quantity of the stock items listed on open drop-ship orders. This value is not included in the quantity available.
          format: double
          type: number
        dropShipForSOPrepared:
          description: The table &gt; Drop-ship for sales order, prepared &gt; The quantity of the stock items listed on drop-ship sales orders with a status of On hold or Pending approval; this value is not included in the quantity available.
          format: double
          type: number
        dropShipForSOReceipts:
          description: The table &gt; Drop-ship for sales order, receipts &gt; The quantity of the stock items listed on receipts for drop-ship sales orders; this value is not included in the quantity available.
          format: double
          type: number
        errorInfo:
          type: string
        estimatedTotalCost:
          description: The table &gt; Estimated total cost &gt; The estimated total cost of the stock items available at the specified warehouse and location.
          format: double
          type: number
        estimatedUnitCost:
          description: The table &gt; Estimated unit cost &gt; The estimated unit cost of the selected stock items.
          format: double
          type: number
        expired:
          description: The table &gt; Expired &gt; The quantity of the stock items that has reached its expiration date.
          format: double
          type: number
        inAssemblyDemand:
          description: The table &gt; In assembly demand &gt; The quantity of the stock items included in unreleased kit assembly documents as components or kits, depending on whether the item is a kit or a kit component.
          format: double
          type: number
        inAssemblySupply:
          description: The table &gt; In assembly supply &gt; The quantity of the stock items listed on unreleased kit assembly documents.
          format: double
          type: number
        inIssues:
          description: The table &gt; Inventory issues &gt; The quantity of the stock items included in the inventory issue documents that have not yet been released.
          format: double
          type: number
        inReceipts:
          description: The table &gt; Invnetory receipts &gt; The quantity of the stock items included in the inventory receipt documents that have not yet been released.
          format: double
          type: number
        inTransit:
          description: The table &gt; In transit &gt; The quantity of the stock items included as in transit quantities in the inventory transfer documents that have not yet been released.
          format: double
          type: number
        inventory:
          $ref: "#/components/schemas/inventoryInInventorySummaryDto"
        location:
          $ref: "#/components/schemas/locationInInventorySummaryDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        notAvailable:
          description: The table &gt; Not available &gt; The quantity of the stock items on locations for which the Include in qty. available option is not selected.
          format: double
          type: number
        onHand:
          description: The table &gt; On hand &gt; The quantity of the stock items available on hand at the specified warehouse and location.
          format: double
          type: number
        poReceipts:
          description: The table &gt; Purchase order receipts &gt; The quantity of the stock items included in the purchase receipts that have not yet been released. To view the purchase receipts, open the Purchase receipts (PO302000) window.
          format: double
          type: number
        purchaseForSO:
          description: The table &gt; Purchase for sales order. &gt; The quantity of the stock items listed on open purchase orders created for sales orders.
          format: double
          type: number
        purchaseForSOPrepared:
          description: The table &gt; Purchase for sales order prepared &gt; The quantity of the stock items listed on purchase orders yet on hold or pending approval and created for back orders.
          format: double
          type: number
        purchaseForSOReceipts:
          description: The table &gt; Purchase for sales order receipts &gt; The quantity of the stock items listed on purchase receipts for orders that were created for sales orders.
          format: double
          type: number
        purchaseOrders:
          description: The table &gt; Purchase orders &gt; The quantity of the stock items included in open purchase orders. To view the purchase orders, open the Purchase orders (PO301000) window.
          format: double
          type: number
        purchasePrepared:
          description: The table &gt; Purchase prepared &gt; The quantity of the stock items listed on purchase orders pending approval and on hold.
          format: double
          type: number
        soAllocated:
          description: The table &gt; Sales order allocated &gt; The quantity of stock items set aside according to sales orders.
          format: double
          type: number
        soBackOrdered:
          description: The table &gt; Back orders &gt; The quantity of the stock items on sales orders with the Back order status.
          format: double
          type: number
        soBooked:
          description: The table &gt; Sales order booked &gt; The quantity of the stock items booked according to sales orders.
          format: double
          type: number
        soShipped:
          description: The table &gt; Sales orders shipped &gt; The quantity of the stock items shipped according to the confirmed shipments.
          format: double
          type: number
        soToDropShip:
          description: The table &gt; Sales order to drop-ship &gt; The quantity of the stock items included in open purchase orders created for drop-ship orders.
          format: double
          type: number
        soToPurchase:
          description: The table &gt; Sales order to purchase &gt; The quantity of the stock items included in unreleased sales orders requiring creating purchase orders.
          format: double
          type: number
        warehouse:
          $ref: "#/components/schemas/warehouseInInventorySummaryDto"
      type: object
    InventorySummaryQueryParameters:
      properties:
        location:
          type: string
        warehouse:
          type: string
      type: object
    InventoryTransferDocumentQueryParameters:
      properties:
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          enum:
            - Hold
            - Balanced
            - Released
          type: string
        toWarehouse:
          description: Inventory transfer's target warehouse
          type: string
        warehouse:
          description: Inventory transfer's source warehouse
          type: string
      type: object
    InventoryTransferDto:
      description: This class represents a inventory issue in InventoryIssueController. Used by getting data.
      properties:
        attachments:
          description: The data containing information about the document attachments
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        batchNumber:
          description: The reference number of the batch generated for the receipt. Click the number to open the Journal Transactions (GL.30.10.00) form and view the details of the transactions.
          type: string
        branchNumber:
          $ref: "#/components/schemas/branchNumberInInventoryTransferDto"
        controlQuantity:
          description: The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
          format: double
          type: number
        date:
          description: The date when the receipt was created. All transactions included in this document will have this transaction date.
          format: date-time
          type: string
        description:
          description: A brief description of the inventory issue or its transactions.
          type: string
        errorInfo:
          type: string
        externalReference:
          description: The external reference number of the inventory issue document (for example, the vendor’s reference code).
          type: string
        hold:
          description: A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
          type: boolean
        lastModifiedDateTime:
          description: The date when the document was last modified.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        postPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.
          type: string
        referenceNumber:
          description: The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
          type: string
        status:
          description: " The current status of the receipt. The following options are available: \r

            On Hold:The receipt/issue is a draft and can be edited. Receipts with this status cannot be released.\r

            Balanced: The receipt/issue data has been validated by the system and the receipt can be released. It also can be modified or deleted, but changes can be saved only if the receipt is balanced.\r

            Released: The receipt/issue has been released and cannot be edited or deleted."
          enum:
            - Hold
            - Balanced
            - Released
          type: string
        toWarehouse:
          $ref: "#/components/schemas/toWarehouseInInventoryTransferDto"
        totalQuantity:
          description: The total quantity of inventory items, which the system calculates automatically, for the document.
          format: double
          type: number
        transferLines:
          description: The Transaction details tab &gt; The inventory transfer lines
          items:
            $ref: "#/components/schemas/InventoryTransferLineDto"
          type: array
        warehouse:
          $ref: "#/components/schemas/warehouseInInventoryTransferDto"
      type: object
    InventoryTransferLineDto:
      properties:
        allocations:
          items:
            $ref: "#/components/schemas/AllocationsBasicDto"
          type: array
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/BranchNumberDto"
        description:
          description: Description &gt; A brief description of the goods transfer transaction.
          type: string
        expirationDate:
          format: date-time
          type: string
        inventoryItem:
          $ref: "#/components/schemas/inventoryItemInInventoryTransferLineDto"
        lineNumber:
          format: int32
          type: integer
        location:
          $ref: "#/components/schemas/locationInInventoryTransferLineDto"
        lotSerialNumber:
          type: string
        quantity:
          description: Quantity &gt; The quantity of the transferred goods (in the units indicated below).
          format: double
          type: number
        reasonCode:
          $ref: "#/components/schemas/reasonCodeInInventoryTransferLineDto"
        toLocation:
          $ref: "#/components/schemas/LocationDescriptionDto"
        uom:
          description: "Mandatory field: UoM* &gt; The unit of measure (UoM) used for the goods to be transferred."
          type: string
      type: object
    InventoryTransferLineUpdateDto:
      properties:
        allocations:
          items:
            $ref: "#/components/schemas/AllocationsUpdateBasicDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        expirationDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        lotSerialNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        reasonCode:
          $ref: "#/components/schemas/DtoValueOfString"
        toLocationId:
          $ref: "#/components/schemas/DtoValueOfString"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    InventoryTransferUpdateDto:
      description: This class represents a inventory issue in InventoryIssueController. Used by getting data.
      properties:
        branchNumber:
          $ref: "#/components/schemas/branchNumberInInventoryTransferUpdateDto"
        controlQuantity:
          $ref: "#/components/schemas/controlQuantityInInventoryTransferUpdateDto"
        date:
          $ref: "#/components/schemas/dateInInventoryTransferUpdateDto"
        description:
          $ref: "#/components/schemas/descriptionInInventoryTransferUpdateDto"
        externalReference:
          $ref: "#/components/schemas/externalReferenceInInventoryTransferUpdateDto"
        hold:
          $ref: "#/components/schemas/holdInInventoryTransferUpdateDto"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInInventoryTransferUpdateDto"
        referenceNumber:
          $ref: "#/components/schemas/referenceNumberInInventoryTransferUpdateDto"
        toWarehouseId:
          $ref: "#/components/schemas/DtoValueOfString"
        transferLines:
          description: The inventory issue lines
          items:
            $ref: "#/components/schemas/InventoryTransferLineUpdateDto"
          type: array
        warehouseId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    InventoryUnitDto:
      properties:
        fromUnit:
          description: "Mandatory field: From unit &gt; The unit of measure for which the conversion parameters are specified."
          type: string
        inventoryID:
          description: The top part &gt; Item ID &gt; The unique alphanumeric identifier of the stock item.
          format: int32
          type: integer
        itemClass:
          $ref: "#/components/schemas/ItemClassDto"
        priceAdjustmentMultiplier:
          description: Price adjustment multiplier &gt; Changes the price automatically if you change the UoM.
          format: double
          type: number
        recordID:
          format: int64
          type: integer
        sampleToUnit:
          type: string
        toUnit:
          description: To unit &gt; The unit of measure selected as the base unit for the item.
          type: string
        unitMultDiv:
          description: Multiply/divide &gt; The operation to be performed for unit conversion.
          type: string
        unitRate:
          format: double
          type: number
        unitType:
          format: int32
          type: integer
      type: object
    InventoryUpdateDto:
      properties:
        attributeLines:
          items:
            $ref: "#/components/schemas/AttributeLineUpdateDto"
          type: array
        baseUnit:
          $ref: "#/components/schemas/DtoValueOfString"
        body:
          $ref: "#/components/schemas/DtoValueOfString"
        cogsAccount:
          $ref: "#/components/schemas/cogsAccountInInventoryUpdateDto"
        cogsSubaccount:
          description: Only used for Stock items
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        defaultIssueFrom:
          $ref: "#/components/schemas/defaultIssueFromInInventoryUpdateDto"
        defaultPrice:
          $ref: "#/components/schemas/defaultPriceInInventoryUpdateDto"
        defaultReceiptTo:
          $ref: "#/components/schemas/defaultReceiptToInInventoryUpdateDto"
        defaultWarehouse:
          $ref: "#/components/schemas/defaultWarehouseInInventoryUpdateDto"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseAccount:
          $ref: "#/components/schemas/expenseAccountInInventoryUpdateDto"
        expenseAccrualAccount:
          $ref: "#/components/schemas/expenseAccrualAccountInInventoryUpdateDto"
        expenseEuAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseImportAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseNonTaxableAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseSubaccount:
          description: Only used for Non-stock items
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        intrastat:
          $ref: "#/components/schemas/IntrastatUpdateDto"
        inventoryAccount:
          $ref: "#/components/schemas/inventoryAccountInInventoryUpdateDto"
        inventoryNumber:
          $ref: "#/components/schemas/inventoryNumberInInventoryUpdateDto"
        itemClass:
          $ref: "#/components/schemas/itemClassInInventoryUpdateDto"
        kitItem:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        packaging:
          $ref: "#/components/schemas/PackagingUpdateDto"
        postingClass:
          $ref: "#/components/schemas/postingClassInInventoryUpdateDto"
        purchaseUnit:
          $ref: "#/components/schemas/DtoValueOfString"
        salesAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        salesEuAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        salesExportAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        salesNonTaxableAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        salesSubaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        salesUnit:
          $ref: "#/components/schemas/DtoValueOfString"
        status:
          $ref: "#/components/schemas/DtoValueOfInventoryStatus"
        supplierDetails:
          items:
            $ref: "#/components/schemas/SupplierDetailsDto"
          type: array
        type:
          $ref: "#/components/schemas/DtoValueOfInventoryType"
        vatCode:
          $ref: "#/components/schemas/vatCodeInInventoryUpdateDto"
      type: object
    ItemClassDto:
      properties:
        attributes:
          items:
            $ref: "#/components/schemas/ClassAttributeDto"
          type: array
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
        type:
          enum:
            - NonStockItem
            - LaborItem
            - ServiceItem
            - ChargeItem
            - ExpenseItem
            - FinishedGoodItem
            - ComponentPartItem
            - SubassemblyItem
          type: string
      type: object
    JournalTransactionDto:
      description: This class represents a journal transaction in JournalTransactionController. Used by getting data.
      properties:
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        autoReversing:
          description: The top part &gt; Automatic reversing &gt; A check box that indicates (if selected) that the batch is auto-reversing.
          type: boolean
        batchNumber:
          description: The top part &gt; Batch number &gt; The unique ID of the batch, which is generated by the numbering sequence assigned to batches in the GL102000 window.
          type: string
        branch:
          description: The top part &gt; Branch &gt;  The branch to which this batch is related. This field is available if your company is set up with branches.
          type: string
        controlTotal:
          description: The top part &gt; Control total &gt; The control total of the batch, which is used for batch status validation.
          format: double
          type: number
        controlTotalInCurrency:
          description: Background calculation giving you the Control total in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        createVatTransaction:
          description: The top part &gt; Create VAT transactions &gt; A check box that indicates (if selected) that a VAT-related transaction can be created manually; select this check box when you begin to create the transaction.
          type: boolean
        creditTotal:
          description: The top part &gt; Credit total &gt; The total of transaction credit amounts for the batch; the value is calculated automatically.
          format: double
          type: number
        creditTotalInCurrency:
          description: Background calculation giving you the Credit total in your default currency. This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        currencyId:
          description: The top part &gt; Currency &gt; The currency used for all the journal transactions in the selected batch.
          type: string
        debitTotal:
          description: The top part &gt; Debit total &gt; The total of transaction debit amounts for the batch; the value is calculated automatically.
          format: double
          type: number
        debitTotalInCurrency:
          description: Background calculation giving you the Debit total in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        description:
          description: The top part &gt; Description &gt; A description of the batch.
          type: string
        errorInfo:
          type: string
        exchangeRate:
          description: Ingformation collected from the system to calculate currency amount.
          format: double
          type: number
        financialPeriod:
          description: "Mandatory field: The top part Post period* &gt; The financial period to which the transactions should be posted. Format YYYYMM."
          type: string
        hold:
          description: The top part &gt; Hold &gt; A check box that indicates (if selected) that the batch has the On hold status and cannot be released or posted. You can clear the check box only if the batch has total debits equal to total credits.
          type: boolean
        journalTransactionLines:
          items:
            $ref: "#/components/schemas/JournalTransactionLineDto"
          type: array
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        ledger:
          description: "Mandatory field: The top part &gt; Ledger* &gt; The unique ID of the ledger to which batch transactions are posted. By default, it is the default posting ledger specified for the branch in the GL101010 window, but another posting ledger can be selected."
          type: string
        ledgerDescription:
          description: "Mandatory field: The top part &gt; Ledger* &gt; Click the magnifier &gt; The description of the ledger to which batch transactions are posted. By default, it is the default posting ledger specified for the branch in the GL101010 window, but another posting ledger can be selected."
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        module:
          description: The top part &gt; Workspace &gt; The workspace where the batch originates. New batches can be created only for General ledger.
          enum:
            - ModuleGL
            - ModuleAP
            - ModuleAR
            - ModuleCA
            - ModuleCM
            - ModuleIN
            - ModuleSO
            - ModulePO
            - ModuleDR
            - ModuleFA
            - ModuleEP
            - ModulePM
            - ModuleTX
            - ModuleCR
          type: string
        originalBatchNumber:
          description: The top part &gt; Orig. batch number &gt; For a scheduled or auto-reversing batch, the reference number of the batch used as a template.
          type: string
        postPeriod:
          description: "Mandatory field: The top part &gt; Post period* &gt; The financial period to which the transactions recorded in the document should be posted. Format MMYYYY."
          type: string
        reversingEntry:
          description: The top part &gt; Reversing entry &gt; A check box that indicates (if selected) that the batch is a reversing batch. The Orig.batch number field displays the ID of the batch that was reversed by this batch.
          type: boolean
        skipVatAmountValidation:
          description: The top part &gt; Skip VAT amount validation &gt; A check box that (if selected) causes automatic validation of a VAT-related transaction that you create manually to be skipped.
          type: boolean
        status:
          description: "The top part &gt; Status &gt; The current status of the batch. The status defines what processing can be applied to the batch. The following options are available: On hold, Balanced, Scheduled, Unposted, Posted, Void."
          enum:
            - Hold
            - Balanced
            - Unposted
            - Posted
            - Completed
            - Voided
            - Released
            - PartiallyReleased
            - Scheduled
          type: string
        transactionCode:
          type: string
        transactionCodeDescription:
          description: The Table part &gt; Transaction description &gt; A description of the transaction or any comments relevant to the transaction.
          type: string
        transactionDate:
          description: "Mandatory field: The top part &gt; Transaction date* &gt; The date when the batch was created, which relates to the transaction dates of the journal entries."
          format: date-time
          type: string
      type: object
    JournalTransactionLineDto:
      properties:
        accountNumber:
          description: "Mandatory field: The table &gt; Account* &gt; The account (associated with the specified branch) whose balance will be updated by the journal entry."
          type: string
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branch:
          description: The table &gt; Branch &gt; The branch associated with this journal entry.
          type: string
        creditAmount:
          description: The table &gt; Credit amount &gt; The credit amount of the journal entry.
          format: double
          type: number
        creditAmountInCurrency:
          description: Background calculation giving you the Credit amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        customerSupplier:
          description: The table &gt; Customer/Supplier &gt; The customer or supplier associated with the entry.
          type: string
        debitAmount:
          description: The table &gt; Debit amount &gt; The debit amount of the journal entry.
          format: double
          type: number
        debitAmountInCurrency:
          description: Background calculation giving you the debit amount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        description:
          description: The table &gt; Description &gt; A detailed description provided by a user or generated by the system.
          type: string
        inventoryNumber:
          description: Item ID &gt; The item ID of the line item, if applicable.
          type: string
        lineNumber:
          description: The table &gt; Number at the left indicating the line number of the table.
          format: int32
          type: integer
        module:
          description: The workspace where the batch originates. See module in the Top part &gt; Workspace
          enum:
            - ModuleGL
            - ModuleAP
            - ModuleAR
            - ModuleCA
            - ModuleCM
            - ModuleIN
            - ModuleSO
            - ModulePO
            - ModuleDR
            - ModuleFA
            - ModuleEP
            - ModulePM
            - ModuleTX
            - ModuleCR
          type: string
        note:
          type: string
        project:
          $ref: "#/components/schemas/projectInJournalTransactionLineDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInJournalTransactionLineDto"
        quantity:
          description: The table &gt; Quantity &gt; The quantity of items associated with the transaction, if relevant.
          format: double
          type: number
        referenceNumber:
          description: The table &gt; Ref. no. &gt; The reference number of the external or internal document associated with the journal transaction.
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInJournalTransactionLineDto"
        transactionDescription:
          description: The table &gt; Transaction Description &gt; A description of the transaction or any comments relevant to the transaction.
          type: string
        transactionType:
          description: The top part &gt; Type &gt; The type of this general ledger batch, which is specified by the system automatically.
          type: string
        uom:
          description: The table &gt; UoM &gt; The quantity of items associated with the transaction, if relevant.
          type: string
        vat:
          $ref: "#/components/schemas/vatInJournalTransactionLineDto"
        vatCode:
          $ref: "#/components/schemas/vatCodeInJournalTransactionLineDto"
      type: object
    JournalTransactionLineUpdateDto:
      properties:
        accountNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        creditAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        debitAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        project:
          $ref: "#/components/schemas/DtoValueOfString"
        projectTask:
          $ref: "#/components/schemas/DtoValueOfString"
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        referenceNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        subaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        transactionDescription:
          $ref: "#/components/schemas/DtoValueOfString"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        vatCodeId:
          $ref: "#/components/schemas/DtoValueOfString"
        vatId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    JournalTransactionQueryV2Parameters:
      properties:
        branch:
          description: Branch to query data for.
          type: string
        expandAttachments:
          description: If true there will be included all attachments regarding batch. Default on false
          type: boolean
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            Mandatory if 'PeriodId' is not provided. \r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```"
          type: string
        module:
          description: "Module to query data for. Allowed values: GL, AP, AR, CM, CA, IN, DR, FA, PM"
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        periodId:
          description: "Financial Period to query data for. Mandatory if 'LastModifiedDateTime' not provided. Format: YYYYPP"
          type: string
        releasedBatch:
          description: "If true there will be exported the batches having Released flag on true. \r

            If false there will be exported the batches having Released flag on false. \r

            If not set no filtering based on Released flag is applied"
          type: boolean
      type: object
    JournalTransactionUpdateDto:
      description: This class represents a journal transaction in JournalTransactionController. Used for creating/updating data.
      properties:
        autoReversing:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        batchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        controlTotalInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        createVatTransaction:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        currencyId:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        exchangeRate:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        financialPeriod:
          $ref: "#/components/schemas/financialPeriodInJournalTransactionUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        journalTransactionLines:
          items:
            $ref: "#/components/schemas/JournalTransactionLineUpdateDto"
          type: array
        ledger:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInJournalTransactionUpdateDto"
        skipVatAmountValidation:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        transactionCode:
          $ref: "#/components/schemas/DtoValueOfString"
        transactionDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
      type: object
    KitAssemblyDto:
      properties:
        createdDateTime:
          format: date-time
          type: string
        date:
          format: date-time
          type: string
        description:
          type: string
        errorInfo:
          type: string
        hold:
          type: boolean
        itemID:
          type: string
        kitAllocations:
          items:
            $ref: "#/components/schemas/INAllocationsDto"
          type: array
        lastModifiedDateTime:
          format: date-time
          type: string
        location:
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        nonStockComponentLines:
          items:
            $ref: "#/components/schemas/KitAssemblyNonStockComponentDto"
          type: array
        postPeriod:
          type: string
        quantity:
          format: double
          type: number
        reasonCode:
          type: string
        refNo:
          type: string
        revision:
          type: string
        salesOrderLink:
          type: string
        status:
          description: "Status, possible values: H - On Hold, B - Balanced, R - Released"
          type: string
        stockComponentLines:
          items:
            $ref: "#/components/schemas/KitAssemblyStockComponentsDto"
          type: array
        type:
          description: "Type, possible values: P - Production, D - Disassembly"
          type: string
        uoM:
          type: string
        warehouse:
          type: string
      type: object
    KitAssemblyNonStockComponentDto:
      properties:
        allowComponentQtyVariance:
          type: boolean
        componentQty:
          format: double
          type: number
        description:
          type: string
        errorInfo:
          type: string
        itemId:
          type: string
        lineNbr:
          format: int32
          type: integer
        maxComponentQty:
          format: double
          type: number
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        minComponentQty:
          format: double
          type: number
        quantity:
          format: double
          type: number
        reasonCode:
          type: string
        unitCost:
          format: double
          type: number
        uoM:
          type: string
      type: object
    KitAssemblyNonStockComponentsUpdateDto:
      properties:
        itemId:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfInt32"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        reasonCode:
          $ref: "#/components/schemas/DtoValueOfString"
        unitCost:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        uoM:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    KitAssemblyQueryParameters:
      properties:
        createdDateTime:
          description: System retrieved information for created date and time.
          type: string
        createdDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        refNo:
          type: string
        type:
          type: string
      type: object
    KitAssemblyStockComponentAllocationsUpdateDto:
      description: "Lot/serial allocations for stock components in kit assemblies.\r

        Used for adding and updating allocations."
      properties:
        expirationDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        itemId:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfInt32"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        lotSerialNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    KitAssemblyStockComponentsDto:
      properties:
        allocations:
          items:
            $ref: "#/components/schemas/INAllocationsDto"
          type: array
        allowComponentQtyVariance:
          type: boolean
        allowComponentSubstitution:
          type: boolean
        componentQty:
          format: double
          type: number
        description:
          type: string
        disassemblyCoeff:
          format: double
          type: number
        errorInfo:
          type: string
        itemId:
          type: string
        lineNbr:
          format: int32
          type: integer
        location:
          type: string
        maxComponentQty:
          format: double
          type: number
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        minComponentQty:
          format: double
          type: number
        quantity:
          format: double
          type: number
        reasonCode:
          type: string
        unitCost:
          format: double
          type: number
        uoM:
          type: string
      type: object
    KitAssemblyStockComponentsUpdateDto:
      properties:
        itemId:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfInt32"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        reasonCode:
          $ref: "#/components/schemas/DtoValueOfString"
        stockComponentLineAllocations:
          items:
            $ref: "#/components/schemas/KitAssemblyStockComponentAllocationsUpdateDto"
          type: array
        unitCost:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        uoM:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    KitAssemblyUpdateDto:
      properties:
        date:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        hold:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        itemId:
          $ref: "#/components/schemas/DtoValueOfString"
        kitAllocations:
          items:
            $ref: "#/components/schemas/INAllocationsUpdateDto"
          type: array
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        nonStockComponentLines:
          items:
            $ref: "#/components/schemas/KitAssemblyNonStockComponentsUpdateDto"
          type: array
        postPeriod:
          $ref: "#/components/schemas/DtoValueOfString"
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        reasonCode:
          $ref: "#/components/schemas/DtoValueOfString"
        refNo:
          type: string
        revision:
          $ref: "#/components/schemas/DtoValueOfString"
        stockComponentAllocations:
          items:
            $ref: "#/components/schemas/KitAssemblyStockComponentAllocationsUpdateDto"
          type: array
        stockComponentLines:
          items:
            $ref: "#/components/schemas/KitAssemblyStockComponentsUpdateDto"
          type: array
        type:
          description: "Type, possible values: P - Production, D - Disassembly"
          type: string
        uoM:
          $ref: "#/components/schemas/DtoValueOfString"
        warehouse:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    KitSpecificationDto:
      properties:
        allowComponentAddition:
          type: boolean
        createdDateTime:
          format: date-time
          type: string
        description:
          type: string
        errorInfo:
          type: string
        isActive:
          type: boolean
        isNonStock:
          type: boolean
        kitInventoryID:
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        nonStockComponentLines:
          items:
            $ref: "#/components/schemas/KitSpecificationNonStockComponentDto"
          type: array
        revision:
          type: string
        stockComponentLines:
          items:
            $ref: "#/components/schemas/KitSpecificationStockComponentsDto"
          type: array
      type: object
    KitSpecificationNonStockComponentDto:
      properties:
        allowComponentQtyVariance:
          type: boolean
        componentID:
          type: string
        componentQty:
          format: double
          type: number
        description:
          type: string
        errorInfo:
          type: string
        lineNbr:
          format: int32
          type: integer
        maxComponentQty:
          format: double
          type: number
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        minComponentQty:
          format: double
          type: number
        uom:
          type: string
      type: object
    KitSpecificationNonStockComponentsUpdateDto:
      properties:
        allowQtyVariation:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        compInventoryID:
          $ref: "#/components/schemas/DtoValueOfString"
        dfltCompQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        maxCompQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        minCompQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    KitSpecificationStockComponentsDto:
      properties:
        allowComponentQtyVariance:
          type: boolean
        allowComponentSubstitution:
          type: boolean
        componentID:
          type: string
        componentQty:
          format: double
          type: number
        description:
          type: string
        disassemblyCoeff:
          format: double
          type: number
        errorInfo:
          type: string
        lineNbr:
          format: int32
          type: integer
        maxComponentQty:
          format: double
          type: number
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        minComponentQty:
          format: double
          type: number
        uom:
          type: string
      type: object
    KitSpecificationStockComponentsUpdateDto:
      properties:
        allowQtyVariation:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        allowSubstitution:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        compInventoryID:
          $ref: "#/components/schemas/DtoValueOfString"
        dfltCompQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        disassemblyCoeff:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        maxCompQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        minCompQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    KitSpecificationUpdateDto:
      properties:
        allowCompAddition:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        descr:
          $ref: "#/components/schemas/DtoValueOfString"
        isActive:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        isNonStock:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        kitInventoryID:
          $ref: "#/components/schemas/DtoValueOfString"
        nonStockComponentLines:
          items:
            $ref: "#/components/schemas/KitSpecificationNonStockComponentsUpdateDto"
          type: array
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        revisionID:
          $ref: "#/components/schemas/DtoValueOfString"
        stockComponentLines:
          items:
            $ref: "#/components/schemas/KitSpecificationStockComponentsUpdateDto"
          type: array
      type: object
    KitSpecificationsQueryParameters:
      properties:
        createdDateTime:
          type: string
        createdDateTimeCondition:
          type: string
        kitInventoryID:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        revisionID:
          type: string
      type: object
    LandedCostDto:
      description: This class represents a Landed Cost Line for Purchase Receipt in PurchaseReceiptController. Used for getting data.
      properties:
        amount:
          description: Landed costs tab &gt; Amount &gt; A non-zero amount of the landed cost.
          format: double
          type: number
        apBillDate:
          description: Landed costs tab &gt; Purchase invoice date &gt; The date of the purchase invoice for the landed cost.
          format: date-time
          type: string
        apDocType:
          description: Landed costs tab &gt; Supplier document type &gt; The type of the supplier document generated for the landed cost.
          enum:
            - Check
            - CreditAdj
            - DebitAdj
            - Invoice
            - Prepayment
            - QuickCheck
            - Refund
            - VoidCheck
            - VoidQuickCheck
          type: string
        apRefNbr:
          description: Landed costs tab &gt; Supplier ref. &gt; The reference number of the supplier document generated for the landed cost.
          type: string
        currency:
          description: Landed costs tab &gt; Currency &gt; The currency used for the landed cost.
          type: string
        description:
          description: "Mandatory field: Landed costs tab &gt; Description* &gt; The description of the landed cost code."
          type: string
        inDocType:
          description: Landed costs tab &gt; Inventory doc. type &gt; The type of the document generated in the Inventory workspace for this landed cost.
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        inRefNbr:
          description: Landed costs tab &gt; Inventory ref. no. &gt; The reference number of the document generated in the Inventory workspace for this landed cost.
          type: string
        inventory:
          $ref: "#/components/schemas/InventoryNumberDescriptionDto"
        landedCostCode:
          description: "Mandatory field: Landed costs tab &gt; Landed costs* &gt; Landed cost code &gt; The landed cost code associated with the landed costs incurred for this purchase or transfer receipt."
          type: string
        lineNbr:
          description: Landed costs tab &gt; Line number
          format: int32
          type: integer
        location:
          $ref: "#/components/schemas/locationInLandedCostDto"
        postponePurchaseInvoiceCreation:
          description: Landed costs tab &gt; Postpone creation of purchase invoice &gt; A check box that indicates (if selected) that a related supplier ledger invoice for the incurred landed costs must be created later.
          type: boolean
        purchaseInvoiceNbr:
          type: string
        supplier:
          $ref: "#/components/schemas/supplierInLandedCostDto"
        taxCategory:
          $ref: "#/components/schemas/taxCategoryInLandedCostDto"
        terms:
          $ref: "#/components/schemas/termsInLandedCostDto"
      type: object
    LandedCostUpdateDto:
      description: This class represents a Landed Cost Line for Purchase Receipt in PurchaseReceiptController. Used for getting data.
      properties:
        amount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        apBillDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        apDocType:
          $ref: "#/components/schemas/DtoValueOfNullableOfSupplierDocumentType"
        apRefNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        inDocType:
          $ref: "#/components/schemas/DtoValueOfCustomerDocumentTypes"
        inRefNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        inventoryId:
          $ref: "#/components/schemas/DtoValueOfString"
        landedCostCode:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfInt32"
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        postponePurchaseInvoiceCreation:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        purchaseInvoiceNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        supplierId:
          $ref: "#/components/schemas/DtoValueOfString"
        taxCategory:
          $ref: "#/components/schemas/DtoValueOfString"
        terms:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    LanguageUpdateDto:
      properties:
        languageISO:
          type: string
      type: object
    LeaseAndRentInfoDto:
      properties:
        leaseNumber:
          type: string
        leaseRentTerm:
          format: int32
          type: integer
        lessorID:
          type: string
        lessorName:
          type: string
        manufacturingYear:
          type: string
        rentAmount:
          format: double
          type: number
        retailCost:
          format: double
          type: number
      type: object
    LedgerDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    LedgerDto:
      properties:
        balanceType:
          description: "The top part &gt; Balance type &gt; The type of balance in the ledger. Select one of the following predefined types: Actual, Budget, Reporting, Statistical."
          enum:
            - Actual
            - Report
            - Statistical
            - Budget
          type: string
        branchAccounting:
          description: The top part &gt; Branch accounting &gt; A check box that you select to indicate that the system should automatically generate inter-branch transactions for this ledger to balance transactions for all branches involved.
          type: boolean
        consolBranch:
          $ref: "#/components/schemas/consolBranchInLedgerDto"
        consolidationSource:
          description: The top part &gt; Consolidation source &gt; A check box that specifies, if selected, that the ledger should be used as a source ledger for consolidation.
          type: boolean
        currencyId:
          description: "Mandatory field: The top part &gt; Currency* &gt; The default currency of the ledger."
          type: string
        description:
          description: The top part &gt; Description &gt; A detailed ledger description.
          type: string
        internalId:
          format: int32
          type: integer
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        number:
          description: "Mandatory field: The top part &gt; Ledger ID* &gt; An alphanumeric string of up to 10 characters used to identify the ledger."
          type: string
        postInterCompany:
          description: Branch accounting &gt; True/False
          type: boolean
      type: object
    LedgerQueryParameters:
      properties:
        greaterThanValue:
          description: Excludes ledgers with value lower than entry
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
      type: object
    LinkLineDto:
      properties:
        purchaseLineNbr:
          $ref: "#/components/schemas/purchaseLineNbrInLinkLineDto"
        purchaseNumber:
          $ref: "#/components/schemas/purchaseNumberInLinkLineDto"
        purchaseType:
          description: "PurchaseTye can be either {Visma.net.ERP.Web.Api.Model.V1.Enum.PurchaseType.PurchaseOrder} or {Visma.net.ERP.Web.Api.Model.V1.Enum.PurchaseType.PurchaseReceipt}<para>\r

            It should be noted that for stock-items, its only limited to {Visma.net.ERP.Web.Api.Model.V1.Enum.PurchaseType.PurchaseReceipt}, however,\r

            for non-stock items we can choose either {Visma.net.ERP.Web.Api.Model.V1.Enum.PurchaseType.PurchaseReceipt} or {Visma.net.ERP.Web.Api.Model.V1.Enum.PurchaseType.PurchaseOrder}</para>"
          enum:
            - PurchaseOrder
            - PurchaseReceipt
          type: string
      type: object
    LocationDescriptionDto:
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
      type: object
    LocationDto:
      description: This class represents a Location in LocationController. Used for getting data.
      properties:
        active:
          description: The top part &gt; Active &gt; A check box that you select if the location is active.
          type: boolean
        address:
          $ref: "#/components/schemas/addressInLocationDto"
        baccount:
          $ref: "#/components/schemas/baccountInLocationDto"
        contact:
          $ref: "#/components/schemas/contactInLocationDto"
        corporateId:
          description: General information tab &gt; Location address section &gt; Corporate ID &gt; The corporate ID associated with the customer location.
          type: string
        ediCode:
          description: General information tab &gt; Location address section &gt; EDI code &gt; The EDI code to be used for the customer location.
          type: string
        errorInfo:
          type: string
        gln:
          description: General information tab &gt; Location address section &gt; GLN &gt; The GLN to be used for the customer location.
          type: string
        lastModifiedDateTime:
          description: System generation information
          format: date-time
          type: string
        locationId:
          description: "Mandatory field: The top part &gt; Location ID* &gt; The identifier of the location. Click the magnifier."
          type: string
        locationName:
          description: The top part &gt; Location name &gt; A descriptive name to help users recognize the location.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        peppolScheme:
          $ref: "#/components/schemas/peppolSchemeInLocationDto"
        vatRegistrationId:
          description: General information tab &gt; Location address section &gt; VAT registration ID &gt; The optional VAT registration ID associated with the location.
          type: string
        vatZone:
          $ref: "#/components/schemas/vatZoneInLocationDto"
      type: object
    LocationIdNameDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click the magnifier &gt; The displayed name
          type: string
        internalId:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
      type: object
    LocationIdNameDto:
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
      type: object
    LocationNameDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    LocationQueryParameters:
      properties:
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        gln:
          type: string
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        locationId:
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
      type: object
    LocationUpdateDto:
      description: This class represents a Location in LocationController. Used to create and update Location.
      properties:
        active:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        address:
          $ref: "#/components/schemas/DtoValueOfAddressUpdateDto"
        addressIsSameAsMain:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        baccountId:
          $ref: "#/components/schemas/baccountIdInLocationUpdateDto"
        contact:
          $ref: "#/components/schemas/DtoValueOfContactInfoUpdateDto"
        contactIsSameAsMain:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        corporateId:
          $ref: "#/components/schemas/DtoValueOfString"
        ediCode:
          $ref: "#/components/schemas/DtoValueOfString"
        gln:
          $ref: "#/components/schemas/DtoValueOfString"
        locationId:
          $ref: "#/components/schemas/locationIdInLocationUpdateDto"
        locationName:
          $ref: "#/components/schemas/DtoValueOfString"
        peppolScheme:
          $ref: "#/components/schemas/DtoValueOfPeppolSchemeUpdateDto"
        vatRegistrationId:
          $ref: "#/components/schemas/DtoValueOfString"
        vatZone:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    LotSerClassDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    LotSerialClassDetailDto:
      properties:
        errorInfo:
          type: string
        id:
          description: The Id of the Lot Serial Class
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segmentNumber:
          description: Segment number for the Lot Serial segment
          format: int32
          type: integer
        type:
          description: Segment type for the Lot Serial segment
          enum:
            - NumericVal
            - FixedConst
            - DateConst
            - DayConst
            - MonthConst
            - MonthLongConst
            - YearConst
            - YearLongConst
          type: string
        value:
          description: Segment value for the Lot Serial segment
          type: string
      type: object
    LotSerialClassDto:
      properties:
        assignmentMethod:
          description: Assignment method used for the Lot Serial Class (When Used, When Received)
          enum:
            - WhenReceived
            - WhenUsed
          type: string
        autoGenerateNextNumber:
          description: Option for enable/disable auto generating the next number for the Lot Serial Class
          type: boolean
        autoIncrementalValue:
          description: Value used for the auto incremental value when AutoIncrementalValueBetweenClasses is enabled
          type: string
        autoIncrementalValueBetweenClasses:
          description: Option for enable/disable auto incremental values between classes for the Lot Serial Class
          type: boolean
        description:
          description: The description of the Lot Serial Class
          type: string
        details:
          description: Lot Serial Class details (Segment Number, Type, Value)
          items:
            $ref: "#/components/schemas/LotSerialClassDetailDto"
          type: array
        errorInfo:
          type: string
        id:
          description: The Id of the Lot Serial Class
          type: string
        issueMethod:
          description: Issue method used for the Lot Serial Class (FIFO, LIFO, Sequential, Expiration, User-Enterable)
          enum:
            - FIFO
            - LIFO
            - Sequential
            - Expiration
            - UserEnterable
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        requiredForDropShip:
          description: Option for enable/disable require drop shipping of the Lot Serial Class
          type: boolean
        trackExpirationDate:
          description: Option for enable/disable expiration date tracking of the Lot Serial Class
          type: boolean
        trackingMethod:
          description: Method used to track the Lot Serial Class
          enum:
            - NotNumbered
            - LotNumbered
            - SerialNumbered
          type: string
      type: object
    LotSerialClassQueryParameters:
      properties:
        assignmentMethod:
          enum:
            - WhenReceived
            - WhenUsed
          type: string
        autoGenerateNextNumber:
          type: boolean
        autoIncrementalValue:
          type: string
        autoIncrementalValueBetweenClasses:
          type: boolean
        description:
          type: string
        issueMethod:
          enum:
            - FIFO
            - LIFO
            - Sequential
            - Expiration
            - UserEnterable
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        requiredForDropShip:
          type: boolean
        trackExpirationDate:
          type: boolean
        trackingMethod:
          enum:
            - NotNumbered
            - LotNumbered
            - SerialNumbered
          type: string
      type: object
    MetadataDto:
      properties:
        maxPageSize:
          format: int64
          type: integer
        totalCount:
          format: int64
          type: integer
      type: object
    ModeOfTransportDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          format: int32
          type: integer
      type: object
    MultilanguageDto:
      properties:
        isTranslated:
          type: boolean
        languageISO:
          type: string
        translation:
          type: string
      type: object
    MultilanguageTranslationDto:
      properties:
        translation:
          type: string
      type: object
    NoteDto:
      properties:
        note:
          type: string
      type: object
    NotificationDto:
      properties:
        action:
          type: string
        contextId:
          type: string
        eventId:
          type: string
        resourceUri:
          type: string
      type: object
    NotificationReceivedDto:
      properties:
        entityId:
          type: string
        notificationId:
          type: string
        source:
          type: string
        status:
          type: string
      type: object
    NumberingDto:
      properties:
        description:
          description: "Mandatory field: The top part &gt; Description* &gt; The description of the numbering series."
          type: string
        manualNumbering:
          description: The top part &gt; Manual numbering &gt; A check box that indicates (if selected) that the system will not generate numbers for the series and users will need to specify document numbers manually.
          type: boolean
        newNumberSymbol:
          description: "Mandatory field: The top part &gt; New number symbol* &gt; An alphanumeric string used to indicate that a new number for an object will be assigned."
          type: string
        numberingId:
          description: "Mandatory field: The top part &gt; Numbering ID &gt; The unique ID of the numbering series, which is an alphanumeric string of up to 10 characters."
          type: string
        sequence:
          items:
            $ref: "#/components/schemas/NumberingSequenceDto"
          type: array
      type: object
    NumberingSequenceDto:
      properties:
        branch:
          $ref: "#/components/schemas/branchInNumberingSequenceDto"
        endNbr:
          description: "Mandatory field: The table &gt; End number* &gt; The number to be used at the end of this series. The end number cannot be less than the Start number."
          type: string
        lastNbr:
          description: "Mandatory field: The table &gt; Last number* &gt; The most recent allocated number used for an object in this series."
          type: string
        nbrStep:
          description: "Mandatory field: The table &gt; Numbering step* &gt; The increment this series uses to generate the next number."
          format: int32
          type: integer
        nextNumber:
          description: Next number that will be assigned
          type: string
        numberingId:
          description: "Mandatory field: The top part &gt; Numbering ID &gt; The unique ID of the numbering series, which is an alphanumeric string of up to 10 characters."
          type: string
        startDate:
          description: "Mandatory field: The table &gt; Start dat*e &gt; The date when this series will first be used."
          format: date-time
          type: string
        startNbr:
          description: "Mandatory field: The table &gt; Start number* &gt; The number to be used first in this numbering series or subsequence."
          type: string
        warnNbr:
          description: "Mandatory field: The table &gt; Warning number* &gt; The minimum number that triggers a warning that available numbers will be used up soon."
          type: string
      type: object
    OrderToApplyDto:
      description: This class represents an OrderToApply in Payments
      properties:
        appliedToOrder:
          description: Applied to order &gt; The total amount reserved for the order.
          format: double
          type: number
        balance:
          description: Balance &gt; The balance of the order after the cash discount is taken and the amount is paid.
          format: double
          type: number
        cashDiscountDate:
          description: Cash discount date &gt; The date through which the customer can take a cash discount.
          format: date-time
          type: string
        currency:
          description: Currency &gt; The currency of the document.
          type: string
        date:
          description: Date &gt; The creation date of the order.
          format: date-time
          type: string
        description:
          description: Description &gt; A description of the order.
          type: string
        dueDate:
          description: Due date &gt; The due date of the order.
          format: date-time
          type: string
        invoiceDate:
          description: Invoice date &gt; The date of the invoice.
          format: date-time
          type: string
        invoiceNbr:
          description: Invoice no. &gt; The reference number of the invoice generated for the order.
          type: string
        orderNo:
          description: "Mandatory field: Order no.* &gt; The reference number of the order for which the payment is reserved."
          type: string
        orderTotal:
          description: Order total &gt; The total amount of the document.
          format: double
          type: number
        orderType:
          description: "Mandatory field: Order type* &gt; The order type for which the payment is to be reserved."
          type: string
        status:
          description: Status &gt; The status of the document, which is assigned automatically.
          enum:
            - Open
            - Hold
            - CreditHold
            - Completed
            - Cancelled
            - BackOrder
            - Shipping
            - Invoiced
            - PendingApproval
            - Voided
          type: string
        transferredToInvoice:
          description: Transferred to invoice &gt; The amount that has been applied to invoice.
          format: double
          type: number
      type: object
    OrganizationQueryParameters:
      description: Organization Query Parameters
      properties:
        expandBankSettings:
          description: True to expand payment settings for organization.
          type: boolean
        expandBranches:
          description: True to expand all Branches related to this Organization.
          type: boolean
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
      type: object
    PackageDetailLineDto:
      properties:
        boxId:
          description: "Mandatory field: Packages tab &gt; Box ID* &gt; The box used for the package."
          type: string
        coDAmount:
          description: Packages tab &gt; Cost of delivery amount &gt; The amount to be charged on delivery of the package, you can edit the value if needed.
          format: double
          type: number
        confirmed:
          description: Packages tab &gt; Confirmed &gt; This check box indicates (if selected) that shipping of the package specified on the line has been confirmed.
          type: boolean
        customRefNbr1:
          description: Packages tab &gt; Customer ref. no. 1 &gt; An auxiliary reference number to appear on the carrier label for the box.
          type: string
        customRefNbr2:
          description: Packages tab &gt; Customer ref. no. 2 &gt; An additional auxiliary reference number to appear on the carrier label for the box.
          type: string
        declaredValue:
          description: Packages tab &gt; Declared value &gt; The amount of the package specified for insurance, you can edit the value if needed.
          format: double
          type: number
        description:
          description: Packages tab &gt; Description &gt; The description of the item or description of the box contents.
          type: string
        lineNumber:
          description: Packages tab &gt; Line number. The sequence of the lines.
          format: int32
          type: integer
        trackingNumber:
          description: Packages tab &gt; Tracking number &gt; The tracking number provided for the package by the carrier if integration with carrier is configured.
          type: string
        type:
          description: "Packages tab &gt; Type &gt; The type of package: Auto or Manual."
          type: string
        uom:
          description: Packages tab &gt; UoM &gt; The unit of measure in which the weight of the package is specified.
          type: string
        weight:
          description: Packages tab &gt; Weight &gt; The gross weight of the package.
          format: double
          type: number
      type: object
    PackagingDto:
      description: This class represents a Packaging part of InventoryItem in InventoryItemController. Used for getting data.
      properties:
        baseItemVolume:
          description: The volume of the <see cref="!:BaseUnit">Base Unit</see> of the item.
          format: double
          type: number
        baseItemWeight:
          description: The weight of the <see cref="!:BaseUnit">Base Unit</see> of the item.
          format: double
          type: number
        volumeUOM:
          description: The <see cref="!:INUnit">Unit of Measure</see> used for the <see cref="P:Visma.net.ERP.Web.Api.Model.V1.IN.PackagingDto.BaseItemVolume">Volume</see> of the item.
          type: string
        weightUOM:
          description: The <see cref="!:INUnit">Unit of Measure</see> used for the <see cref="P:Visma.net.ERP.Web.Api.Model.V1.IN.PackagingDto.BaseItemWeight">Weight</see> of the item.
          type: string
      type: object
    PackagingTypeDto:
      description: This class represents a PackagingType in PackagingTypeController. Used by getting data.
      properties:
        activeByDefault:
          description: The table &gt; Active by default &gt; If you select this check box, the package will be added by default to the list of packages for each new ship via code.
          type: boolean
        boxId:
          description: "Mandatory field: The table &gt; Box ID* &gt; The ID of the type of box."
          type: string
        boxWeight:
          description: The table &gt; Tare weight &gt; The weight of an empty box of this type, which may include the weight of any packaging material used to pack items inside the box.
          format: double
          type: number
        description:
          description: The table &gt; Description &gt; A description of the box.
          type: string
        height:
          description: The table &gt; Height &gt; The height of the package.
          format: int32
          type: integer
        lastModifiedDateTime:
          description: The table &gt; The date and time when the type was last modified.
          format: date-time
          type: string
        length:
          description: The table &gt; Length &gt; The length of the package.
          format: int32
          type: integer
        maxVolume:
          description: The table &gt; Max. volume &gt; The maximum volume of items that can fit into a package of the type.
          format: double
          type: number
        maxWeight:
          description: The table &gt; Max weight &gt; The maximum weight a box of the type can hold.
          format: double
          type: number
        volumeUoM:
          description: The table &gt; Volume UoM &gt; The unit of measure used for the volume as specified in the Inventory preferences (IN101000) window.
          type: string
        weightUoM:
          description: The table &gt; Weight UoM &gt; The unit of measure used for the weight.
          type: string
        width:
          description: The table &gt; Width &gt; The width of the package.
          format: int32
          type: integer
      type: object
    PackagingTypeQueryParameters:
      properties:
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          type: string
        numberToRead:
          format: int32
          type: integer
        orderBy:
          type: string
        skipRecords:
          format: int32
          type: integer
      type: object
    PackagingUpdateDto:
      description: This class represents a Packaging part of InventoryItem in InventoryItemController. Used for insert/update data.
      properties:
        baseItemVolume:
          $ref: "#/components/schemas/baseItemVolumeInPackagingUpdateDto"
        baseItemWeight:
          $ref: "#/components/schemas/baseItemWeightInPackagingUpdateDto"
        volumeUOM:
          $ref: "#/components/schemas/volumeUOMInPackagingUpdateDto"
        weightUOM:
          $ref: "#/components/schemas/weightUOMInPackagingUpdateDto"
      type: object
    ParentRecordDto:
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
      type: object
    PaymentDto:
      description: This class represents a Payment in PaymentController. Used by getting data.
      properties:
        applicationDate:
          description: "Mandatory field: The top part &gt; Date* &gt; The date when a payment is applied to a document (invoice or note). The field display the current business date for tunapplied or partially applied payments and the latest application date for the closed payment"
          format: date-time
          type: string
        applicationPeriod:
          description: "Mandatory field: The top part &gt; Financial period* &gt; The period to which the payment should be applied, which the system fills in based on the date."
          type: string
        appliedToDocuments:
          description: The top part &gt; Applied to documents &gt; The total of the documents to which payment is to be applied.
          format: double
          type: number
        appliedToOrders:
          description: The top part &gt; Applied to orders &gt; The total of the orders for which payment is reserved, minus the amount transferred to invoice.
          format: double
          type: number
        availableBalance:
          description: The top part &gt; Available balance &gt; The amount that has not been applied.
          format: double
          type: number
        availableBalanceInCurrency:
          description: Available Balance calculated in your default (base) currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        branch:
          type: string
        cashAccount:
          description: "Mandatory field: The top part &gt; Cash account* &gt; The default cash account associated with the payment method; this field is not available for credit notes."
          type: string
        currency:
          description: The top part &gt; Currency &gt; The currency of the payment document.
          type: string
        customer:
          $ref: "#/components/schemas/customerInPaymentDto"
        deductedCharges:
          description: The top part &gt; Deducted charges &gt; The total amount of bank charges deducted by bank from the payment amount on your cash account (bank account).
          format: double
          type: number
        errorInfo:
          type: string
        financeCharges:
          description: The top part &gt; Finance charges &gt; The total on all finance charges applied to this document.
          format: double
          type: number
        financialDetails:
          $ref: "#/components/schemas/financialDetailsInPaymentDto"
        hold:
          description: The top part &gt; Hold &gt;  A check box that indicates (if selected) that the document is a draft with the On hold status. This check box is unavailable for debit adjustments.
          type: boolean
        invoiceText:
          description: The top part &gt; Invoice text &gt; A user-defined description of the payment. 50 alphanumeric characters.
          type: string
        lastModifiedDateTime:
          description: Systemgenerated information.
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInPaymentDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        ordersToApply:
          description: Orders to apply tab &gt;
          items:
            $ref: "#/components/schemas/OrderToApplyDto"
          type: array
        paymentAmount:
          description: The top part &gt; Payment amount &gt; The total of the payment that is entered manually.
          format: double
          type: number
        paymentAmountInCurrency:
          description: Payment amount calculated in your default (base) currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        paymentLines:
          description: Documents to apply tab &gt;
          items:
            $ref: "#/components/schemas/PaymentLineDto"
          type: array
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInPaymentDto"
        paymentRef:
          description: "Mandatory field: The top part &gt; Payment ref.* &gt; A secondary payment reference identifier, which can be a system-generated number or an external reference number entered manually."
          type: string
        refNbr:
          description: The top part &gt; Ref.no &gt; The unique identifier for the payment. This number is automatically generated by the system for a new payment document, based on the number series	in the AR101000 window.
          type: string
        status:
          description: The top part &gt; Status &gt; The status of the customer payment, which for a new document is either Balanced or On hold. [On hold, Balanced, Voided, Scheduled, Open, Closed, Pending print, Pending email, Credit hold, CcHold, Reserved]
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - PendingPrint
            - PendingEmail
            - CreditHold
            - CcHold
            - Reserved
          type: string
        type:
          description: "The top part &gt; Type &gt; The type of a document. The following types are available: Payment, CreditNote, Prepayment, Customer refund, Void payment, Balance write-off"
          enum:
            - Payment
            - CreditNote
            - Prepayment
            - Refund
            - VoidPayment
            - SmallBalanceWo
            - VoidRefund
            - Undefined
          type: string
        writeOffAmount:
          description: The top part &gt; Write-off amount &gt; The amount that has been written off.
          format: double
          type: number
      type: object
    PaymentFinancialDetailsDto:
      description: This class represents an Financial Details in Payments
      properties:
        paymentDate:
          description: Financial Details tab &gt; Payment date
          format: date-time
          type: string
      type: object
    PaymentLineBaseUpdateDto:
      properties:
        amountPaid:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        documentType:
          $ref: "#/components/schemas/DtoValueOfCustomerDocumentTypes"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        refNbr:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    PaymentLineDto:
      properties:
        amountPaid:
          description: Amount paid &gt; The amount to be paid which is displayed in the currency of the document that is selected in the window.
          format: double
          type: number
        balance:
          description: Balance &gt; The balance of the document after the cash discount is taken and the amount is paid.
          format: double
          type: number
        balanceWriteOff:
          description: Balance write-off &gt; The amount to be written off.
          format: double
          type: number
        cashDiscountBalance:
          description: Cash discount balance &gt; The unused amount of the cash discount, in case of partial payment.
          format: double
          type: number
        cashDiscountDate:
          description: Cash disount date &gt; The date through which the customer can take a cash discount.
          format: date-time
          type: string
        cashDiscountTaken:
          description: Cash discount taken &gt; The cash discount to be taken.
          format: double
          type: number
        crossRate:
          description: Cross rate &gt; A cross rate that you can optionally specify between the currency of the payment and currency of the original document.
          format: double
          type: number
        currency:
          description: Currency &gt; The currency of the customer ledger document.
          type: string
        customerOrder:
          description: Customer order &gt; A reference to a document of the customer, such as a purchase order number.
          type: string
        date:
          description: Date &gt; The creation date of the customer ledger document.
          format: date-time
          type: string
        description:
          description: Description &gt; A description of the document.
          type: string
        documentType:
          description: Doc. type &gt; The type of document to which the payment is applied.
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        dueDate:
          description: Due date &gt; The due date of the customer ledger document.
          format: date-time
          type: string
        postPeriod:
          description: Post period &gt; The financial period to which the transactions recorded in the document should be posted. Format MMYYYY.
          type: string
        refNbr:
          description: "Mandatory field: Ref. no.* &gt; The reference number of the invoice or note to which the payment is applied."
          type: string
        writeOffReasonCode:
          $ref: "#/components/schemas/writeOffReasonCodeInPaymentLineDto"
      type: object
    PaymentLinesUpdateDto:
      properties:
        amountPaid:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        balanceWriteOff:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        cashDiscountTaken:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        crossRate:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        documentType:
          $ref: "#/components/schemas/DtoValueOfCustomerDocumentTypes"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        refNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        writeOffReasonCode:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    PaymentMethodDetailDto:
      properties:
        bankingDetailType:
          description: Table column &gt; BankingDetailType &gt; The bank account type
          type: string
        description:
          description: Table column &gt; Description &gt; The name for the payment method element.
          type: string
        detailID:
          description: "Mandatory field: Table column &gt; ID* &gt; The identifier of the payment method element."
          type: string
      type: object
    PaymentMethodDto:
      description: This class represents a Payment Method in PaymentMethodController. Used for getting data.
      properties:
        active:
          description: The top part &gt; Active &gt; A check box that indicates whether the payment method is active in the system.
          type: boolean
        description:
          description: "Mandatory field: The top part &gt; Description* &gt; A description of the payment method."
          type: string
        details:
          description: The settings for Customer ledger and The settings of Supplier ledger tab &gt; The table
          items:
            $ref: "#/components/schemas/PaymentMethodDetailDto"
          type: array
        meansOfPayment:
          description: "The top part &gt; Means of payment &gt; One of the system's built-in payment templates. The following options are available: Credit card, Cash, Direct deposit."
          enum:
            - CreditCard
            - CashOrCheck
            - DirectDeposit
          type: string
        paymentMethodID:
          description: "Mandatory field: The top part &gt; Payment method ID* &gt; The unique identifier of the payment method."
          type: string
        useInAP:
          description: The top part &gt; Use for supplier &gt; A check box that indicates whether the payment method will be used in Supplier ledger.
          type: boolean
      type: object
    PaymentMethodIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    PaymentMethodQueryParameters:
      properties:
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          type: string
        lastModifiedDateTimeCondition:
          type: string
        numberToRead:
          format: int32
          type: integer
        skipRecords:
          format: int32
          type: integer
      type: object
    PaymentOrdersLinesUpdateDto:
      properties:
        appliedToOrder:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        orderNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        orderType:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    PaymentQueryParameters:
      properties:
        customer:
          description: Enter Customer
          type: string
        greaterThanValue:
          description: Enter the from-value for Ref. no.
          type: string
        invoiceRefNbr:
          description: Enter Invoice Ref Nbr
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          description: Enter field to order your records by.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        paymentNbr:
          description: Payment number
          type: string
        paymentType:
          description: Select Type
          enum:
            - Payment
            - CreditNote
            - Prepayment
            - Refund
            - VoidPayment
            - SmallBalanceWo
            - VoidRefund
            - Undefined
          type: string
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
      type: object
    PaymentUpdateDto:
      properties:
        applicationDate:
          $ref: "#/components/schemas/applicationDateInPaymentUpdateDto"
        applicationPeriod:
          $ref: "#/components/schemas/applicationPeriodInPaymentUpdateDto"
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        cashAccount:
          $ref: "#/components/schemas/cashAccountInPaymentUpdateDto"
        currency:
          $ref: "#/components/schemas/currencyInPaymentUpdateDto"
        customer:
          $ref: "#/components/schemas/customerInPaymentUpdateDto"
        hold:
          $ref: "#/components/schemas/holdInPaymentUpdateDto"
        invoiceText:
          $ref: "#/components/schemas/invoiceTextInPaymentUpdateDto"
        location:
          $ref: "#/components/schemas/locationInPaymentUpdateDto"
        ordersToApply:
          description: The top part &gt; Applied to orders &gt; The total of the orders for which payment is reserved, minus the amount transferred to invoice.
          items:
            $ref: "#/components/schemas/PaymentOrdersLinesUpdateDto"
          type: array
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        paymentAmount:
          $ref: "#/components/schemas/paymentAmountInPaymentUpdateDto"
        paymentLines:
          items:
            $ref: "#/components/schemas/PaymentLinesUpdateDto"
          type: array
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInPaymentUpdateDto"
        paymentRef:
          $ref: "#/components/schemas/paymentRefInPaymentUpdateDto"
        referenceNumber:
          $ref: "#/components/schemas/referenceNumberInPaymentUpdateDto"
        type:
          $ref: "#/components/schemas/typeInPaymentUpdateDto"
      type: object
    PeppolSchemeDto:
      properties:
        endpoint:
          description: "Seller electronic address identification scheme identifier.\r

            The identification scheme identifier of the seller electronic address."
          type: string
        partyIdentification:
          description: "Buyer identifier identification scheme identifier.\r

            The identification scheme identifier of the Buyer identifier."
          type: string
        partyLegal:
          description: "Seller legal registration identifier identification scheme identifier.\r

            The identification scheme identifier of the Seller legal registration identifier."
          type: string
      type: object
    PeppolSchemeUpdateDto:
      properties:
        endpoint:
          $ref: "#/components/schemas/DtoValueOfString"
        partyIdentification:
          $ref: "#/components/schemas/DtoValueOfString"
        partyLegal:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    PostingClassDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    PrebookSupplierInvoiceActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    PriceClassDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    PriceManagerDto:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    ProjectAccountGroupDto:
      properties:
        accountGroupId:
          description: The unique identifier of the account group.
          type: string
        active:
          description: A check box that indicates that the account group is active.
          type: boolean
        description:
          description: An alphanumeric string that describes the account group.
          type: string
        errorInfo:
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
      type: object
    ProjectBasicDto:
      description: This class represents a Project (light weight) in ProjectBasicController. Used for getting data.
      properties:
        autoAllocate:
          description: Summary tab &gt; Invoicing and allocation settings section &gt; Run allocation when you release project transactions &gt; A check box that indicates (if selected) that allocation is run automatically during the release of the documents associated with this project.
          type: boolean
        automaticReleaseAr:
          description: Summary tab &gt; Invoicing and allocation settings section &gt; Automatically release customer documents &gt; A check box that indicates (if selected) that invoice documents are released automatically after the project invoicing is completed.
          type: boolean
        customer:
          $ref: "#/components/schemas/customerInProjectBasicDto"
        description:
          description: "Mandatory field: The top part &gt; Description* &gt; The description of the project."
          type: string
        endDate:
          description: Summary tab &gt; Project properties section &gt; End date &gt; The date when the project is expected to end.
          format: date-time
          type: string
        errorInfo:
          type: string
        hold:
          description: The top part &gt; Hold &gt; A check box that you select to indicate that the project should have the In planning status.
          type: boolean
        internalID:
          format: int32
          type: integer
        lastModifiedDateTime:
          description: Systemgenerated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        projectID:
          description: "Mandatory field: The top part &gt; Project ID* &gt; The unique ID for the project."
          type: string
        publicId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        startDate:
          description: "Mandatory field: Summary tab &gt; Project properties section &gt; Start date* &gt; The date when the project starts."
          format: date-time
          type: string
        status:
          description: "The top part &gt; Status &gt; The status of the project, which can be one of the following options: In planning, Active, Completed, Suspended, Cancelled."
          enum:
            - Planned
            - Active
            - Completed
            - Cancelled
            - OnHold
            - PendingApproval
          type: string
        visibility:
          $ref: "#/components/schemas/visibilityInProjectBasicDto"
      type: object
    ProjectBasicQueryParameters:
      properties:
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        description:
          description: Project name/description
          type: string
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        nonProject:
          description: Set to true to return the non-project.
          type: boolean
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        projectId:
          description: Identifies the Project
          type: string
        projectIdDesc:
          description: Identifies the Project by ID and description
          type: string
        publicId:
          description: Identifies the Project by its publicId
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        restrictedEmployee:
          description: Id of the employee where access restrictions apply
          type: string
        restrictedUser:
          description: Id of the odp user where access restrictions apply
          format: int64
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        startDate:
          description: Project's start date
          format: date-time
          type: string
        status:
          description: Select project status.
          enum:
            - Planned
            - Active
            - Completed
            - Cancelled
            - OnHold
            - PendingApproval
          type: string
        visibleInAp:
          description: If the project is visible in the Supplier ledger
          type: boolean
        visibleInAr:
          description: If the project is visible in the Customer ledger
          type: boolean
        visibleInCa:
          description: If the project is visible in the Cash management workspace
          type: boolean
        visibleInCr:
          description: If the project is visible in the CRM workspace
          type: boolean
        visibleInEa:
          description: If the project is visible in the Expense workspace
          type: boolean
        visibleInGl:
          description: If the project is visible in the General ledger workspace
          type: boolean
        visibleInIn:
          description: If the project is visible in the Inventory workspace
          type: boolean
        visibleInPo:
          description: If the project is visible in the Purchases workspace
          type: boolean
        visibleInSo:
          description: If the project is visible in the Sales workspace
          type: boolean
        visibleInTa:
          description: If the project is visible in the Time entities workspace
          type: boolean
      type: object
    ProjectBudgetDto:
      properties:
        accountGroupID:
          type: string
        actualAmount:
          format: double
          type: number
        actualQty:
          format: double
          type: number
        committedAmount:
          format: double
          type: number
        committedInvoicedAmount:
          format: double
          type: number
        committedInvoicedQty:
          format: double
          type: number
        committedOpenAmount:
          format: double
          type: number
        committedOpenQty:
          format: double
          type: number
        committedQty:
          format: double
          type: number
        committedReceivedQty:
          format: double
          type: number
        description:
          type: string
        errorInfo:
          type: string
        inventoryNumber:
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        originalBudgetAmount:
          format: double
          type: number
        originalBudgetQty:
          format: double
          type: number
        projectID:
          type: string
        projectTaskID:
          type: string
        rate:
          format: double
          type: number
        revisedBudgetAmount:
          format: double
          type: number
        revisedBudgetQty:
          format: double
          type: number
        type:
          type: string
        uom:
          type: string
      type: object
    ProjectBudgetQueryParameters:
      properties:
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        project:
          description: Identifies the Project
          type: string
      type: object
    ProjectBudgetUpdateDto:
      properties:
        accountGroupID:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        originalBudgetAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        originalBudgetQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        projectID:
          $ref: "#/components/schemas/DtoValueOfString"
        projectTaskID:
          $ref: "#/components/schemas/DtoValueOfString"
        rate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        revisedBudgetAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        revisedBudgetQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    ProjectDto:
      description: This class represents a Project in ProjectController. Used for getting data.
      properties:
        allocationRule:
          $ref: "#/components/schemas/allocationRuleInProjectDto"
        assets:
          description: The top part &gt; Assest &gt; The actual assets for the project.
          format: double
          type: number
        attributes:
          description: Attributes tab &gt;
          items:
            $ref: "#/components/schemas/AttributeIdValueDto"
          type: array
        autoAllocate:
          description: Summary tab &gt; Invoicing and allocation settings section &gt; Run allocation when you release project transactions &gt; A check box that indicates (if selected) that allocation is run automatically during the release of the documents associated with this project.
          type: boolean
        automaticReleaseAr:
          description: Summary tab &gt; Invoicing and allocation settings section &gt; Automatically release customer documents &gt; A check box that indicates (if selected) that invoice documents are released automatically after the project invoicing is completed.
          type: boolean
        billingPeriod:
          description: "Summary tab &gt; Invoicing and allocation settings section &gt; Invoicing period &gt; The frequency of invoicing, which can be one of the following options: Week, Month, Quarter, Year, On demand."
          enum:
            - Weekly
            - Monthly
            - Quarterly
            - Annual
            - OnDemand
          type: string
        billingRule:
          $ref: "#/components/schemas/billingRuleInProjectDto"
        customer:
          $ref: "#/components/schemas/customerInProjectDto"
        customerLocation:
          $ref: "#/components/schemas/customerLocationInProjectDto"
        defAccount:
          $ref: "#/components/schemas/defAccountInProjectDto"
        defAccrualAccount:
          $ref: "#/components/schemas/defAccrualAccountInProjectDto"
        defAccrualSub:
          $ref: "#/components/schemas/defAccrualSubInProjectDto"
        defSub:
          $ref: "#/components/schemas/defSubInProjectDto"
        description:
          description: "Mandatory field: The top part &gt; Description* &gt; The description of the project."
          type: string
        employees:
          description: The Employees tab &gt; Information in this tab is retreived from EP203000 (Employees)
          items:
            $ref: "#/components/schemas/EmployeeDto"
          type: array
        endDate:
          description: Summary tab &gt; Project properties section &gt; End date &gt; The date when the project is expected to end.
          format: date-time
          type: string
        errorInfo:
          type: string
        expenses:
          description: The top part &gt; Expenses &gt; The total of the current expenses incurred by the project.
          format: double
          type: number
        hold:
          description: The top part &gt; Hold &gt; A check box that you select to indicate that the project should have the In planning status.
          type: boolean
        income:
          description: The top part &gt; Income &gt; The income expected from the project.
          format: double
          type: number
        internalID:
          format: int32
          type: integer
        lastBillingDate:
          description: Summary tab &gt; Invoicing and allocation settings section &gt; Last invoicing date &gt; The date when the latest invoicing was performed for the project.
          format: date-time
          type: string
        lastModifiedDateTime:
          description: System generated information
          format: date-time
          type: string
        liability:
          description: The top part &gt; Liabilities &gt; The actual liabilities for the project.
          format: double
          type: number
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        nextBillingDate:
          description: Summary tab &gt; Invoicing and allocation settings section &gt; Next invoicing date &gt; The date for which the next invoicing is scheduled for the project.
          format: date-time
          type: string
        projectID:
          description: "Mandatory field: The top part &gt; Project ID* &gt; The unique ID for the project."
          type: string
        projectManager:
          $ref: "#/components/schemas/projectManagerInProjectDto"
        publicId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        rateTable:
          $ref: "#/components/schemas/rateTableInProjectDto"
        restrictEmployees:
          description: Summary tab &gt; Project properties section &gt; Restrict employees &gt; A check box that indicates (if selected) that only the employees listed on the Employees tab of this window can create activities and documents associated with the current project.
          type: boolean
        restrictEquipment:
          type: boolean
        startDate:
          description: "Mandatory field: Summary tab &gt; Project properties section &gt; Start date* &gt; The date when the project starts."
          format: date-time
          type: string
        status:
          description: "The top part &gt; Status &gt; The status of the project, which can be one of the following options: In planning, Active, Completed, Suspended, Cancelled."
          enum:
            - Planned
            - Active
            - Completed
            - Cancelled
            - OnHold
            - PendingApproval
          type: string
        systemTemplate:
          type: boolean
        tasks:
          description: Tasks tab &gt;
          items:
            $ref: "#/components/schemas/TaskDto"
          type: array
        template:
          $ref: "#/components/schemas/templateInProjectDto"
        visibility:
          $ref: "#/components/schemas/visibilityInProjectDto"
      type: object
    ProjectEmployeeUpdateDto:
      properties:
        employeeId:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
      type: object
    ProjectIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    ProjectQueryParameters:
      properties:
        attributes:
          description: Identifies the attributes
          type: string
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        expandAttribute:
          description: Expands project atributes
          type: boolean
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        nonProject:
          description: Set to true to return the non-project.
          type: boolean
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        publicId:
          description: Identifies the Project by its publicId
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        restrictedEmployee:
          description: ID of the employee where access restrictions apply
          type: string
        restrictedUser:
          description: Id of the odp user where access restrictions apply
          format: int64
          type: integer
        startDate:
          description: Project’s start date
          format: date-time
          type: string
        status:
          description: Use drop down and select Status.
          enum:
            - Planned
            - Active
            - Completed
            - Cancelled
            - OnHold
            - PendingApproval
          type: string
        systemTemplate:
          description: If the project is a template
          type: boolean
        taskStatus:
          description: Use drop down and select Status.
          enum:
            - Planned
            - Active
            - Cancelled
            - Canceled
            - Completed
          type: string
        taskVisibleInAp:
          description: If the project task is visible in the Supplier ledger
          type: boolean
        taskVisibleInAr:
          description: If the project task is visible in the Customer ledger
          type: boolean
        taskVisibleInCa:
          description: If the project task is visible in the Cash management workspace
          type: boolean
        taskVisibleInCr:
          description: If the project task is visible in the CRM workspace
          type: boolean
        taskVisibleInEa:
          description: If the project task is visible in the Expense workspace
          type: boolean
        taskVisibleInGl:
          description: If the project task is visible in the General ledger workspace
          type: boolean
        taskVisibleInIn:
          description: If the project task is visible in the Inventory workspace
          type: boolean
        taskVisibleInPo:
          description: If the project task is visible in the Purchases workspace
          type: boolean
        taskVisibleInSo:
          description: If the project task is visible in the Sales workspace
          type: boolean
        taskVisibleInTa:
          description: If the project task is visible in the Time entities workspace
          type: boolean
        visibleInAP:
          description: If the project is visible in AP
          type: boolean
      type: object
    ProjectTaskIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    ProjectTaskUpdateDto:
      properties:
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        employees:
          items:
            $ref: "#/components/schemas/TaskEmployeeUpdateDto"
          type: array
        plannedEnd:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        plannedStart:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        rateTable:
          $ref: "#/components/schemas/DtoValueOfString"
        restrictEmployees:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        startDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        status:
          $ref: "#/components/schemas/DtoValueOfNullableOfProjTaskStatus"
        taskId:
          $ref: "#/components/schemas/DtoValueOfString"
        visibility:
          $ref: "#/components/schemas/VisibilityUpdateDto"
      type: object
    ProjectTransactionDocumentDto:
      properties:
        description:
          description: The top part &gt; Description &gt; The description provided for the transaction.
          type: string
        errorInfo:
          type: string
        lines:
          description: The table &gt;
          items:
            $ref: "#/components/schemas/ProjectTransactionLineDto"
          type: array
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        module:
          description: The top part &gt; Module &gt; The module you create the transactions in.
          enum:
            - ModuleGL
            - ModuleAP
            - ModuleAR
            - ModuleCA
            - ModuleCM
            - ModuleIN
            - ModuleSO
            - ModulePO
            - ModuleDR
            - ModuleFA
            - ModuleEP
            - ModulePM
            - ModuleTX
            - ModuleCR
          type: string
        note:
          type: string
        origDocNbr:
          description: The top part &gt; Orig. doc. no. &gt; The reference number of the underlying document for the transaction.
          type: string
        origDocType:
          description: "The top part &gt; Orig. doc. no. &gt; The type of the document the transaction is based on. It has one of the following values: Allocation, Time card, Case, Expense claim, Allocation reversal, Reversal, Credit note."
          enum:
            - Allocation
            - Timecard
            - Case
            - ExpenseClaim
            - EquipmentTimecard
            - AllocationReversal
            - Reversal
            - CreditMemo
            - UnbilledRemainder
            - ProformaBilling
          type: string
        refNbr:
          description: The top part &gt; Ref. no. &gt; The reference number of the transaction.
          type: string
        status:
          description: "The top part &gt; Status &gt; The status of the transaction. The following statuses are possible: Balanced, Released."
          enum:
            - Hold
            - Balanced
            - Released
          type: string
      type: object
    ProjectTransactionDocumentUpdateDto:
      properties:
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        lines:
          items:
            $ref: "#/components/schemas/ProjectTransactionLineUpdateDto"
          type: array
        module:
          $ref: "#/components/schemas/DtoValueOfNullableOfJournalTransactionModule"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        refNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        status:
          $ref: "#/components/schemas/DtoValueOfNullableOfProjectTransactionStatus"
      type: object
    ProjectTransactionLineDto:
      properties:
        accountGroup:
          $ref: "#/components/schemas/accountGroupInProjectTransactionLineDto"
        allocated:
          description: Allocated &gt; A check box that indicates whether the amounts of the transactions were allocated for the project.
          type: boolean
        amount:
          description: Amount &gt; The amount of the transaction.
          format: double
          type: number
        batchNbr:
          description: Batch no. &gt; The batch number of the transaction in the General ledger workspace.
          type: string
        billable:
          description: Invoiceable &gt; A check box indicating whether the transaction is used in calculating the amount charged to the customer for the project task.
          type: boolean
        billableQuantity:
          description: Qty. that can be invoiced &gt; The total invoiceable quantity for the transactions listed in the table.
          format: double
          type: number
        branch:
          $ref: "#/components/schemas/branchInProjectTransactionLineDto"
        creditAccount:
          $ref: "#/components/schemas/creditAccountInProjectTransactionLineDto"
        creditAccountGroup:
          $ref: "#/components/schemas/creditAccountGroupInProjectTransactionLineDto"
        creditSubaccount:
          $ref: "#/components/schemas/creditSubaccountInProjectTransactionLineDto"
        customerVendor:
          $ref: "#/components/schemas/customerVendorInProjectTransactionLineDto"
        date:
          description: Date &gt; The date the transaction was created.
          format: date-time
          type: string
        debitAccount:
          $ref: "#/components/schemas/debitAccountInProjectTransactionLineDto"
        debitAccountGroup:
          $ref: "#/components/schemas/debitAccountGroupInProjectTransactionLineDto"
        debitSubaccount:
          $ref: "#/components/schemas/debitSubaccountInProjectTransactionLineDto"
        description:
          description: Description &gt; The description of the transaction.
          type: string
        earningType:
          $ref: "#/components/schemas/earningTypeInProjectTransactionLineDto"
        employee:
          $ref: "#/components/schemas/employeeInProjectTransactionLineDto"
        endDate:
          description: End date &gt; The end date for this transaction
          format: date-time
          type: string
        errorInfo:
          type: string
        financialPeriod:
          description: Period &gt; The financial period associated with the transaction.
          type: string
        inventoryId:
          $ref: "#/components/schemas/inventoryIdInProjectTransactionLineDto"
        lastModifiedDateTime:
          description: System generated information
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInProjectTransactionLineDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          type: string
        overtimeMultiplier:
          description: Multiplier &gt; The multiplier by which the unit rate is multiplied when the labour cost is calculated.
          format: double
          type: number
        project:
          $ref: "#/components/schemas/projectInProjectTransactionLineDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInProjectTransactionLineDto"
        quantity:
          description: Quantity &gt; 	The quantity for the transaction, such as the number of service hours provided to the customer.
          format: double
          type: number
        released:
          description: Released &gt; A check box indicating whether the transaction has been released.
          type: boolean
        startDate:
          description: Start date &gt; The start date for this transaction.
          format: date-time
          type: string
        tranId:
          format: int64
          type: integer
        unitRate:
          description: Unit rate &gt; The price of the item or the rate of the service.
          format: double
          type: number
        uom:
          description: UoM &gt; The unit of measure used to estimate the quantity for the transaction, such as HOUR or BOX.
          type: string
        useBillableQty:
          description: Use the quantity that can be invoiced in the amount formula &gt; A check box that you select if you want the system to use the invoiceable quantity (the Invoiceable quantity column) instead of the overall quantity (the Quantity column) of the transaction when calculating the amount of transaction.
          type: boolean
      type: object
    ProjectTransactionLineUpdateDto:
      properties:
        accountGroup:
          $ref: "#/components/schemas/DtoValueOfString"
        amount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        batchNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        billable:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        billableQuantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        creditAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        creditSubaccount:
          $ref: "#/components/schemas/DtoValueOfString"
        customerVendor:
          $ref: "#/components/schemas/DtoValueOfString"
        date:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        debitAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        debitSubaccount:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        employee:
          $ref: "#/components/schemas/DtoValueOfString"
        financialPeriod:
          $ref: "#/components/schemas/DtoValueOfString"
        inventoryId:
          $ref: "#/components/schemas/DtoValueOfString"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        project:
          $ref: "#/components/schemas/DtoValueOfString"
        projectTask:
          $ref: "#/components/schemas/DtoValueOfString"
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        tranId:
          $ref: "#/components/schemas/DtoValueOfInt64"
        unitRate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        useBillableQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
      type: object
    ProjectTransactionQueryParameters:
      properties:
        billable:
          description: Filter invoiceable project tasks.
          type: boolean
        branch:
          description: Filter on branch for the project transation.
          type: string
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        date:
          description: Filter on the registration date for the project transaction.
          format: date-time
          type: string
        expandNote:
          description: Expands project transaction notes
          type: boolean
        fromPeriod:
          description: Mandatory. Start date for the task.
          type: string
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        module:
          description: Select to filter on module; e.g. AR, AP, IN etc.
          enum:
            - ModuleGL
            - ModuleAP
            - ModuleAR
            - ModuleCA
            - ModuleCM
            - ModuleIN
            - ModuleSO
            - ModulePO
            - ModuleDR
            - ModuleFA
            - ModuleEP
            - ModulePM
            - ModuleTX
            - ModuleCR
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        project:
          description: Filter on project ID.
          type: string
        projectTask:
          description: Filter on Task ID.
          type: string
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          description: The status of the document.
          enum:
            - Hold
            - Balanced
            - Released
          type: string
        toPeriod:
          description: Mandatory. End date for the task.
          type: string
      type: object
    ProjectUpdateDto:
      description: This class represent a Project in Project Controller. Used to pass data to server for creating or updating an project
      properties:
        allocationRule:
          $ref: "#/components/schemas/DtoValueOfString"
        autoAllocate:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        automaticReleaseArDoc:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        billingPeriod:
          $ref: "#/components/schemas/DtoValueOfNullableOfBillingPeriod"
        billingRule:
          $ref: "#/components/schemas/DtoValueOfString"
        customer:
          $ref: "#/components/schemas/DtoValueOfString"
        customerLocation:
          $ref: "#/components/schemas/DtoValueOfString"
        defAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        defAccrualAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        defAccrualSub:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        defSub:
          description: Mandatory field when Project Template is not specified.
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        description:
          $ref: "#/components/schemas/descriptionInProjectUpdateDto"
        employees:
          items:
            $ref: "#/components/schemas/ProjectEmployeeUpdateDto"
          type: array
        endDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        hold:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        internalID:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        projectID:
          $ref: "#/components/schemas/DtoValueOfString"
        projectManagerInternalId:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        projectManger:
          $ref: "#/components/schemas/DtoValueOfString"
        rateTable:
          $ref: "#/components/schemas/DtoValueOfString"
        restricEmployees:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        restricEquipment:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        startDate:
          $ref: "#/components/schemas/startDateInProjectUpdateDto"
        status:
          $ref: "#/components/schemas/DtoValueOfNullableOfProjectStatus"
        tasks:
          items:
            $ref: "#/components/schemas/TaskUpdateDto"
          type: array
        template:
          $ref: "#/components/schemas/DtoValueOfString"
        visibility:
          $ref: "#/components/schemas/VisibilityUpdateDto"
      required:
        - description
        - startDate
      type: object
    PromoCodeIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    PropertyTaxDto:
      properties:
        description:
          description: The description of the property tax group of this fixed asset
          type: string
        propertyTaxID:
          description: The property tax group id of this fixed asset
          type: string
      type: object
    PurchaseOrderAddressDto:
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInPurchaseOrderAddressDto"
        county:
          $ref: "#/components/schemas/countyInPurchaseOrderAddressDto"
        overrideAddress:
          description: The Supplier info tab &gt; The Supplier address section &gt; Override &gt; A check box that you select to override (that is, to edit ) the default shipping address for the supplier.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
      type: object
    PurchaseOrderAddressUpdateDto:
      properties:
        addressLine1:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine2:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine3:
          $ref: "#/components/schemas/DtoValueOfString"
        city:
          $ref: "#/components/schemas/DtoValueOfString"
        countryId:
          $ref: "#/components/schemas/DtoValueOfString"
        county:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideAddress:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        postalCode:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    PurchaseOrderBasicDto:
      description: This class represents a Purchase Order in PurchaseOrderController. Used for getting data.
      properties:
        branch:
          $ref: "#/components/schemas/branchInPurchaseOrderBasicDto"
        controlTotal:
          description: The top part &gt; Control total &gt; The order's total amount (including VAT), which you must enter manually when you attempt to save the order with the Balanced status.
          format: double
          type: number
        controlTotalInBaseCurrency:
          description: The top part &gt; View base &gt; A button that recalculates the Control total to your base currency if the amount on the purchase order is in another currency then base currency. When you click the button, the button toggles to View currency.
          format: double
          type: number
        currency:
          description: The top part &gt; Currency &gt; The currency the purchase order will be paid in.
          type: string
        date:
          description: "Mandatory field: The top part &gt; Date* &gt; The date when the purchase order was created."
          format: date-time
          type: string
        description:
          description: The top part &gt; Description &gt; A brief description of the purchase order.
          type: string
        errorInfo:
          type: string
        exchangeRate:
          format: double
          type: number
        hold:
          description: The top part &gt; Hold &gt; A check box that you select to give the purchase order the On hold status.
          type: boolean
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        lineTotal:
          description: The top part &gt; Line total &gt; The total sum of the Extended amount entries for all lines in the current purchase order. This value is calculated by the system and users cannot manually change it.
          format: double
          type: number
        lineTotalInBaseCurrency:
          description: The top part &gt; View base &gt; A button that recalculates the Line total to your base currency if the amount on the purchase order is in another currency then base currency. When you click the button, the button toggles to View currency.
          format: double
          type: number
        lines:
          description: Document details tab &gt; The table &gt;
          items:
            $ref: "#/components/schemas/PurchaseOrderLineDto"
          type: array
        location:
          $ref: "#/components/schemas/locationInPurchaseOrderBasicDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the document.
          type: string
        orderNbr:
          description: The top part &gt; Order no. &gt; The unique reference number of the purchase order, which the system assigns based on the number series assigned to purchase orders of this type, as specified in the PO101000 window.
          type: string
        orderTotal:
          description: The Top part &gt; Order total &gt; The total sum for the purchase order, including VAT. This read-only value is the sum of the Line total and VAT total values.
          format: double
          type: number
        orderTotalInBaseCurrency:
          description: The top part &gt; View base &gt; A button that recalculates the Order total to your base currency if the amount on the purchase order is in another currency then base currency. When you click the button, the button toggles to View currency.
          format: double
          type: number
        orderType:
          description: "The top part &gt; Type &gt; The type of the purchase order, which can be one of these options: Normal, Drop-ship, Blanket, Default"
          enum:
            - RegularOrder
            - DropShip
            - Blanket
            - StandardBlanket
          type: string
        owner:
          $ref: "#/components/schemas/ownerInPurchaseOrderBasicDto"
        promisedOn:
          description: The top part &gt; Delivery date &gt; The date when the supplier promised that the items listed in the order will be received at their destination location.
          format: date-time
          type: string
        purchaseReceipts:
          description: Purchase receipts tab &gt;
          items:
            $ref: "#/components/schemas/PurchaseReceiptsDto"
          type: array
        status:
          description: "The top part &gt; Status &gt; The system-generated status of the purchase order, which can be one of the following options: On hold, Open, Pending approval, Rejected, Pending printing, Pending e-mail, Closed, Cancelled."
          enum:
            - Balanced
            - Cancelled
            - Closed
            - Hold
            - Open
            - PendingEmail
            - PendingPrint
            - Printed
            - Voided
          type: string
        supplier:
          $ref: "#/components/schemas/supplierInPurchaseOrderBasicDto"
        supplierRef:
          description: The top part &gt; Supplier ref. &gt; The reference number of the supplier document related to this purchase order.
          type: string
        taxDetails:
          description: VAT details tab &gt;
          items:
            $ref: "#/components/schemas/TaxDetailDto"
          type: array
        taxTotal:
          description: The Top part &gt; VAT total &gt; The total VAT amount for all lines added to the current purchase order. This value, also calculated by the system, is the sum of the VAT amounts for each line.
          format: double
          type: number
        taxTotalInBaseCurrency:
          description: The top part &gt; View base &gt; A button that recalculates the VAT total to your base currency if the amount on the purchase order is in another currency then base currency. When you click the button, the button toggles to View currency.
          format: double
          type: number
        vatExemptTotal:
          description: The Top part &gt; VAT exempt total &gt; The document total that is exempt from VAT. This total is calculated as the taxable amount for the VAT with the Include in VAT exempt total check box selected in the TX205000 window.
          format: double
          type: number
        vatExemptTotalInBaseCurrency:
          description: The top part &gt; View base &gt; A button that recalculates the VAT exempt total to your base currency if the amount on the purchase order is in another currency then base currency. When you click the button, the button toggles to View currency.
          format: double
          type: number
      type: object
    PurchaseOrderBasicUpdateDto:
      description: "This class represent a Purchase Order in Purchase Order Controller. Used to pass data to server for creating or updating an order\r

        Supplier is mandatory to create Purchase Order, customer can be identified by Supplier, GLN or VatRegistrationId"
      properties:
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        changeDatesOnLines:
          type: boolean
        controlTotal:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        date:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        exchangeRate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        gln:
          $ref: "#/components/schemas/glnInPurchaseOrderBasicUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        lines:
          items:
            $ref: "#/components/schemas/PurchaseOrderLineUpdateDto"
          type: array
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        orderNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        orderType:
          $ref: "#/components/schemas/DtoValueOfNullableOfPurchaseOrderType"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        owner:
          $ref: "#/components/schemas/DtoValueOfNullableOfGuid"
        promisedOn:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        supplier:
          $ref: "#/components/schemas/supplierInPurchaseOrderBasicUpdateDto"
        supplierRef:
          $ref: "#/components/schemas/DtoValueOfString"
        vatRegistrationId:
          $ref: "#/components/schemas/vatRegistrationIdInPurchaseOrderBasicUpdateDto"
      type: object
    PurchaseOrderContactDto:
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        overrideContact:
          description: The Supplier information tab &gt; The Supplier contact section &gt; Override &gt; A check box that you select to override (edit) the default contact settings for the supplier.
          type: boolean
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
      type: object
    PurchaseOrderContactUpdateDto:
      properties:
        attention:
          $ref: "#/components/schemas/DtoValueOfString"
        email:
          $ref: "#/components/schemas/DtoValueOfString"
        fax:
          $ref: "#/components/schemas/DtoValueOfString"
        name:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideContact:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        phone1:
          $ref: "#/components/schemas/DtoValueOfString"
        phone2:
          $ref: "#/components/schemas/DtoValueOfString"
        web:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    PurchaseOrderDto:
      description: This class represents a Purchase Order in PurchaseOrderController. Used for getting data.
      properties:
        branch:
          $ref: "#/components/schemas/branchInPurchaseOrderDto"
        controlTotal:
          description: The top part &gt; Control total &gt; The order's total amount (including VAT), which you must enter manually when you attempt to save the order with the Balanced status.
          format: double
          type: number
        controlTotalInBaseCurrency:
          description: The top part &gt; View base &gt; A button that recalculates the Control total to your base currency if the amount on the purchase order is in another currency then base currency. When you click the button, the button toggles to View currency.
          format: double
          type: number
        currency:
          description: The top part &gt; Currency &gt; The currency the purchase order will be paid in.
          type: string
        date:
          description: "Mandatory field: The top part &gt; Date* &gt; The date when the purchase order was created."
          format: date-time
          type: string
        description:
          description: The top part &gt; Description &gt; A brief description of the purchase order.
          type: string
        discountDetails:
          description: Discount details tab &gt;
          items:
            $ref: "#/components/schemas/DiscountDetailDto"
          type: array
        dontEmail:
          description: Other information &gt; Do not email &gt; A check box that indicates (if selected) indicates that the purchase order should not be emailed.
          type: boolean
        dontPrint:
          description: Other information &gt; Do not print &gt; A check box that indicates (if selected) that the current purchase order should not be printed.
          type: boolean
        emailed:
          description: Other information &gt; Emailed &gt; A check box that indicates (if selected) indicates that the current purchase order was emailed.
          type: boolean
        errorInfo:
          type: string
        exchangeRate:
          format: double
          type: number
        fobPoint:
          description: Delivery instructions tab &gt; The Delivery instructions section &gt; FOB point &gt; The FOB point where the title of goods (listed on this purchase order) is transferred from the supplier to the company.
          type: string
        hold:
          description: The top part &gt; Hold &gt; A check box that you select to give the purchase order the On hold status.
          type: boolean
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        lineTotal:
          description: The top part &gt; Line total &gt; The total sum of the Extended amount entries for all lines in the current purchase order. This value is calculated by the system and users cannot manually change it.
          format: double
          type: number
        lineTotalInBaseCurrency:
          description: The top part &gt; View base &gt; A button that recalculates the Line total to your base currency if the amount on the purchase order is in another currency then base currency. When you click the button, the button toggles to View currency.
          format: double
          type: number
        lines:
          description: Document details tab &gt; The table &gt;
          items:
            $ref: "#/components/schemas/PurchaseOrderLineDto"
          type: array
        location:
          $ref: "#/components/schemas/locationInPurchaseOrderDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the document.
          type: string
        openBalance:
          description: Other information &gt; Open amount &gt; The amount of these items that are ordered but not received.
          format: double
          type: number
        openQuantity:
          description: Other information &gt; Open Quantity &gt; The difference between the quantities of ordered and received items.
          format: double
          type: number
        orderNbr:
          description: The top part &gt; Order no. &gt; The unique reference number of the purchase order, which the system assigns based on the number series assigned to purchase orders of this type, as specified in the PO101000 window.
          type: string
        orderTotal:
          description: The Top part &gt; Order total &gt; The total sum for the purchase order, including VAT. This read-only value is the sum of the Line total and VAT total values.
          format: double
          type: number
        orderTotalInBaseCurrency:
          description: The top part &gt; View base &gt; A button that recalculates the Order total to your base currency if the amount on the purchase order is in another currency then base currency. When you click the button, the button toggles to View currency.
          format: double
          type: number
        orderType:
          description: "The top part &gt; Type &gt; The type of the purchase order, which can be one of these options: Normal, Drop-ship, Blanket, Default"
          enum:
            - RegularOrder
            - DropShip
            - Blanket
            - StandardBlanket
          type: string
        owner:
          $ref: "#/components/schemas/ownerInPurchaseOrderDto"
        paymentRefNbr:
          description: Other information tab &gt; Prepayment ref. no. &gt; The reference number of the prepayment request linked to this purchase order, if any.
          type: string
        printed:
          description: Other information &gt; Printed &gt; A check box that indicates (if selected) that the current purchase order was printed.
          type: boolean
        promisedOn:
          description: The top part &gt; Delivery date &gt; The date when the supplier promised that the items listed in the order will be received at their destination location.
          format: date-time
          type: string
        purchaseReceipts:
          description: Purchase receipts tab &gt;
          items:
            $ref: "#/components/schemas/PurchaseReceiptsDto"
          type: array
        remitAddress:
          $ref: "#/components/schemas/remitAddressInPurchaseOrderDto"
        remitContact:
          $ref: "#/components/schemas/remitContactInPurchaseOrderDto"
        requisitionRefNbr:
          description: Other information tab &gt; Requisition ref. no. &gt; The reference number of the requisition document associated with the purchase order, if any.
          type: string
        salesOrderNbr:
          description: Other information tab &gt; Sales order no. &gt; The ID of the sales order associated with the purchase order.
          type: string
        salesOrderType:
          description: Other information tab &gt; Sales order type &gt; The type of the sales order associated with the purchase order.
          type: string
        shipTerms:
          description: Delivery instructions tab &gt; The Delivery instructions section &gt; Shipping terms &gt; The shipping terms for the purchase order.
          type: string
        shipTo:
          $ref: "#/components/schemas/shipToInPurchaseOrderDto"
        shipVia:
          description: Delivery instructions tab &gt; The Delivery instructions section &gt; Ship via &gt; The carrier selected to ship the goods for the purchase order.
          type: string
        shippingAddress:
          $ref: "#/components/schemas/shippingAddressInPurchaseOrderDto"
        shippingContact:
          $ref: "#/components/schemas/shippingContactInPurchaseOrderDto"
        shippingDestinationType:
          description: "Shipping instructions tab &gt; The Delivery address section &gt; Shipping destination type &gt; The type of the shipping destination, which is one of the following options: Branch location (meaning a branch of your company), Customer, Supplier, and Warehouse."
          enum:
            - CompanyLocation
            - Customer
            - Vendor
            - Site
          type: string
        shippingLocation:
          $ref: "#/components/schemas/shippingLocationInPurchaseOrderDto"
        status:
          description: "The top part &gt; Status &gt; The system-generated status of the purchase order, which can be one of the following options: On hold, Open, Pending approval, Rejected, Pending printing, Pending e-mail, Closed, Cancelled."
          enum:
            - Balanced
            - Cancelled
            - Closed
            - Hold
            - Open
            - PendingEmail
            - PendingPrint
            - Printed
            - Voided
          type: string
        supplier:
          $ref: "#/components/schemas/supplierInPurchaseOrderDto"
        supplierRef:
          description: The top part &gt; Supplier ref. &gt; The reference number of the supplier document related to this purchase order.
          type: string
        supplierVatZone:
          $ref: "#/components/schemas/supplierVatZoneInPurchaseOrderDto"
        taxDetails:
          description: VAT details tab &gt;
          items:
            $ref: "#/components/schemas/TaxDetailDto"
          type: array
        taxTotal:
          description: The Top part &gt; VAT total &gt; The total VAT amount for all lines added to the current purchase order. This value, also calculated by the system, is the sum of the VAT amounts for each line.
          format: double
          type: number
        taxTotalInBaseCurrency:
          description: The top part &gt; View base &gt; A button that recalculates the VAT total to your base currency if the amount on the purchase order is in another currency then base currency. When you click the button, the button toggles to View currency.
          format: double
          type: number
        terms:
          $ref: "#/components/schemas/termsInPurchaseOrderDto"
        vatExemptTotal:
          description: The Top part &gt; VAT exempt total &gt; The document total that is exempt from VAT. This total is calculated as the taxable amount for the VAT with the Include in VAT exempt total check box selected in the TX205000 window.
          format: double
          type: number
        vatExemptTotalInBaseCurrency:
          description: The top part &gt; View base &gt; A button that recalculates the VAT exempt total to your base currency if the amount on the purchase order is in another currency then base currency. When you click the button, the button toggles to View currency.
          format: double
          type: number
        warehouse:
          $ref: "#/components/schemas/warehouseInPurchaseOrderDto"
        workgroupID:
          description: Other information tab &gt; Work group ID &gt; The work group to which the purchase order was assigned for processing.
          format: int32
          type: integer
      type: object
    PurchaseOrderLineDto:
      description: This class represents a Purchase Order Line in PurchaseOrderController. Used for getting data.
      properties:
        account:
          $ref: "#/components/schemas/accountInPurchaseOrderLineDto"
        alternateId:
          description: Alternate ID &gt; The alternate ID used for this stock item-subitem pair by the supplier.
          type: string
        amount:
          description: Amount &gt; The amount calculated (after the discount has been taken) for the item.
          format: double
          type: number
        branch:
          $ref: "#/components/schemas/branchInPurchaseOrderLineDto"
        canceled:
          description: Cancelled &gt; A check box that indicates (if selected) that this line of the purchase order has been cancelled.
          type: boolean
        completeOn:
          description: Complete on (%) &gt; The minimum percentage of the ordered quantity for the stock item that must be received to complete the purchase order line (gets the default value from the Threshold receipt (%) setting of the supplier in the (AP303000) window).
          format: double
          type: number
        completed:
          description: Completed &gt; A check box that indicates (if selected) that the purchasing of the item requested by this line of the purchase order has been completed.
          type: boolean
        discountAmount:
          description: Discount amount &gt; If the Supplier customer discounts functionality is enabled in the Enable/disable functionalities (CS100000) window, the amount of the discount that has been specified manually or calculated based on the discount percent entered manually.
          format: double
          type: number
        discountCode:
          $ref: "#/components/schemas/discountCodeInPurchaseOrderLineDto"
        discountPercent:
          description: Discount percent &gt; If the Supplier customer discounts functionality is enabled in the Enable/disable functionalities (CS100000) window, the percent of the discount that has been entered manually or calculated based on the discount amount entered manually for this line item.
          format: double
          type: number
        extCost:
          description: Ext. cost &gt; The extended cost of the item, which is the unit cost multiplied by the quantity.
          format: double
          type: number
        inventory:
          $ref: "#/components/schemas/inventoryInPurchaseOrderLineDto"
        lineDescription:
          description: A description of the order line, which is copied from the item's description.
          type: string
        lineNbr:
          description: The line number
          format: int32
          type: integer
        lineType:
          description: "Line type &gt; \tThe type of the order line, which can be one of the following options: Goods for inventory, Non-stock, Service, Freight, Good for sales order, Non-stock for drop-ship, Drop-ship, Goods for RP, Description."
          enum:
            - GoodsForInventory
            - GoodsForSalesOrder
            - GoodsForReplenishment
            - GoodsForDropShip
            - NonStockForDropShip
            - NonStockForSalesOrder
            - NonStock
            - Service
            - Freight
            - Description
          type: string
        manualDiscount:
          description: Manual discount &gt; A check box that indicates (if selected) that the discount has been applied manually.
          type: boolean
        maxReceipt:
          description: Max. receipt (%) &gt; The maximum quantity of the item, expressed as a percentage of the ordered quantity, that is required for the item to be accepted at the warehouse if the Receipt action is Rejected.
          format: double
          type: number
        minReceipt:
          description: Min. receipt (%) &gt; The minimum quantity of the item, expressed as a percentage of the ordered quantity, that is required for the item to be accepted at the warehouse if the Receipt action is Rejected.
          format: double
          type: number
        note:
          description: Table &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected to the order.
          type: string
        orderNumber:
          description: Order no. &gt; 	The reference number of the blanket or standard order (for normal orders based on blanket or standard orders).
          type: string
        orderQty:
          description: Order qty. &gt; The quantity of the item that has been ordered.
          format: double
          type: number
        orderType:
          description: Order type &gt; The order type this order is related to (for normal orders based on blanket or standard orders).
          enum:
            - RegularOrder
            - DropShip
            - Blanket
            - StandardBlanket
          type: string
        project:
          $ref: "#/components/schemas/projectInPurchaseOrderLineDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInPurchaseOrderLineDto"
        promised:
          description: Promised &gt; The date when the item's deliver was promised.
          format: date-time
          type: string
        qtyOnReceipts:
          description: Qty. on receipts &gt; The quantity of the item that has been received according to all receipts, including the unreleased ones.
          format: double
          type: number
        receiptAction:
          description: "Receipt action &gt; The action that should be perform when the ordered item is received if its quantity is greater than the Max. receipt value or less than the Min. receipt value calculated based on the line's ordered quantity. Values: Reject, Accept but warn, Accept."
          enum:
            - Reject
            - AcceptButWarn
            - Accept
          type: string
        receivedAmt:
          description: Received amt. &gt; The amount received on this purchase order for this item.
          format: double
          type: number
        requested:
          description: Requested &gt; The date when the item was requested.
          format: date-time
          type: string
        sub:
          $ref: "#/components/schemas/subInPurchaseOrderLineDto"
        taxCategory:
          $ref: "#/components/schemas/taxCategoryInPurchaseOrderLineDto"
        unitCost:
          description: Unit cost &gt; The cost per UoM of the stock item.
          format: double
          type: number
        unitCostInBaseCurrency:
          description: Background calculation connected with the View base/View currency function in the top part. Changes the values in Unit cost, Amount, Disc. unit cost and Cost fields.
          format: double
          type: number
        uom:
          description: UoM &gt; The unit of measure (UoM) in which the quantity of the item is specified.
          type: string
        warehouse:
          $ref: "#/components/schemas/warehouseInPurchaseOrderLineDto"
      type: object
    PurchaseOrderLineUpdateDto:
      description: This class represent a Purchase Order Line in Purchase Order Controller. Used to pass data to server for creating or updating an order line
      properties:
        account:
          $ref: "#/components/schemas/DtoValueOfString"
        alternateId:
          $ref: "#/components/schemas/DtoValueOfString"
        amount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        completeOn:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        discountAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        discountCode:
          $ref: "#/components/schemas/DtoValueOfString"
        discountPercent:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        extCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        inventory:
          $ref: "#/components/schemas/DtoValueOfString"
        lineDescription:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        lineType:
          $ref: "#/components/schemas/DtoValueOfNullableOfPoLineType"
        manualDiscount:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        maxReceipt:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        minReceipt:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        orderQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        project:
          $ref: "#/components/schemas/DtoValueOfString"
        projectTask:
          $ref: "#/components/schemas/DtoValueOfString"
        promised:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        receiptAction:
          $ref: "#/components/schemas/DtoValueOfNullableOfPurchaseOrderReceiptAction"
        requested:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        sub:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        taxCategory:
          $ref: "#/components/schemas/DtoValueOfString"
        unitCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        warehouse:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    PurchaseOrderQueryParameters:
      properties:
        greaterThanValue:
          description: Filter on order no. and forward
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderStatus:
          description: Select and filter on Status.
          enum:
            - Balanced
            - Cancelled
            - Closed
            - Hold
            - Open
            - PendingEmail
            - PendingPrint
            - Printed
            - Voided
          type: string
        orderType:
          description: Select and filter on Type.
          enum:
            - RegularOrder
            - DropShip
            - Blanket
            - StandardBlanket
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        supplier:
          description: Filter on Supplier.
          type: string
      type: object
    PurchaseOrderUpdateDto:
      description: This class represent a Purchase Order in Purchase Order Controller. Used to pass data to server for creating or updating an order
      properties:
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        changeDatesOnLines:
          type: boolean
        controlTotal:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        date:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        discountDetails:
          items:
            $ref: "#/components/schemas/DiscountDetailUpdateDto"
          type: array
        dontEmail:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        dontPrint:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        exchangeRate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        fobPoint:
          $ref: "#/components/schemas/DtoValueOfString"
        gln:
          $ref: "#/components/schemas/glnInPurchaseOrderUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        lines:
          items:
            $ref: "#/components/schemas/PurchaseOrderLineUpdateDto"
          type: array
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        orderNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        orderType:
          $ref: "#/components/schemas/DtoValueOfNullableOfPurchaseOrderType"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        owner:
          $ref: "#/components/schemas/DtoValueOfNullableOfGuid"
        promisedOn:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        remitAddress:
          $ref: "#/components/schemas/DtoValueOfPurchaseOrderAddressUpdateDto"
        remitContact:
          $ref: "#/components/schemas/DtoValueOfPurchaseOrderContactUpdateDto"
        shipTerms:
          $ref: "#/components/schemas/DtoValueOfString"
        shipTo:
          $ref: "#/components/schemas/DtoValueOfString"
        shipVia:
          $ref: "#/components/schemas/DtoValueOfString"
        shippingAddress:
          $ref: "#/components/schemas/DtoValueOfPurchaseOrderAddressUpdateDto"
        shippingContact:
          $ref: "#/components/schemas/DtoValueOfPurchaseOrderContactUpdateDto"
        shippingDestinationType:
          $ref: "#/components/schemas/DtoValueOfNullableOfPOShippingDestinationType"
        shippingLocation:
          $ref: "#/components/schemas/DtoValueOfString"
        supplier:
          $ref: "#/components/schemas/supplierInPurchaseOrderUpdateDto"
        supplierRef:
          $ref: "#/components/schemas/DtoValueOfString"
        supplierVatZone:
          $ref: "#/components/schemas/DtoValueOfString"
        terms:
          $ref: "#/components/schemas/DtoValueOfString"
        vatRegistrationId:
          $ref: "#/components/schemas/vatRegistrationIdInPurchaseOrderUpdateDto"
      type: object
    PurchaseReceiptBasicDto:
      description: This class represents a Purchase Receipt in PurchaseReceiptController. Used for getting data.
      properties:
        branchNumber:
          $ref: "#/components/schemas/branchNumberInPurchaseReceiptBasicDto"
        controlQty:
          description: The top part &gt; Control qty. &gt; The total quantity of goods on the receipt or return
          format: double
          type: number
        controlTotal:
          description: The top part &gt; Control amt. &gt; The total amount of the receipt or return, which you manually enter.
          format: double
          type: number
        createBill:
          description: The top part &gt; Create invoice &gt; A check box that you select if the system must create an appropriate invoice (or adjustment) automatically when the purchase receipt is released.
          type: boolean
        currency:
          description: The top part &gt; Currency &gt; The currency the supplier uses for invoicing.
          type: string
        date:
          description: "Mandatory field: The top part &gt; Date* &gt; The date when the receipt document was created."
          format: date-time
          type: string
        errorInfo:
          type: string
        exchangeRate:
          format: double
          type: number
        hold:
          description: The top part &gt; Hold &gt; A check box that indicates (if selected) that the document has the On hold status.
          type: boolean
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        lines:
          description: Document details tab &gt; Line no &gt; The number of the purchase receipt line on the document.
          items:
            $ref: "#/components/schemas/PurchaseReceiptLineDto"
          type: array
        location:
          $ref: "#/components/schemas/locationInPurchaseReceiptBasicDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        postPeriod:
          description: "Mandatory field: The top part &gt; Post period* &gt; The financial period to which the transactions recorded in the document should be posted. Format MMYYYY."
          type: string
        receiptNbr:
          description: The top part &gt; Receipt no. &gt; The unique reference number of the purchase receipt.
          type: string
        receiptType:
          description: "The top part &gt; Type &gt; The type of the document, which can be one of the following options: Receipt, Return, Transfer receipt."
          enum:
            - PoReceipt
            - PoReturn
            - TransferReceipt
          type: string
        status:
          description: The top part &gt; Status &gt; The current status of the purchase or transfer receipt, or return, which the system assigns automatically. On hold, Balanced, Released.
          enum:
            - Hold
            - Balanced
            - Released
          type: string
        supplier:
          $ref: "#/components/schemas/supplierInPurchaseReceiptBasicDto"
        supplierRef:
          description: The top part &gt; Supplier ref. &gt; The reference number of the supplier document this receipt or return is based on.
          type: string
        totalAmt:
          description: The top part &gt; Total amt. &gt; The total amount calculated for items received from or returned to the supplier.
          format: double
          type: number
        totalQty:
          description: The top part &gt; Total qty. &gt; The total quantity of items received from or returned to the supplier.
          format: double
          type: number
        vatExemptTotal:
          description: The top part &gt; VAT exempt total &gt; The document total that is exempt from VAT.
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subjected to VAT.
          format: double
          type: number
        warehouse:
          $ref: "#/components/schemas/warehouseInPurchaseReceiptBasicDto"
      type: object
    PurchaseReceiptBasicUpdateDto:
      description: This class represents a Purchase Receipt in PurchaseReceiptBasicController. Used for adding data.
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        controlAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        controlQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        createBill:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        date:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        exchangeRate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        hold:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        lines:
          items:
            $ref: "#/components/schemas/PurchaseReceiptLineBasicUpdateDto"
          type: array
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInPurchaseReceiptBasicUpdateDto"
        receiptNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        receiptType:
          $ref: "#/components/schemas/DtoValueOfPurchaseReceiptType"
        supplierId:
          $ref: "#/components/schemas/DtoValueOfString"
        supplierRef:
          $ref: "#/components/schemas/DtoValueOfString"
        warehouseId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    PurchaseReceiptDto:
      description: This class represents a Purchase Receipt in PurchaseReceiptController. Used for getting data.
      properties:
        branchNumber:
          $ref: "#/components/schemas/branchNumberInPurchaseReceiptDto"
        controlQty:
          description: The top part &gt; Control qty. &gt; The total quantity of goods on the receipt or return
          format: double
          type: number
        controlTotal:
          description: The top part &gt; Control amt. &gt; The total amount of the receipt or return, which you manually enter.
          format: double
          type: number
        createBill:
          description: The top part &gt; Create invoice &gt; A check box that you select if the system must create an appropriate invoice (or adjustment) automatically when the purchase receipt is released.
          type: boolean
        currency:
          description: The top part &gt; Currency &gt; The currency the supplier uses for invoicing.
          type: string
        date:
          description: "Mandatory field: The top part &gt; Date* &gt; The date when the receipt document was created."
          format: date-time
          type: string
        errorInfo:
          type: string
        exchangeRate:
          format: double
          type: number
        hold:
          description: The top part &gt; Hold &gt; A check box that indicates (if selected) that the document has the On hold status.
          type: boolean
        landedCost:
          description: Landed costs tab &gt; Landed cost code &gt; The landed cost code specified in the line of the landed cost document.
          items:
            $ref: "#/components/schemas/LandedCostDto"
          type: array
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        lines:
          description: Document details tab &gt; Line no &gt; The number of the purchase receipt line on the document.
          items:
            $ref: "#/components/schemas/PurchaseReceiptLineDto"
          type: array
        location:
          $ref: "#/components/schemas/locationInPurchaseReceiptDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        postPeriod:
          description: "Mandatory field: The top part &gt; Post period* &gt; The financial period to which the transactions recorded in the document should be posted. Format MMYYYY."
          type: string
        receiptNbr:
          description: The top part &gt; Receipt no. &gt; The unique reference number of the purchase receipt.
          type: string
        receiptType:
          description: "The top part &gt; Type &gt; The type of the document, which can be one of the following options: Receipt, Return, Transfer receipt."
          enum:
            - PoReceipt
            - PoReturn
            - TransferReceipt
          type: string
        status:
          description: The top part &gt; Status &gt; The current status of the purchase or transfer receipt, or return, which the system assigns automatically. On hold, Balanced, Released.
          enum:
            - Hold
            - Balanced
            - Released
          type: string
        supplier:
          $ref: "#/components/schemas/supplierInPurchaseReceiptDto"
        supplierRef:
          description: The top part &gt; Supplier ref. &gt; The reference number of the supplier document this receipt or return is based on.
          type: string
        totalAmt:
          description: The top part &gt; Total amt. &gt; The total amount calculated for items received from or returned to the supplier.
          format: double
          type: number
        totalQty:
          description: The top part &gt; Total qty. &gt; The total quantity of items received from or returned to the supplier.
          format: double
          type: number
        vatExemptTotal:
          description: The top part &gt; VAT exempt total &gt; The document total that is exempt from VAT.
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subjected to VAT.
          format: double
          type: number
        warehouse:
          $ref: "#/components/schemas/warehouseInPurchaseReceiptDto"
      type: object
    PurchaseReceiptLineBasicUpdateDto:
      description: This class represents a Purchase Receipt Line in PurchaseReceiptBasicContraoller. Used for adding data.
      properties:
        accountDescription:
          $ref: "#/components/schemas/accountDescriptionInPurchaseReceiptLineBasicUpdateDto"
        accountId:
          $ref: "#/components/schemas/accountIdInPurchaseReceiptLineBasicUpdateDto"
        actualAccountId:
          $ref: "#/components/schemas/actualAccountIdInPurchaseReceiptLineBasicUpdateDto"
        actualSubaccount:
          description: The Document details tab &gt; The subaccount used to record the item amount on the purchase receipt, used for stock items and non-stock items for which a receipt is required.
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        amount:
          $ref: "#/components/schemas/amountInPurchaseReceiptLineBasicUpdateDto"
        branchId:
          $ref: "#/components/schemas/branchIdInPurchaseReceiptLineBasicUpdateDto"
        branchNumber:
          $ref: "#/components/schemas/branchNumberInPurchaseReceiptLineBasicUpdateDto"
        completePoLine:
          $ref: "#/components/schemas/completePoLineInPurchaseReceiptLineBasicUpdateDto"
        discountAmount:
          $ref: "#/components/schemas/discountAmountInPurchaseReceiptLineBasicUpdateDto"
        discountCodeId:
          $ref: "#/components/schemas/discountCodeIdInPurchaseReceiptLineBasicUpdateDto"
        discountPercent:
          $ref: "#/components/schemas/discountPercentInPurchaseReceiptLineBasicUpdateDto"
        expirationDate:
          $ref: "#/components/schemas/expirationDateInPurchaseReceiptLineBasicUpdateDto"
        extCost:
          $ref: "#/components/schemas/extCostInPurchaseReceiptLineBasicUpdateDto"
        inventoryId:
          $ref: "#/components/schemas/inventoryIdInPurchaseReceiptLineBasicUpdateDto"
        lineNbr:
          $ref: "#/components/schemas/lineNbrInPurchaseReceiptLineBasicUpdateDto"
        lineType:
          $ref: "#/components/schemas/lineTypeInPurchaseReceiptLineBasicUpdateDto"
        locationId:
          $ref: "#/components/schemas/locationIdInPurchaseReceiptLineBasicUpdateDto"
        lotSerialNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        manualDiscount:
          $ref: "#/components/schemas/manualDiscountInPurchaseReceiptLineBasicUpdateDto"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        poOrderLineNbr:
          $ref: "#/components/schemas/poOrderLineNbrInPurchaseReceiptLineBasicUpdateDto"
        poOrderNbr:
          $ref: "#/components/schemas/poOrderNbrInPurchaseReceiptLineBasicUpdateDto"
        poOrderType:
          $ref: "#/components/schemas/poOrderTypeInPurchaseReceiptLineBasicUpdateDto"
        projectId:
          $ref: "#/components/schemas/projectIdInPurchaseReceiptLineBasicUpdateDto"
        projectTaskId:
          $ref: "#/components/schemas/projectTaskIdInPurchaseReceiptLineBasicUpdateDto"
        receiptQty:
          $ref: "#/components/schemas/receiptQtyInPurchaseReceiptLineBasicUpdateDto"
        subaccount:
          description: The Document details tab &gt; The subaccount to be used to record the non-stock item amount on the purchase receipt (for non-stock items for which receipts are not required).
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        taxCategoryId:
          $ref: "#/components/schemas/taxCategoryIdInPurchaseReceiptLineBasicUpdateDto"
        transactionDescription:
          $ref: "#/components/schemas/transactionDescriptionInPurchaseReceiptLineBasicUpdateDto"
        transferOrderLineNbr:
          $ref: "#/components/schemas/transferOrderLineNbrInPurchaseReceiptLineBasicUpdateDto"
        transferOrderNbr:
          $ref: "#/components/schemas/transferOrderNbrInPurchaseReceiptLineBasicUpdateDto"
        transferOrderType:
          $ref: "#/components/schemas/transferOrderTypeInPurchaseReceiptLineBasicUpdateDto"
        unitCost:
          $ref: "#/components/schemas/unitCostInPurchaseReceiptLineBasicUpdateDto"
        uom:
          $ref: "#/components/schemas/uomInPurchaseReceiptLineBasicUpdateDto"
        warehouseId:
          $ref: "#/components/schemas/warehouseIdInPurchaseReceiptLineBasicUpdateDto"
      type: object
    PurchaseReceiptLineDto:
      description: This class represents a Purchase Order Line in PurchaseReceiptContraoller. Used for getting data.
      properties:
        account:
          $ref: "#/components/schemas/accountInPurchaseReceiptLineDto"
        accountDescription:
          description: Document details tab &gt; Description &gt; The description of this account.
          type: string
        actualAccount:
          $ref: "#/components/schemas/actualAccountInPurchaseReceiptLineDto"
        actualSub:
          $ref: "#/components/schemas/actualSubInPurchaseReceiptLineDto"
        allocations:
          items:
            $ref: "#/components/schemas/AllocationsDto"
          type: array
        amount:
          description: Document details tab &gt; Amount &gt; The amount calculated (after discount has been taken) for the item.
          format: double
          type: number
        branch:
          $ref: "#/components/schemas/branchInPurchaseReceiptLineDto"
        branchNumber:
          $ref: "#/components/schemas/branchNumberInPurchaseReceiptLineDto"
        completePoLine:
          description: Document details tab &gt; Complelete purchase line &gt; A check box that indicates to the system (if selected) that the purchase order line added to this receipt line should be considered completed upon release of this purchase receipt.
          type: boolean
        discountAmount:
          description: Document details tab &gt; Discount amount &gt; If the Supplier and customer discounts functionality is enabled, the amount of the discount that has been specified manually or calculated based on the discount percent entered manually.
          format: double
          type: number
        discountCode:
          $ref: "#/components/schemas/discountCodeInPurchaseReceiptLineDto"
        discountPercent:
          description: Document details tab &gt; Discount percent &gt; If the Supplier and customer discounts functionality is enabled, the percent of the discount that has been entered manually or calculated based on the discount amount entered manually for this line item.
          format: double
          type: number
        expirationDate:
          description: Document details tab &gt; Expiration date &gt; The expiration date of the received item.
          format: date-time
          type: string
        extCost:
          description: Document details tab &gt; Cost &gt; The cost of the item, which is the unit price multiplied by the quantity.
          format: double
          type: number
        inventory:
          $ref: "#/components/schemas/InventoryNumberDescriptionDto"
        lineNbr:
          description: The line number
          format: int32
          type: integer
        lineType:
          description: Document details tab &gt; Line type &gt; The type of the purchase order line.
          enum:
            - GoodsForInventory
            - GoodsForSalesOrder
            - GoodsForReplenishment
            - GoodsForDropShip
            - NonStockForDropShip
            - NonStockForSalesOrder
            - NonStock
            - Service
            - Freight
            - Description
          type: string
        location:
          $ref: "#/components/schemas/locationInPurchaseReceiptLineDto"
        lotSerialNumber:
          description: Document details tab &gt; Lot/serial no. &gt; The lot or serial number assigned to the received quantity of the purchased item.
          type: string
        manualDiscount:
          description: Document details tab &gt; Manual discount &gt; A check box that indicates (if selected) that the discount has been applied manually.
          type: boolean
        openQty:
          description: Document details tab &gt; Open qty. &gt; The quantity of the stock item yet to be received on the purchase order.
          format: double
          type: number
        orderQty:
          description: Document details tab &gt; Ordered qty.  &gt; The quantity of the purchased item (in the specified UoM).
          format: double
          type: number
        poOrderLineNbr:
          description: Document details tab &gt; Purchase order line no. &gt; The line number of the purchase order related to this line of the purchase receipt.
          format: int32
          type: integer
        poOrderNbr:
          description: Document details tab &gt; Purchase order no. &gt; The reference number of the purchase order related to this purchase receipt.
          type: string
        poOrderType:
          description: Document details tab &gt; Purchase order type &gt; The type of the purchase order related to this purchase receipt.
          enum:
            - RegularOrder
            - DropShip
            - Blanket
            - StandardBlanket
          type: string
        project:
          $ref: "#/components/schemas/projectInPurchaseReceiptLineDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInPurchaseReceiptLineDto"
        receiptQty:
          description: Document details tab &gt; Receipts qty. &gt; 	The quantity of the item (with the specified subitem code) in the specified UoM that has been received (listed on released receipts).
          format: double
          type: number
        sub:
          $ref: "#/components/schemas/subInPurchaseReceiptLineDto"
        taxCategory:
          $ref: "#/components/schemas/taxCategoryInPurchaseReceiptLineDto"
        transactionDescription:
          description: Document details tab &gt; Transaction descr. &gt; The description of the receipt or return transaction.
          type: string
        transferOrderLineNbr:
          description: Document details tab &gt; Transfer line no &gt; The line number in the transfer order to which this receipt is linked.
          format: int32
          type: integer
        transferOrderNbr:
          description: Document details tab &gt; Transfer order no. &gt; The reference number of the transfer order to which this receipt is linked.
          type: string
        transferOrderType:
          description: Document details tab &gt; Transfer order type &gt; The type of the transfer order to which this receipt is linked.
          enum:
            - CreditNote
            - DebitNote
            - Invoice
            - QuoteOrder
            - RMAOrder
            - SalesOrder
            - StandardOrder
            - TransferOrder
          type: string
        unitCost:
          description: Document details tab &gt; Unit cost &gt; The cost of a unit of the purchased item.
          format: double
          type: number
        uom:
          description: Document details tab &gt; UoM &gt; The unit of measure (UoM) used for the purchased or transferred item.
          type: string
        warehouse:
          $ref: "#/components/schemas/warehouseInPurchaseReceiptLineDto"
      type: object
    PurchaseReceiptLineUpdateDto:
      description: This class represents a Purchase Order Line in PurchaseReceiptContraoller. Used for getting data.
      properties:
        accountDescription:
          $ref: "#/components/schemas/accountDescriptionInPurchaseReceiptLineUpdateDto"
        accountId:
          $ref: "#/components/schemas/accountIdInPurchaseReceiptLineUpdateDto"
        actualAccountId:
          $ref: "#/components/schemas/actualAccountIdInPurchaseReceiptLineUpdateDto"
        actualSubaccount:
          description: The Document details tab &gt; The subaccount used to record the item amount on the purchase receipt, used for stock items and non-stock items for which a receipt is required.
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        allocations:
          items:
            $ref: "#/components/schemas/AllocationsUpdateDto"
          type: array
        amount:
          $ref: "#/components/schemas/amountInPurchaseReceiptLineUpdateDto"
        branchId:
          $ref: "#/components/schemas/branchIdInPurchaseReceiptLineUpdateDto"
        branchNumber:
          $ref: "#/components/schemas/branchNumberInPurchaseReceiptLineUpdateDto"
        completePoLine:
          $ref: "#/components/schemas/completePoLineInPurchaseReceiptLineUpdateDto"
        discountAmount:
          $ref: "#/components/schemas/discountAmountInPurchaseReceiptLineUpdateDto"
        discountCodeId:
          $ref: "#/components/schemas/discountCodeIdInPurchaseReceiptLineUpdateDto"
        discountPercent:
          $ref: "#/components/schemas/discountPercentInPurchaseReceiptLineUpdateDto"
        expirationDate:
          $ref: "#/components/schemas/expirationDateInPurchaseReceiptLineUpdateDto"
        extCost:
          $ref: "#/components/schemas/extCostInPurchaseReceiptLineUpdateDto"
        inventoryId:
          $ref: "#/components/schemas/inventoryIdInPurchaseReceiptLineUpdateDto"
        lineNbr:
          $ref: "#/components/schemas/lineNbrInPurchaseReceiptLineUpdateDto"
        lineType:
          $ref: "#/components/schemas/lineTypeInPurchaseReceiptLineUpdateDto"
        locationId:
          $ref: "#/components/schemas/locationIdInPurchaseReceiptLineUpdateDto"
        lotSerialNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        manualDiscount:
          $ref: "#/components/schemas/manualDiscountInPurchaseReceiptLineUpdateDto"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        poOrderLineNbr:
          $ref: "#/components/schemas/poOrderLineNbrInPurchaseReceiptLineUpdateDto"
        poOrderNbr:
          $ref: "#/components/schemas/poOrderNbrInPurchaseReceiptLineUpdateDto"
        poOrderType:
          $ref: "#/components/schemas/poOrderTypeInPurchaseReceiptLineUpdateDto"
        projectId:
          $ref: "#/components/schemas/projectIdInPurchaseReceiptLineUpdateDto"
        projectTaskId:
          $ref: "#/components/schemas/projectTaskIdInPurchaseReceiptLineUpdateDto"
        receiptQty:
          $ref: "#/components/schemas/receiptQtyInPurchaseReceiptLineUpdateDto"
        subaccount:
          description: The Document details tab &gt; The subaccount to be used to record the non-stock item amount on the purchase receipt (for non-stock items for which receipts are not required).
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        taxCategoryId:
          $ref: "#/components/schemas/taxCategoryIdInPurchaseReceiptLineUpdateDto"
        transactionDescription:
          $ref: "#/components/schemas/transactionDescriptionInPurchaseReceiptLineUpdateDto"
        transferOrderLineNbr:
          $ref: "#/components/schemas/transferOrderLineNbrInPurchaseReceiptLineUpdateDto"
        transferOrderNbr:
          $ref: "#/components/schemas/transferOrderNbrInPurchaseReceiptLineUpdateDto"
        transferOrderType:
          $ref: "#/components/schemas/transferOrderTypeInPurchaseReceiptLineUpdateDto"
        unitCost:
          $ref: "#/components/schemas/unitCostInPurchaseReceiptLineUpdateDto"
        uom:
          $ref: "#/components/schemas/uomInPurchaseReceiptLineUpdateDto"
        warehouseId:
          $ref: "#/components/schemas/warehouseIdInPurchaseReceiptLineUpdateDto"
      type: object
    PurchaseReceiptOrderLineNbrUpdateDto:
      description: Represents a Purchase Order line number to add to a Purchase Receipt.
      properties:
        lineNbr:
          description: The line number of the Purchase Order line.
          type: string
      type: object
    PurchaseReceiptOrderLinesListUpdateDto:
      description: This class represents a collection of Purchase Orders reference numbers and associated line numbers. Used to add Purchase Order lines to a Purchase Receipt.
      properties:
        purchaseOrderLines:
          description: The collection of Purchase Order reference numbers and their lines.
          items:
            $ref: "#/components/schemas/PurchaseReceiptOrderLinesUpdateDto"
          type: array
      type: object
    PurchaseReceiptOrderLinesUpdateDto:
      description: Represents a collection of Purchase Order lines belonging to a specific Purchase Order.
      properties:
        allocations:
          items:
            $ref: "#/components/schemas/AllocationsUpdateDto"
          type: array
        lines:
          description: Array of line numbers belonging to a Purchase Order.
          items:
            $ref: "#/components/schemas/PurchaseReceiptOrderLineNbrUpdateDto"
          type: array
        orderNbr:
          description: The Purchase Order reference number.
          type: string
      type: object
    PurchaseReceiptOrderListUpdateDto:
      description: This class represents a list of Purchase Orders to add to a Purchase Receipt.
      properties:
        purchaseOrders:
          description: The array of reference numbers of the Purchase Orders.
          items:
            $ref: "#/components/schemas/PurchaseReceiptOrderUpdateDto"
          type: array
      type: object
    PurchaseReceiptOrderUpdateDto:
      description: This class represents a Purchase Order reference number to add to a Purchase Receipt.
      properties:
        allocations:
          items:
            $ref: "#/components/schemas/AllocationsUpdateDto"
          type: array
        orderNbr:
          description: The reference number of the Purchase Order.
          type: string
        orderType:
          enum:
            - RegularOrder
            - DropShip
            - Blanket
            - StandardBlanket
          type: string
      type: object
    PurchaseReceiptQueryParameters:
      properties:
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        poOrderNbr:
          type: string
        receiptType:
          enum:
            - PoReceipt
            - PoReturn
            - TransferReceipt
          type: string
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          enum:
            - Hold
            - Balanced
            - Released
          type: string
        supplier:
          type: string
      type: object
    PurchaseReceiptUpdateDto:
      description: This class represents a Purchase Receipt in PurchaseReceiptController. Used for getting data.
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        controlAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        controlQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        createBill:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        date:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        exchangeRate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        hold:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        landedCost:
          items:
            $ref: "#/components/schemas/LandedCostUpdateDto"
          type: array
        lines:
          items:
            $ref: "#/components/schemas/PurchaseReceiptLineUpdateDto"
          type: array
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInPurchaseReceiptUpdateDto"
        receiptNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        receiptType:
          $ref: "#/components/schemas/DtoValueOfPurchaseReceiptType"
        supplierId:
          $ref: "#/components/schemas/DtoValueOfString"
        supplierRef:
          $ref: "#/components/schemas/DtoValueOfString"
        warehouseId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    PurchaseReceiptV2QueryParameters:
      properties:
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        poOrderNbr:
          type: string
        receiptType:
          enum:
            - PoReceipt
            - PoReturn
            - TransferReceipt
          type: string
        status:
          enum:
            - Hold
            - Balanced
            - Released
          type: string
        supplier:
          type: string
      type: object
    PurchaseReceiptsDto:
      properties:
        currency:
          description: The top part &gt; Currency &gt; The currency the supplier uses for invoicing.
          type: string
        receiptNumber:
          description: The top part &gt; Receipt no. &gt; The unique reference number of the purchase receipt, transfer receipt, or return, which the system automatically assigns according to its number series.
          type: string
        status:
          description: The top part &gt; Status &gt; The current status of the purchase or transfer receipt, or return, which the system assigns automatically.
          enum:
            - Hold
            - Balanced
            - Released
          type: string
        supplierName:
          description: The top part &gt; Supplier &gt; The supplier from which the items have been received or to which they will be returned.
          type: string
        totalAmt:
          description: The top part &gt; Total amt. &gt; The total amount calculated for items received from or returned to the supplier; the sum of all amounts of all stock items listed on the Document details tab.
          format: double
          type: number
        totalQty:
          description: The top part &gt; Total qty. &gt; The total quantity of items received from or returned to the supplier; the sum of all quantities of all stock items listed on the Document details tab.
          format: double
          type: number
        type:
          description: The top part &gt; Type &gt; The type of the document, which can be Receipt, Return, or Transfer receipt.
          enum:
            - PoReceipt
            - PoReturn
            - TransferReceipt
          type: string
      type: object
    PutExpenseClaimOnHoldActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    PutTimeCardOnHoldActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    RateTableIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    ReasonCodeDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    ReleaseCashTransactionActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ReleaseCustomerCreditNoteActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ReleaseCustomerDebitNoteActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ReleaseCustomerOverdueChargeActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ReleaseInventoryDocumentActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ReleaseInvoiceActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ReleaseJournalTransactionActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ReleasePaymentActionDto:
      properties:
        type:
          $ref: "#/components/schemas/DtoValueOfNullableOfPaymentTypes"
      type: object
    ReleasePaymentActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ReleasePurchaseReceiptActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ReleaseSupplierInvoiceActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ReleaseSupplierPaymentActionDto:
      properties:
        type:
          $ref: "#/components/schemas/DtoValueOfNullableOfSupplierPaymentTypes"
      type: object
    ReopenSalesOrderActionDto:
      properties:
        saleOrderUpdateDto:
          $ref: "#/components/schemas/saleOrderUpdateDtoInReopenSalesOrderActionDto"
      required:
        - saleOrderUpdateDto
      type: object
    ReopenSalesOrderActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    ReplenishmentClassIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    ReverseCashTransactionActionDto:
      properties:
        returnCashTransaction:
          type: boolean
      type: object
    ReverseCashTransactionActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        cashTransaction:
          $ref: "#/components/schemas/CashTransactionDto"
        errorInfo:
          type: string
        referenceNbr:
          type: string
      type: object
    ReverseInvoiceActionDto:
      properties:
        returnCreditNote:
          type: boolean
      type: object
    ReverseInvoiceActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        creditNoteDto:
          $ref: "#/components/schemas/CreditNoteDto"
        errorInfo:
          type: string
        referenceNumber:
          type: string
      type: object
    ReverseInvoiceResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        docType:
          type: string
        errorInfo:
          type: string
        refNbr:
          type: string
      type: object
    RotRutBasicDto:
      properties:
        appartment:
          type: string
        distributedAutomaticaly:
          type: boolean
        distribution:
          items:
            $ref: "#/components/schemas/RotRutDistributionDto"
          type: array
        estate:
          type: string
        organizationNbr:
          type: string
        type:
          enum:
            - Rut
            - Rot
          type: string
      type: object
    RotRutDistributionDto:
      description: This class represents a RutRot Distribution Line For RutRot in RutRotController. Used for getting data.
      properties:
        amount:
          format: double
          type: number
        extra:
          type: boolean
        lineNbr:
          format: int32
          type: integer
        personalId:
          type: string
      type: object
    RotRutDistributionUpdateDto:
      properties:
        amount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        extra:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        personalId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    RotRutDto:
      description: This class represents a RutRot in RutRotController. Used for getting data.
      properties:
        appartment:
          type: string
        distributedAmount:
          format: double
          type: number
        distributedAutomaticaly:
          type: boolean
        distribution:
          items:
            $ref: "#/components/schemas/RotRutDistributionDto"
          type: array
        docType:
          enum:
            - Invoice
            - DebitNote
            - CreditNote
            - Payment
            - VoidPayment
            - Prepayment
            - Refund
            - FinCharge
            - SmallBalanceWo
            - SmallCreditWo
            - CashSale
            - CashReturn
            - Undefined
            - NoUpdate
          type: string
        estate:
          type: string
        materialCost:
          format: double
          type: number
        organizationNbr:
          type: string
        otherCost:
          format: double
          type: number
        refNbr:
          type: string
        totalDeductableAmount:
          format: double
          type: number
        type:
          enum:
            - Rut
            - Rot
          type: string
        workPrice:
          format: double
          type: number
      type: object
    RotRutUpdateDto:
      properties:
        appartment:
          $ref: "#/components/schemas/DtoValueOfString"
        distributedAutomaticaly:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        distribution:
          items:
            $ref: "#/components/schemas/RotRutDistributionUpdateDto"
          type: array
        estate:
          $ref: "#/components/schemas/DtoValueOfString"
        organizationNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        type:
          $ref: "#/components/schemas/DtoValueOfNullableOfRutRotTypes"
      type: object
    SOCommissionDto:
      properties:
        commissionAmount:
          format: double
          type: number
        commissionPercent:
          format: double
          type: number
        commissionableAmount:
          format: double
          type: number
        salesPersonId:
          type: string
      type: object
    SalesCategoryDto:
      description: This class represents a Sales Category in SalesCategoryController. Used by getting data.
      properties:
        categoryID:
          description: "The left pane &gt; Categories. See the list of category members on the right side.\r

            The right pane &gt; Item ID &gt; The unique identifier of the sales category."
          format: int32
          type: integer
        description:
          description: The right pane &gt; Description &gt; The description of the sales category, which can serve as an identifier.
          type: string
        parentID:
          description: The right pane &gt; Parent category &gt; The primary/main category for Item sales.
          format: int32
          type: integer
        sortOrder:
          format: int32
          type: integer
        subCategories:
          description: A list can be expanded on the left side.
          items:
            $ref: "#/components/schemas/SalesCategoryDto"
          type: array
      type: object
    SalesCategoryLineDto:
      properties:
        categoryId:
          format: int32
          type: integer
        description:
          type: string
      type: object
    SalesInvoiceAddressUpdateDto:
      properties:
        addressLine1:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine2:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine3:
          $ref: "#/components/schemas/DtoValueOfString"
        city:
          $ref: "#/components/schemas/DtoValueOfString"
        countryId:
          $ref: "#/components/schemas/DtoValueOfString"
        county:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideAddress:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        postalCode:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    SalesInvoiceContactUpdateDto:
      properties:
        attention:
          $ref: "#/components/schemas/DtoValueOfString"
        email:
          $ref: "#/components/schemas/DtoValueOfString"
        name:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideContact:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        phone1:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    SalesOrderAddressDto:
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInSalesOrderAddressDto"
        county:
          $ref: "#/components/schemas/countyInSalesOrderAddressDto"
        overrideAddress:
          description: Override address &gt; A check box indicating that you want to override the default address information.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
      type: object
    SalesOrderAddressUpdateDto:
      properties:
        addressLine1:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine2:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine3:
          $ref: "#/components/schemas/DtoValueOfString"
        city:
          $ref: "#/components/schemas/DtoValueOfString"
        countryId:
          $ref: "#/components/schemas/DtoValueOfString"
        county:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideAddress:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        postalCode:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    SalesOrderBasicDto:
      description: This class represents a SOOrder in SOOrderController. Used by getting data.
      properties:
        attachments:
          description: The data containing information about the document attachments
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/branchNumberInSalesOrderBasicDto"
        contactId:
          description: The top part &gt; Contact &gt; The contact person of the customer.
          format: int32
          type: integer
        currency:
          description: The top part &gt; Currency &gt; The currency of the document.
          type: string
        customer:
          $ref: "#/components/schemas/customerInSalesOrderBasicDto"
        customerOrder:
          description: The top part &gt; Customer order &gt; The reference number of the original customer document that the sales order is based on.
          type: string
        customerRefNo:
          description: The top part &gt; External reference &gt; The reference number of the sales order in a third-party application if Visma.net Financials is integrated with such an application and imports the sales orders from it.
          type: string
        date:
          description: "Mandatory field: The top part &gt; Date* &gt;  The date of the document."
          format: date-time
          type: string
        description:
          description: The top part &gt; Description &gt; A brief description of the document.
          type: string
        discountTotal:
          format: double
          type: number
        discountTotalInBaseCurrency:
          format: double
          type: number
        errorInfo:
          type: string
        exchangeRate:
          format: double
          type: number
        hold:
          description: The top part &gt; Hold &gt; A check box that you select if the document is on hold and should not be processed further at this time.
          type: boolean
        lastModifiedDateTime:
          description: Background information collected from the system.
          format: date-time
          type: string
        lines:
          items:
            $ref: "#/components/schemas/SalesOrderDocumentLineDto"
          type: array
        location:
          $ref: "#/components/schemas/locationInSalesOrderBasicDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the order.
          type: string
        orderNo:
          description: "The top part &gt; Order no.: &gt; The reference number of the document."
          type: string
        orderTotal:
          description: "The top part &gt; Order total &gt; The total amount of the document, which is calculated as follows:\r

            Line Total + Misc.Charges + Freight + Premium Freight – Discount Total+ Tax Total"
          format: double
          type: number
        orderTotalInBaseCurrency:
          format: double
          type: number
        orderType:
          description: "Mandatory field: The top part &gt; Order type &gt; The type of the document, which is one of the predefined order types or a custom order type created by using the (SO201000) window."
          type: string
        requestOn:
          description: "Mandatory field: The top part &gt; Requested on &gt; The date when the customer wants to receive the goods; this date provides the default values for the Requested on dates for order lines."
          format: date-time
          type: string
        status:
          description: "The top part &gt; Status &gt; The status of the document, which can be one of the following options: On hold, Credit hold, Pending aååroval, Rejected, Open, Cancelled, Shipping, Back order, Invoiced, Completed."
          enum:
            - Open
            - Hold
            - CreditHold
            - Completed
            - Cancelled
            - BackOrder
            - Shipping
            - Invoiced
            - PendingApproval
            - Voided
          type: string
        taxTotal:
          description: The top part &gt; VAT total &gt; The total amount of tax paid on the document.
          format: double
          type: number
        taxTotalInBaseCurrency:
          format: double
          type: number
        vatExemptTotal:
          description: The top part &gt; VAT exempt total &gt; The document total that is exempt from VAT.
          format: double
          type: number
        vatExemptTotalInBaseCurrency:
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subject to VAT.
          format: double
          type: number
        vatTaxableTotalInBaseCurrency:
          format: double
          type: number
      type: object
    SalesOrderBasicLineUpdateDto:
      description: This class represent a Sales Order Line in Sales Order Controller. Used to pass data to server for creating or updating an order line
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        discUnitPrice:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        discountAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        discountCode:
          $ref: "#/components/schemas/DtoValueOfString"
        discountPercent:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        inventoryId:
          $ref: "#/components/schemas/inventoryIdInSalesOrderBasicLineUpdateDto"
        inventoryNumber:
          $ref: "#/components/schemas/inventoryNumberInSalesOrderBasicLineUpdateDto"
        lineDescription:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        manualDiscount:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        unitCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        unitPrice:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        warehouse:
          $ref: "#/components/schemas/DtoValueOfString"
      required:
        - inventoryNumber
      type: object
    SalesOrderBasicUpdateDto:
      description: This class represent a Sales Order in Sales Order Controller. Used to pass data to server for creating or updating an order
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        contactId:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        customer:
          $ref: "#/components/schemas/customerInSalesOrderBasicUpdateDto"
        customerOrder:
          $ref: "#/components/schemas/DtoValueOfString"
        customerRefNo:
          $ref: "#/components/schemas/DtoValueOfString"
        date:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        gln:
          $ref: "#/components/schemas/glnInSalesOrderBasicUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        lines:
          items:
            $ref: "#/components/schemas/SalesOrderBasicLineUpdateDto"
          type: array
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        orderNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        orderType:
          $ref: "#/components/schemas/orderTypeInSalesOrderBasicUpdateDto"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        recalculateShipment:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        requestOn:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        vatRegistrationId:
          $ref: "#/components/schemas/vatRegistrationIdInSalesOrderBasicUpdateDto"
      required:
        - orderType
      type: object
    SalesOrderContactDto:
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        overrideContact:
          description: Override contact &gt; A check box indicating that you want to override the default contact information.
          type: boolean
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
      type: object
    SalesOrderContactUpdateDto:
      properties:
        attention:
          $ref: "#/components/schemas/DtoValueOfString"
        email:
          $ref: "#/components/schemas/DtoValueOfString"
        fax:
          $ref: "#/components/schemas/DtoValueOfString"
        name:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideContact:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        phone1:
          $ref: "#/components/schemas/DtoValueOfString"
        phone2:
          $ref: "#/components/schemas/DtoValueOfString"
        web:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    SalesOrderDocumentLineDto:
      description: This class represents a SOOrder in SOOrderController. Used by getting data.
      properties:
        attachments:
          description: The data containing information about the document attachments
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/BranchNumberDto"
        discUnitPrice:
          description: Document details tab &gt; Disc. unit price &gt; The unit price, which has been recalculated after the application of discounts.
          format: double
          type: number
        discountAmount:
          description: Document details tab &gt; Discount amount &gt; The amount of the line-level discount that has been applied manually or automatically to this line item (if the item is not a free item).
          format: double
          type: number
        discountCode:
          description: "Mandatory field: Document details tab &gt; Discount details tab &gt; Discount code* &gt; The code of the discount that has been applied to this line."
          type: string
        discountPercent:
          description: Document details tab &gt; Discount percent &gt; The percent of the line-level discount that has been applied manually or automatically to this line item (if the item is not a free item).
          format: double
          type: number
        extPrice:
          description: Document details tab &gt; Extended cost &gt; The extended price, which is the unit price multiplied by the quantity.
          format: double
          type: number
        inventory:
          $ref: "#/components/schemas/InventoryNumberDescriptionDto"
        lineDescription:
          description: Document details tab &gt; Line description &gt; The description of the unit.
          type: string
        lineNbr:
          description: Document details tab &gt; Line no. &gt; The line number of the document.
          format: int32
          type: integer
        manualDiscount:
          description: Document details tab &gt; Manual discount &gt; A check box that indicates (if selected) that the discount has been applied manually.
          type: boolean
        note:
          description: Tables in tab &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected to the order.
          type: string
        openQty:
          description: Document details tab &gt; Open qty. &gt; The quantity of the item to be shipped; that is, the total quantity minus the quantity shipped according to closed shipment documents.
          format: double
          type: number
        qtyOnShipments:
          description: Document details tab &gt; Qty. on shipments &gt; A read-only column that displays the quantity of the stock item being prepared for shipment and already shipped for this order.
          format: double
          type: number
        quantity:
          description: Document details tab &gt; Quantity &gt; The quantity of the item sold, measured in the UoM.
          format: double
          type: number
        sortOrder:
          description: Document details tab &gt; Line order &gt; The order number of the document line. The system regenerates this number automatically when you reorder the lines in the table.
          format: int32
          type: integer
        unbilledAmount:
          description: Document details tab &gt; Amount not yet invoiced &gt; The amount of cancelled shipments and cancelled remainders.
          format: double
          type: number
        unitCost:
          description: Document details tab &gt; Unit Cost &gt; The cost of the unit on the sales order.
          format: double
          type: number
        unitPrice:
          description: Document details tab &gt; Unit price &gt; The price of the unit on the sales order.
          format: double
          type: number
        unitPriceInBaseCurrency:
          format: double
          type: number
        uom:
          description: "Mandatory field: Document details tab &gt; UoM* &gt; The unit of measure (UoM) used for the item with this item ID."
          type: string
        warehouse:
          $ref: "#/components/schemas/WarehouseIdDescriptionDto"
      type: object
    SalesOrderDto:
      description: This class represents a SOOrder in SOOrderController. Used by getting data.
      properties:
        attachments:
          description: The data containing information about the document attachments
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/branchNumberInSalesOrderDto"
        cancelBy:
          description: Delivery settings tab &gt; Shipping information section &gt; Cancel by &gt; The date when the order should be cancelled if the Back order allowed option has been selected in the Shipping rule field.
          format: date-time
          type: string
        canceled:
          description: The Delivery settings tab &gt; The Shipping information section &gt; Cancelled &gt; A check box that indicates that the order has been cancelled on the date specified in Cancel by.
          type: boolean
        cashAccount:
          description: Payment settings tab &gt; Cash account
          type: string
        cashDiscountDate:
          description: Financial settings tab &gt; Financial information section &gt; Cash discount date &gt; The date when the cash discount is available for the invoice based on the credit terms.
          format: date-time
          type: string
        commissionAmount:
          description: The Commissions tab &gt; Commission amt. &gt;	The commission amount earned by the salesperson on this document.
          type: string
        commissionPercent:
          description: The Commissions tab &gt; Commission (%) &gt; The percentage of commission generally earned by the salesperson.
          type: string
        commissionableAmount:
          description: The Commissions tab &gt; Commissionable amount	&gt; The amount used to calculate the commission.
          type: string
        contactId:
          description: The top part &gt; Contact &gt; The contact person of the customer.
          format: int32
          type: integer
        currency:
          description: The top part &gt; Currency &gt; The currency of the document.
          type: string
        customer:
          $ref: "#/components/schemas/customerInSalesOrderDto"
        customerOrder:
          description: The top part &gt; Customer order &gt; The reference number of the original customer document that the sales order is based on.
          type: string
        customerRefNo:
          description: The top part &gt; External reference &gt; The reference number of the sales order in a third-party application if Visma.net Financials is integrated with such an application and imports the sales orders from it.
          type: string
        customerVATZone:
          $ref: "#/components/schemas/customerVATZoneInSalesOrderDto"
        date:
          description: "Mandatory field: The top part &gt; Date* &gt;  The date of the document."
          format: date-time
          type: string
        description:
          description: The top part &gt; Description &gt; A brief description of the document.
          type: string
        discountTotal:
          format: double
          type: number
        discountTotalInBaseCurrency:
          format: double
          type: number
        dueDate:
          description: Financial settings tab &gt; Financial information section &gt; Due date &gt; The due date of the invoice according to the credit terms.
          format: date-time
          type: string
        emailed:
          description: A check box indicating if the document is emailed
          type: boolean
        errorInfo:
          type: string
        exchangeRate:
          format: double
          type: number
        fobPoint:
          $ref: "#/components/schemas/fobPointInSalesOrderDto"
        hold:
          description: The top part &gt; Hold &gt; A check box that you select if the document is on hold and should not be processed further at this time.
          type: boolean
        insurance:
          description: Delivery settings tab &gt; Shipping information section &gt; Insurance &gt; A check box that you select to indicate that insurance is required for this order.
          type: boolean
        invoiceDate:
          description: Financial settings tab &gt; Financial information section &gt; Invoice date&gt; The date of the invoice generated for the order.
          format: date-time
          type: string
        invoiceNbr:
          description: Financial settings tab &gt; Financial information section &gt; Invoice no.&gt; The invoice number of the invoice generated for this order.
          type: string
        invoiceSeparately:
          description: Financial settings tab &gt; Financial information section &gt; Invoice separately &gt; A check box that indicating that this document is to be invoiced separately (if that is required).
          type: boolean
        isRotRutDeductible:
          description: A check box indicating if the document is Rot/rut deductible (applicable for the Swedish markets)
          type: boolean
        lastModifiedDateTime:
          description: Background information collected from the system.
          format: date-time
          type: string
        lines:
          description: Document details tab &gt;
          items:
            $ref: "#/components/schemas/SalesOrderLineDto"
          type: array
        location:
          $ref: "#/components/schemas/locationInSalesOrderDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: Icon Notes on top of the window &gt; Pop-up window for providing any user-defined text connected to the order.
          type: string
        orderNo:
          description: "The top part &gt; Order no.: &gt; The reference number of the document."
          type: string
        orderTotal:
          description: "The top part &gt; Order total &gt; The total amount of the document, which is calculated as follows:\r

            Line Total + Misc.Charges + Freight + Premium Freight – Discount Total+ Tax Total"
          format: double
          type: number
        orderTotalInBaseCurrency:
          format: double
          type: number
        orderType:
          description: "Mandatory field: The top part &gt; Order type &gt; The type of the document, which is one of the predefined order types or a custom order type created by using the (SO201000) window."
          type: string
        origOrderNbr:
          description: The top part &gt; Order no. &gt; The order number of the document.
          type: string
        origOrderType:
          description: "Mandatory field: The top part &gt; Order type* &gt; The type of the document, which is one of the predefined order types or a custom order type created by using the window SO201000."
          type: string
        owner:
          $ref: "#/components/schemas/ownerInSalesOrderDto"
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInSalesOrderDto"
        paymentRef:
          description: Payment settings tab &gt; Payment ref.
          type: string
        postPeriod:
          description: The Financial settings tab &gt; Financial information section &gt; Post period &gt; The period to post the transactions generated by the invoice. Format MMYYYY.
          type: string
        preferredWarehouse:
          $ref: "#/components/schemas/preferredWarehouseInSalesOrderDto"
        printDescriptionOnInvoice:
          description: The top part &gt; Print description on invoice &gt; A check box
          type: boolean
        printNoteOnExternalDocuments:
          description: The top part &gt; Print note on external sales documents &gt; A check box
          type: boolean
        printNoteOnInternalDocuments:
          description: The top part &gt; Print line note on internal sales documents &gt; A check box
          type: boolean
        priority:
          description: Delivery settings tab &gt; Shipping information section &gt; Priority &gt; Field only for informational purposes. The level of priority for processing order of this customer, as specified for the customer on the Shipping settings tab on the AR303000 window.
          format: int32
          type: integer
        project:
          description: "Mandatory field: The top part &gt; Project* &gt; The field consists of Project ID and Project description. Project ID: The identifier for the project with which this document is associated, or the code indicating that this document is not associated with any project; the non-project code is specified in the Project accounting preferences (PM101000) window."
          format: int32
          type: integer
        projectCD:
          description: "Mandatory field: The top part &gt; Project* &gt; The field consists of Project ID and Project description. Project ID: The identifier for the project with which this document is associated, or the code indicating that this document is not associated with any project; the non-project code is specified in the Project accounting preferences (PM101000) window."
          type: string
        requestOn:
          description: "Mandatory field: The top part &gt; Requested on &gt; The date when the customer wants to receive the goods; this date provides the default values for the Requested on dates for order lines."
          format: date-time
          type: string
        residentialDelivery:
          description: Delivery settings tab &gt; Shipping information section &gt; Residential delivery &gt; A check box that you select to indicate that the shipment should be delivered to a residential area.
          type: boolean
        salesPerson:
          $ref: "#/components/schemas/salesPersonInSalesOrderDto"
        saturdayDelivery:
          description: Delivery settings tab &gt; Shipping information section &gt; Saturday delivery &gt; A check box that indicates that the order may be delivered on Saturday.
          type: boolean
        schedShipment:
          description: Delivery settings tab &gt; Shipping information section &gt; Sched. shipment &gt; The date when the ordered goods are scheduled to be shipped.
          format: date-time
          type: string
        shipComplete:
          description: Delivery settings tab &gt; Shipping information section &gt; Shipping rule &gt; An option that controls whether incomplete and partial shipments for the order are allowed.
          enum:
            - BackOrderAllowed
            - CancelRemainder
            - ShipComplete
          type: string
        shipSeparately:
          description: Delivery settings tab &gt; Shipping information section &gt; Ship separately &gt; This check box indicates that the goods for the customer should be shipped separately for each sales order.
          type: boolean
        shipVia:
          $ref: "#/components/schemas/shipViaInSalesOrderDto"
        shipments:
          description: Shipment tab &gt;
          items:
            $ref: "#/components/schemas/SalesOrderShipmentDto"
          type: array
        shippingTerms:
          $ref: "#/components/schemas/shippingTermsInSalesOrderDto"
        shippingZone:
          $ref: "#/components/schemas/shippingZoneInSalesOrderDto"
        soBillingAddress:
          $ref: "#/components/schemas/soBillingAddressInSalesOrderDto"
        soBillingContact:
          $ref: "#/components/schemas/soBillingContactInSalesOrderDto"
        soShippingAddress:
          $ref: "#/components/schemas/soShippingAddressInSalesOrderDto"
        soShippingContact:
          $ref: "#/components/schemas/soShippingContactInSalesOrderDto"
        status:
          description: "The top part &gt; Status &gt; The status of the document, which can be one of the following options: On hold, Credit hold, Pending aååroval, Rejected, Open, Cancelled, Shipping, Back order, Invoiced, Completed."
          enum:
            - Open
            - Hold
            - CreditHold
            - Completed
            - Cancelled
            - BackOrder
            - Shipping
            - Invoiced
            - PendingApproval
            - Voided
          type: string
        taxTotal:
          description: The top part &gt; VAT total &gt; The total amount of tax paid on the document.
          format: double
          type: number
        taxTotalInBaseCurrency:
          format: double
          type: number
        terms:
          $ref: "#/components/schemas/termsInSalesOrderDto"
        transactionType:
          $ref: "#/components/schemas/transactionTypeInSalesOrderDto"
        vatExemptTotal:
          description: The top part &gt; VAT exempt total &gt; The document total that is exempt from VAT.
          format: double
          type: number
        vatExemptTotalInBaseCurrency:
          format: double
          type: number
        vatTaxableTotal:
          description: The top part &gt; VAT taxable total &gt; The document total that is subject to VAT.
          format: double
          type: number
        vatTaxableTotalInBaseCurrency:
          format: double
          type: number
      type: object
    SalesOrderLineDto:
      properties:
        alternateID:
          description: Alternate ID &gt; The alternate ID for the item, such as the item ID used by the customer.
          type: string
        attachments:
          description: The data containing information about the document attachments
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/BranchNumberDto"
        commissionable:
          description: VAT code &gt; The VAT category of the goods mentioned in this line.
          type: boolean
        completed:
          description: Completed &gt; A check box that can be selected to indicate to the system that this line is completed.
          type: boolean
        discUnitPrice:
          description: Document details tab &gt; Disc. unit price &gt; The unit price, which has been recalculated after the application of discounts.
          format: double
          type: number
        discountAmount:
          description: Document details tab &gt; Discount amount &gt; The amount of the line-level discount that has been applied manually or automatically to this line item (if the item is not a free item).
          format: double
          type: number
        discountCode:
          description: "Mandatory field: Document details tab &gt; Discount details tab &gt; Discount code* &gt; The code of the discount that has been applied to this line."
          type: string
        discountPercent:
          description: Document details tab &gt; Discount percent &gt; The percent of the line-level discount that has been applied manually or automatically to this line item (if the item is not a free item).
          format: double
          type: number
        expirationDate:
          description: Expiration date &gt; The expiration date for the item with the specified lot number.
          format: date-time
          type: string
        extPrice:
          description: Document details tab &gt; Extended cost &gt; The extended price, which is the unit price multiplied by the quantity.
          format: double
          type: number
        externalLink:
          type: string
        freeItem:
          description: A check box that indicates (if selected) that the stock item specified in the row is a free item. This information is collected from the system and not visible on the sales order line.
          type: boolean
        inventory:
          $ref: "#/components/schemas/InventoryNumberDescriptionDto"
        invoiceNbr:
          description: The reference number of the invoice generated for this order. This number is collected from the system and not visible on the sales order line.
          type: string
        isRotRutDeductible:
          type: boolean
        lineDescription:
          description: Document details tab &gt; Line description &gt; The description of the unit.
          type: string
        lineNbr:
          description: Document details tab &gt; Line no. &gt; The line number of the document.
          format: int32
          type: integer
        lotSerialNbr:
          description: Lot/serial no. &gt; The lot or serial number of the item for returns
          type: string
        manualDiscount:
          description: Document details tab &gt; Manual discount &gt; A check box that indicates (if selected) that the discount has been applied manually.
          type: boolean
        markForPO:
          description: Mark for purchase order &gt; A check box that indicates (if selected) that the order line was marked for purchasing (if it has not been shipped completely).
          type: boolean
        note:
          description: Tables in tab &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected to the order.
          type: string
        openQty:
          description: Document details tab &gt; Open qty. &gt; The quantity of the item to be shipped; that is, the total quantity minus the quantity shipped according to closed shipment documents.
          format: double
          type: number
        operation:
          description: The operation to be performed in the workspace to fulfil the order. This information is collected from the system and not visible on the sales order line.
          enum:
            - Issue
            - Receipt
          type: string
        overshipThreshold:
          description: Overship threshold (%) &gt; The maximum percentage of goods shipped (with respect to the ordered quantity) allowed by the customer.
          format: double
          type: number
        poSource:
          description: "Purchase order source &gt; The purchase order source to be used to fulfill this line, which can be one of the following options: Purchase to order, Drop-shipment."
          enum:
            - DropShipToOrder
            - Manufactured
            - None
            - Purchased
            - PurchaseToOrder
            - Transfer
          type: string
        projectTask:
          description: Project task &gt; The particular task of the project with which this document is associated.
          format: int32
          type: integer
        projectTaskCd:
          description: Project task code &gt; The particular task code of the project with which this document is associated.
          type: string
        qtyOnShipments:
          description: Document details tab &gt; Qty. on shipments &gt; A read-only column that displays the quantity of the stock item being prepared for shipment and already shipped for this order.
          format: double
          type: number
        quantity:
          description: Document details tab &gt; Quantity &gt; The quantity of the item sold, measured in the UoM.
          format: double
          type: number
        reasonCode:
          description: Reason code &gt; The reason code to be used for creation or cancellation of the order, if applicable.
          type: string
        requestedOn:
          description: "Mandatory field: The top part  &gt; Requested on* &gt; The date when the customer wants to receive the goods. The default value is the current business date."
          format: date-time
          type: string
        salesPerson:
          $ref: "#/components/schemas/salesPersonInSalesOrderLineDto"
        shipComplete:
          description: "Shipping rule &gt; An option that controls whether incomplete and partial shipments for the order are allowed. (Values: Ship complete, Back order allowed, Cancel remainder)"
          enum:
            - BackOrderAllowed
            - CancelRemainder
            - ShipComplete
          type: string
        shipOn:
          description: Ship on &gt; The date when the item is to be shipped.
          format: date-time
          type: string
        sortOrder:
          description: Document details tab &gt; Line order &gt; The order number of the document line. The system regenerates this number automatically when you reorder the lines in the table.
          format: int32
          type: integer
        subaccount:
          $ref: "#/components/schemas/subaccountInSalesOrderLineDto"
        taxCategory:
          description: VAT code &gt; The VAT category of the goods mentioned in this line.
          type: string
        unbilledAmount:
          description: Document details tab &gt; Amount not yet invoiced &gt; The amount of cancelled shipments and cancelled remainders.
          format: double
          type: number
        undershipThreshold:
          description: Undership threshold (%) &gt; The minimal percentage of goods shipped (with respect to the ordered quantity) to consider the order shipped completely.
          format: double
          type: number
        unitCost:
          description: Document details tab &gt; Unit Cost &gt; The cost of the unit on the sales order.
          format: double
          type: number
        unitPrice:
          description: Document details tab &gt; Unit price &gt; The price of the unit on the sales order.
          format: double
          type: number
        unitPriceInBaseCurrency:
          format: double
          type: number
        uom:
          description: "Mandatory field: Document details tab &gt; UoM* &gt; The unit of measure (UoM) used for the item with this item ID."
          type: string
        warehouse:
          $ref: "#/components/schemas/WarehouseIdDescriptionDto"
      type: object
    SalesOrderLineUpdateDto:
      description: This class represent a Sales Order Line in Sales Order Controller. Used to pass data to server for creating or updating an order line
      properties:
        alternateID:
          $ref: "#/components/schemas/DtoValueOfString"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        commissionable:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        completed:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        discUnitPrice:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        discountAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        discountCode:
          $ref: "#/components/schemas/DtoValueOfString"
        discountPercent:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        expirationDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        externalLink:
          $ref: "#/components/schemas/DtoValueOfString"
        freeItem:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        inventoryId:
          $ref: "#/components/schemas/inventoryIdInSalesOrderLineUpdateDto"
        inventoryNumber:
          $ref: "#/components/schemas/inventoryNumberInSalesOrderLineUpdateDto"
        invoiceNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        isRotRutDeductible:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        lineDescription:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        lotSerialNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        manualDiscount:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        markForPO:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        overshipThreshold:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        poSource:
          $ref: "#/components/schemas/DtoValueOfNullableOfInventoryReplenishmentSources"
        projectTask:
          $ref: "#/components/schemas/DtoValueOfString"
        quantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        reasonCode:
          $ref: "#/components/schemas/DtoValueOfString"
        requestedOn:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        salesOrderOperation:
          $ref: "#/components/schemas/DtoValueOfNullableOfSalesOrderOperations"
        salesPerson:
          $ref: "#/components/schemas/DtoValueOfString"
        shipComplete:
          $ref: "#/components/schemas/DtoValueOfNullableOfSalesOrderShipCompleteStatuses"
        shipOn:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        subaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        taxCategory:
          $ref: "#/components/schemas/DtoValueOfString"
        undershipThreshold:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        unitCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        unitPrice:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        warehouse:
          $ref: "#/components/schemas/DtoValueOfString"
      required:
        - inventoryNumber
      type: object
    SalesOrderQueryParameters:
      properties:
        greaterThanValue:
          description: Filter on Order no. greater than value.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          type: string
        orderType:
          description: Filter by Order type.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        showNotes:
          description: Set to true to include notes.
          type: boolean
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          description: Select to filter on status on order.
          enum:
            - Open
            - Hold
            - CreditHold
            - Completed
            - Cancelled
            - BackOrder
            - Shipping
            - Invoiced
            - PendingApproval
            - Voided
          type: string
      type: object
    SalesOrderShipmentDto:
      properties:
        inventoryDocType:
          type: string
        inventoryRefNo:
          type: string
        invoiceNo:
          type: string
        invoiceType:
          type: string
        shipmentDate:
          format: date-time
          type: string
        shipmentNo:
          type: string
        shipmentType:
          type: string
        shippedQty:
          format: double
          type: number
        shippedVolume:
          format: double
          type: number
        shippedWeight:
          format: double
          type: number
      type: object
    SalesOrderTypeDto:
      description: This class represents a SOOrderType in SalesOrderTypeController. Used to get data.
      properties:
        active:
          description: The top part &gt; Active &gt; A check box that indicates (if selected) that the order type is active,
          type: boolean
        behavior:
          description: Template settings tab &gt; Automation behaviour &gt; An automation behaviour is a set of automation steps. The type of automation behaviour used for the template, which can be Sales order, Invoice, Quote, Credit note, or RMA order.
          enum:
            - SalesOrder
            - Invoice
            - Quote
            - RMAOrder
            - CreditMemo
          type: string
        customerDocumentType:
          description: Template settings tab &gt; Customer document type &gt; The type of customer ledger document to be generated on release of a document of this type.
          enum:
            - Invoice
            - DebitMemo
            - CreditMemo
            - CashSale
            - CashReturn
            - NoUpdate
          type: string
        defaultOperation:
          description: Template settings tab &gt; Default operation &gt; The default inventory operation for the order type, which can be Receipt or Issue.
          enum:
            - Issue
            - Receipt
          type: string
        description:
          description: The top part &gt; Description &gt; The brief description of the order type.
          type: string
        errorInfo:
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        orderType:
          description: "Mandatory field: The top part &gt; Order type* &gt; The ID of the order type, which is a two-character alphanumeric string."
          type: string
      type: object
    SalesOrderTypeQueryParameters:
      properties:
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        orderBy:
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
      type: object
    SalesOrderUpdateDto:
      description: This class represent a Sales Order in Sales Order Controller. Used to pass data to server for creating or updating an order
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        cancelBy:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        canceled:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        contactId:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        customer:
          $ref: "#/components/schemas/customerInSalesOrderUpdateDto"
        customerOrder:
          $ref: "#/components/schemas/DtoValueOfString"
        customerRefNo:
          $ref: "#/components/schemas/DtoValueOfString"
        customerVATZone:
          $ref: "#/components/schemas/DtoValueOfString"
        date:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        emailed:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        fobPoint:
          $ref: "#/components/schemas/DtoValueOfString"
        gln:
          $ref: "#/components/schemas/glnInSalesOrderUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        insurance:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        invoiceSeparately:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        isRotRutDeductible:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        lines:
          items:
            $ref: "#/components/schemas/SalesOrderLineUpdateDto"
          type: array
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        orderNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        orderType:
          $ref: "#/components/schemas/orderTypeInSalesOrderUpdateDto"
        origOrderNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        origOrderType:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        owner:
          $ref: "#/components/schemas/DtoValueOfNullableOfGuid"
        paymentMethod:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentRef:
          $ref: "#/components/schemas/DtoValueOfString"
        preferredWarehouse:
          $ref: "#/components/schemas/DtoValueOfString"
        printDescriptionOnInvoice:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        printNoteOnExternalDocuments:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        printNoteOnInternalDocuments:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        priority:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt16"
        project:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        recalculateShipment:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        requestOn:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        residentialDelivery:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        rotRutDetails:
          $ref: "#/components/schemas/RotRutUpdateDto"
        salesPerson:
          $ref: "#/components/schemas/DtoValueOfString"
        saturdayDelivery:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        schedShipment:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        shipComplete:
          $ref: "#/components/schemas/DtoValueOfNullableOfSalesOrderShipCompleteStatuses"
        shipSeparately:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        shipVia:
          $ref: "#/components/schemas/DtoValueOfString"
        shippingTerms:
          $ref: "#/components/schemas/DtoValueOfString"
        shippingZone:
          $ref: "#/components/schemas/DtoValueOfString"
        soBillingAddress:
          $ref: "#/components/schemas/DtoValueOfSalesOrderAddressUpdateDto"
        soBillingContact:
          $ref: "#/components/schemas/DtoValueOfSalesOrderContactUpdateDto"
        soShippingAddress:
          $ref: "#/components/schemas/DtoValueOfSalesOrderAddressUpdateDto"
        soShippingContact:
          $ref: "#/components/schemas/DtoValueOfSalesOrderContactUpdateDto"
        terms:
          $ref: "#/components/schemas/DtoValueOfString"
        transactionType:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        vatRegistrationId:
          $ref: "#/components/schemas/vatRegistrationIdInSalesOrderUpdateDto"
      required:
        - orderType
      type: object
    SalesOrderV2QueryParameters:
      properties:
        greaterThanValue:
          description: Filter on Order no. greater than value.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        orderType:
          description: Filter by Order type.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        showNotes:
          description: Set to true to include notes.
          type: boolean
        status:
          description: Select to filter on status on order.
          enum:
            - Open
            - Hold
            - CreditHold
            - Completed
            - Cancelled
            - BackOrder
            - Shipping
            - Invoiced
            - PendingApproval
            - Voided
          type: string
      type: object
    SalesPersonDto:
      description: This class represents a salesperson in SalesPersonController. Used for getting data.
      properties:
        commissionHistory:
          items:
            $ref: "#/components/schemas/ARSPCommnHistoryDto"
          type: array
        commissionPct:
          format: double
          type: number
        createdDateTime:
          format: date-time
          type: string
        customers:
          items:
            $ref: "#/components/schemas/CustSalesPeopleDto"
          type: array
        errorInfo:
          type: string
        isActive:
          type: boolean
        lastModifiedDateTime:
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          type: string
        salesSub:
          $ref: "#/components/schemas/SubAccountDescriptionDto"
        salespersonID:
          type: string
      type: object
    SalesPersonIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    SalesPersonQueryParameters:
      properties:
        commissionPct:
          format: double
          type: number
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        isActive:
          type: boolean
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        name:
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        salesSub:
          type: string
        salespersonCD:
          type: string
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
      type: object
    SalesPersonUpdateDto:
      properties:
        commissionPct:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        customers:
          items:
            $ref: "#/components/schemas/CustSalesPeopleUpdateDto"
          type: array
        isActive:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        name:
          $ref: "#/components/schemas/DtoValueOfString"
        salesSub:
          $ref: "#/components/schemas/DtoValueOfString"
        salespersonID:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    SegmentDto:
      properties:
        segmentDescription:
          description: The Segment values window &gt; The Top part &gt; The description of the segment.
          type: string
        segmentId:
          description: The Segment values window &gt; The Top part &gt; The ID of the segment.
          format: int32
          type: integer
        segmentValue:
          description: The Segment values window &gt; The table &gt; The value of the segment, alphanumeric.
          type: string
        segmentValueDescription:
          description: The Segment values window &gt; The table &gt; The description of the segment value.
          type: string
      type: object
    SegmentUpdateDto:
      properties:
        segmentId:
          format: int32
          type: integer
        segmentValue:
          type: string
      type: object
    SendExpenseClaimToApprovalActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    SendTimeCardToApprovalActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    SendToApprovalResult:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    SendToAutoInvoiceArDocumentActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        documentType:
          type: string
        errorInfo:
          type: string
        refNbr:
          type: string
      type: object
    ShipmentAddressDto:
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInShipmentAddressDto"
        county:
          $ref: "#/components/schemas/countyInShipmentAddressDto"
        overrideAddress:
          description: Override address &gt; A check box that you select to not include the default address information and to type new address information.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
      type: object
    ShipmentContactDto:
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        overrideContact:
          description: Override contact &gt; A check box that you select to not use+ the default contact information and to type new contact information.
          type: boolean
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
      type: object
    ShipmentCreateDto:
      properties:
        addressLine1:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine2:
          $ref: "#/components/schemas/DtoValueOfString"
        attention:
          $ref: "#/components/schemas/DtoValueOfString"
        businessName:
          $ref: "#/components/schemas/DtoValueOfString"
        city:
          $ref: "#/components/schemas/DtoValueOfString"
        container:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        controlQuantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        country:
          $ref: "#/components/schemas/DtoValueOfString"
        county:
          $ref: "#/components/schemas/DtoValueOfString"
        customer:
          $ref: "#/components/schemas/DtoValueOfString"
        email:
          $ref: "#/components/schemas/DtoValueOfString"
        fobPoint:
          $ref: "#/components/schemas/DtoValueOfString"
        freightAmt:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        freightCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        fromWarehouse:
          $ref: "#/components/schemas/DtoValueOfString"
        hold:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        insurance:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        modeOfTrasport:
          $ref: "#/components/schemas/DtoValueOfNullableOfTransportationModes"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          $ref: "#/components/schemas/DtoValueOfNullableOfShipmentOperations"
        overrideAddress:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        overrideContact:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        owner:
          $ref: "#/components/schemas/DtoValueOfString"
        phone1:
          $ref: "#/components/schemas/DtoValueOfString"
        postalCode:
          $ref: "#/components/schemas/DtoValueOfString"
        residentialDelivery:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        saturdayDelivery:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        shipVia:
          $ref: "#/components/schemas/DtoValueOfString"
        shipmentDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        shipmentDetailLines:
          items:
            $ref: "#/components/schemas/ShipmentDetailLineUpdateDto"
          type: array
        shipmentPackageLines:
          items:
            $ref: "#/components/schemas/ShipmentPackageLineUpdateDto"
          type: array
        shipmentType:
          $ref: "#/components/schemas/DtoValueOfNullableOfShipmentTypes"
        shippingTerms:
          $ref: "#/components/schemas/DtoValueOfString"
        shippingZone:
          $ref: "#/components/schemas/DtoValueOfString"
        toWarehouse:
          $ref: "#/components/schemas/DtoValueOfString"
        transactionType:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        useCustomerAccount:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
      type: object
    ShipmentDetailLineAddDto:
      properties:
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        shippedQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        warehouse:
          $ref: "#/components/schemas/DtoValueOfString"
      required:
        - inventoryNumber
      type: object
    ShipmentDetailLineDto:
      properties:
        allocations:
          description: Document details tab &gt; Allocations button &gt; Opens the Allocations dialog box, so that you can specify the locations, or lot or serial numbers for the units of the of the item.
          items:
            $ref: "#/components/schemas/AllocationsDto"
          type: array
        alternateID:
          type: string
        description:
          description: Document details tab &gt; Description &gt; A short description for the shipment.
          type: string
        expirationDate:
          description: Document details tab &gt; Expiration date &gt; The expiration date of the item, if it is traced for this item ID.
          format: date-time
          type: string
        externalLink:
          type: string
        freeItem:
          description: Document details tab &gt; Free item &gt; The free item earned by the customer, if applicable. (This column does not appear for transfer.)
          type: boolean
        inventoryNumber:
          description: Document details tab &gt; Item ID &gt; The ID of the item being shipped.
          type: string
        lineNumber:
          description: Document details tab &gt; The line number indicating sequence.
          format: int32
          type: integer
        location:
          $ref: "#/components/schemas/locationInShipmentDetailLineDto"
        lotSerialNbr:
          description: Document details tab &gt; Lot/serial no. &gt; The lot or serial number of particular items of the item.
          type: string
        note:
          type: string
        openQty:
          description: Document details tab &gt; Open qty. &gt; The number of items with the specified quantities still to be shipped.
          format: double
          type: number
        orderLineNbr:
          description: Document details tab &gt; Order line no. &gt; Read only. The order's line number that matches this shipment line.
          format: int32
          type: integer
        orderNbr:
          description: Document details tab &gt; Order no. &gt; The reference number of the document.
          type: string
        orderType:
          description: Document details tab &gt; The type of the document, which is one of the predefined order types or a custom order type.
          type: string
        orderedQty:
          description: Document details tab &gt; Ordered qty. &gt; The quantity of the item ordered with the specified properties.
          format: double
          type: number
        reasonCode:
          description: Document details tab &gt; Reason code &gt; The reason code used for shipments.
          type: string
        shippedQty:
          description: Document details tab &gt; Shipped qty. &gt; The quantity of the item shipped with the specified properties.
          format: double
          type: number
        uom:
          description: Document details tab &gt; UoM &gt; The unit of measure used for the item in shipment.
          type: string
        warehouse:
          $ref: "#/components/schemas/warehouseInShipmentDetailLineDto"
      type: object
    ShipmentDetailLineUpdateDto:
      properties:
        allocations:
          items:
            $ref: "#/components/schemas/AllocationsUpdateDto"
          type: array
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        expirationDate:
          $ref: "#/components/schemas/expirationDateInShipmentDetailLineUpdateDto"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        lotSerialNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        reasonCode:
          $ref: "#/components/schemas/DtoValueOfString"
        shippedQty:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        warehouse:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    ShipmentDto:
      description: This class represents a Shipment in ShipmentController. Used by getting data.
      properties:
        container:
          description: Delivery settings tab &gt; Intrastat section &gt; Container &gt; This check box indicates (if selected) that the shipment gets marked as shipped in container for Intrastat reporting purposes.
          type: boolean
        controlQuantity:
          description: The top part &gt; Control quantity &gt; The control value, which you manually enter as a value equal to the shipped quantity if the Validate shipment total on confirmation check box has been selected in the Sales orders preferences (SO101000) window.
          format: double
          type: number
        currencyId:
          description: Delivery settings tab &gt; Freight currency &gt; By default, it is the currency of the sales order, but you can change it if needed.
          type: string
        customer:
          $ref: "#/components/schemas/customerInShipmentDto"
        deliveryAddress:
          $ref: "#/components/schemas/deliveryAddressInShipmentDto"
        deliveryContact:
          $ref: "#/components/schemas/deliveryContactInShipmentDto"
        errorInfo:
          type: string
        fobPoint:
          $ref: "#/components/schemas/fobPointInShipmentDto"
        freightAmt:
          description: Delivery settings tab &gt; Shipping information section &gt; Freight amt. &gt; The amount of freight the customer will be charged for the shipment.
          format: double
          type: number
        freightCost:
          description: Delivery settings tab &gt; Shipping information section &gt; Freight cost &gt; The freight cost of the shipment.
          format: double
          type: number
        fromWarehouse:
          $ref: "#/components/schemas/fromWarehouseInShipmentDto"
        hold:
          description: The top part &gt; Hold &gt; This check box indicates (if selected) that the documents cannot be processed further until the check box is cleared.
          type: boolean
        insurance:
          description: Delivery settings tab &gt; Shipping information section &gt; Insurance &gt; This check box indicates (if selected) that insurance is required for the shipment.
          type: boolean
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInShipmentDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        modeOfTrasport:
          $ref: "#/components/schemas/modeOfTrasportInShipmentDto"
        note:
          type: string
        operation:
          description: "The top part &gt; Operation &gt; The operation to be performed in the Inventory workspace for this shipment: Issue or Receipt."
          enum:
            - Issue
            - Receipt
          type: string
        owner:
          $ref: "#/components/schemas/ownerInShipmentDto"
        packages:
          description: The top part &gt; Packages &gt; The number of boxes included in this shipment.
          format: int32
          type: integer
        packagesWeight:
          description: The top part &gt; Package weight &gt; The total weight of the shipment that includes the weight of boxes (for boxes determined automatically).
          format: double
          type: number
        residentialDelivery:
          description: Delivery settings tab &gt; Shipping information section &gt; Residential delivery &gt; This check box indicates (if selected) that the shipping address is a residential one.
          type: boolean
        saturdayDelivery:
          description: Delivery settings tab &gt; Shipping information section &gt; Saturday delivery &gt; This check box indicates delivery on saturday.
          type: boolean
        shipVia:
          $ref: "#/components/schemas/shipViaInShipmentDto"
        shipmentDate:
          description: "Mandatory field: The top part &gt; Shipment date* &gt; The date when the document has been created."
          format: date-time
          type: string
        shipmentDetailLines:
          description: Document details tab &gt;
          items:
            $ref: "#/components/schemas/ShipmentDetailLineDto"
          type: array
        shipmentNumber:
          description: The top part &gt; Shipment no &gt; The unique reference number of the document, which is automatically generated by the system.
          type: string
        shipmentOrderLines:
          description: Orders tab &gt;
          items:
            $ref: "#/components/schemas/ShipmentOrderLineDto"
          type: array
        shipmentPackageLines:
          description: Packages tab &gt;
          items:
            $ref: "#/components/schemas/PackageDetailLineDto"
          type: array
        shipmentType:
          description: "The top part &gt; Type &gt; The type of the shipment document, which can be one of the following options: Shipment, Transfer."
          enum:
            - Issue
            - DropShip
            - Transfer
          type: string
        shippedQuantity:
          description: The top part &gt; Shipped quantity &gt; The quantity of goods shipped.
          format: double
          type: number
        shippedVolume:
          description: The top part &gt; Shipped volume &gt; The total volume of the items in the shipment.
          format: double
          type: number
        shippedWeight:
          description: The top part &gt; Shipped weight &gt; The weight of the goods shipped.
          format: double
          type: number
        shippingTerms:
          $ref: "#/components/schemas/shippingTermsInShipmentDto"
        shippingZone:
          $ref: "#/components/schemas/shippingZoneInShipmentDto"
        status:
          description: The top part &gt; Status &gt; The status of the document.
          enum:
            - Open
            - Hold
            - Completed
            - Cancelled
            - Confirmed
            - Invoiced
            - Receipted
            - AutoGenerated
            - PartiallyInvoiced
          type: string
        toWarehouse:
          $ref: "#/components/schemas/toWarehouseInShipmentDto"
        transactionType:
          $ref: "#/components/schemas/transactionTypeInShipmentDto"
        useCustomerAccount:
          type: boolean
      type: object
    ShipmentOrderLineDto:
      properties:
        inventoryDocType:
          description: Orders tab &gt; Inventory doc. type &gt; The type of the inventory document that lists the items for this shipment.
          type: string
        inventoryRefNbr:
          description: Orders tab &gt; Inventory ref. no. &gt; The reference number of the inventory document that lists the items for this shipment.
          type: string
        invoiceNbr:
          description: Orders tab &gt; Invoice no. &gt; The reference number of the invoice for the goods shipped.
          type: string
        invoiceType:
          description: Orders tab &gt; Invoice type &gt; The type of invoice for the goods shipped for the sales order.
          type: string
        note:
          type: string
        orderNbr:
          description: Orders tab &gt; Order no. &gt; The reference number of the sales or transfer order.
          type: string
        orderType:
          description: Orders tab &gt; Order typer &gt; The type of the order.
          type: string
        shippedQty:
          description: Orders tab &gt; Shipped qty. &gt; The quantity of goods shipped in accordance with the order.
          format: double
          type: number
        shippedVolume:
          description: Orders tab &gt; Shipped volume &gt; The volume of the goods shipped in accordance with the sales or transfer order.
          format: double
          type: number
        shippedWeight:
          description: Orders tab &gt; Shipped weight &gt; The weight of the goods shipped in accordance with the order.
          format: double
          type: number
      type: object
    ShipmentPackageLineUpdateDto:
      properties:
        boxId:
          $ref: "#/components/schemas/DtoValueOfString"
        codAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        confirmed:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        customRefNbr1:
          $ref: "#/components/schemas/DtoValueOfString"
        customRefNbr2:
          $ref: "#/components/schemas/DtoValueOfString"
        declaredValue:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        trackingNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        weight:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
      type: object
    ShipmentSOLine:
      properties:
        inventoryId:
          description: Inventory Id, ignored if Order Line Number is specified. If more that one line on the Sales order has this Inventory Id, it will not work.
          type: string
        orderLineNumber:
          description: Sales Order Line Number, optional if Inventory Id is entered
          format: int32
          type: integer
        orderNumber:
          description: Sales Order Number
          type: string
        orderType:
          description: Sales Order Type
          type: string
      type: object
    ShipmentSOOrder:
      properties:
        orderNumber:
          description: Sales Order Number
          type: string
        orderType:
          description: Sales Order Type
          type: string
      type: object
    ShipmentUpdateDeleteLineDto:
      properties:
        deleteSOLine:
          $ref: "#/components/schemas/DtoValueOfBoolean"
      required:
        - deleteSOLine
      type: object
    ShipmentUpdateDto:
      properties:
        addressLine1:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine2:
          $ref: "#/components/schemas/DtoValueOfString"
        attention:
          $ref: "#/components/schemas/DtoValueOfString"
        businessName:
          $ref: "#/components/schemas/DtoValueOfString"
        city:
          $ref: "#/components/schemas/DtoValueOfString"
        container:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        controlQuantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        country:
          $ref: "#/components/schemas/DtoValueOfString"
        county:
          $ref: "#/components/schemas/DtoValueOfString"
        customer:
          $ref: "#/components/schemas/DtoValueOfString"
        email:
          $ref: "#/components/schemas/DtoValueOfString"
        fobPoint:
          $ref: "#/components/schemas/DtoValueOfString"
        freightAmt:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        freightCost:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        fromWarehouse:
          $ref: "#/components/schemas/DtoValueOfString"
        hold:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        insurance:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        modeOfTrasport:
          $ref: "#/components/schemas/DtoValueOfNullableOfTransportationModes"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          $ref: "#/components/schemas/DtoValueOfNullableOfShipmentOperations"
        overrideAddress:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        overrideContact:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        owner:
          $ref: "#/components/schemas/DtoValueOfString"
        phone1:
          $ref: "#/components/schemas/DtoValueOfString"
        postalCode:
          $ref: "#/components/schemas/DtoValueOfString"
        residentialDelivery:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        saturdayDelivery:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        shipVia:
          $ref: "#/components/schemas/DtoValueOfString"
        shipmentDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        shipmentDetailLines:
          items:
            $ref: "#/components/schemas/ShipmentDetailLineUpdateDto"
          type: array
        shipmentPackageLines:
          items:
            $ref: "#/components/schemas/ShipmentPackageLineUpdateDto"
          type: array
        shipmentType:
          $ref: "#/components/schemas/DtoValueOfNullableOfShipmentTypes"
        shippingTerms:
          $ref: "#/components/schemas/DtoValueOfString"
        shippingZone:
          $ref: "#/components/schemas/DtoValueOfString"
        toWarehouse:
          $ref: "#/components/schemas/DtoValueOfString"
        transactionType:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        useCustomerAccount:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
      type: object
    ShipmentsQueryParameters:
      properties:
        customerId:
          format: int32
          type: integer
        customerNumber:
          type: string
        greaterThanValue:
          description: This field has been deprecated and will be removed in future versions. The GreaterThanValue parameter has no effect on the result.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          description: This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result.
          type: string
        pageNumber:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          enum:
            - Open
            - Hold
            - Completed
            - Cancelled
            - Confirmed
            - Invoiced
            - Receipted
            - AutoGenerated
            - PartiallyInvoiced
          type: string
      type: object
    ShippingTermsDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    ShippingZoneDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    SigmaIntrastatTransactionDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          format: int32
          type: integer
      type: object
    StatusPageComponentDto:
      properties:
        created_at:
          type: string
        description:
          type: string
        group_id:
          type: string
        id:
          type: string
        name:
          type: string
        page_id:
          type: string
        position:
          format: int64
          type: integer
        showcase:
          type: boolean
        status:
          type: string
        updated_at:
          type: string
      type: object
    StocktakeDto:
      properties:
        description:
          description: The top part &gt; Description &gt; The description of the stocktaking.
          type: string
        freezeDate:
          description: The top part &gt; Freeze date &gt; An info field that shows the date when the stocktaking document was created.
          format: date-time
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        lines:
          description: Stocktaking details tab &gt;
          items:
            $ref: "#/components/schemas/StocktakeLineDto"
          type: array
        numberOfLines:
          format: int32
          type: integer
        physicalQty:
          description: The top part &gt; Total physical qty. &gt; An info field showing the total actual quantity of all stock items listed in the document.
          format: double
          type: number
        referenceNbr:
          description: The top part &gt; Ref. no. &gt; The reference number of the stocktaking document to be reviewed.
          type: string
        summaryStatus:
          description: The top part &gt; Status &gt; An info field that shows the current status of this stocktaking document.
          enum:
            - Cancelled
            - Completed
            - Counting
            - Entering
          type: string
        varianceCost:
          description: The top part &gt; Total variance cost &gt; An info field showing the total variance cost for all stock items listed in the document.
          format: double
          type: number
        varianceQty:
          description: The top part &gt; Total variance qty. &gt; An info field showing the total variance quantity for the document.
          format: double
          type: number
      type: object
    StocktakeLineDto:
      properties:
        bookQuantity:
          description: Stocktaking details tab &gt; Book quantity &gt; The book quantity of the item, which is calculated based on the system records.
          format: double
          type: number
        expirationDate:
          description: Stocktaking details tab &gt; Expiration date &gt; The expiration date of the item with this specific lot or serial number.
          format: date-time
          type: string
        extVarianceCost:
          description: Stocktaking details tab &gt; Variance cost &gt; The difference between the extended cost calculated based on the book quantity and the extended cost calculated based on the physical quantity for the item.
          format: double
          type: number
        inventory:
          $ref: "#/components/schemas/inventoryInStocktakeLineDto"
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        lineNbr:
          description: Stocktaking details tab &gt; Line no. &gt; The number of the line in the stocktaking document.
          format: int32
          type: integer
        location:
          $ref: "#/components/schemas/locationInStocktakeLineDto"
        lotSerialNbr:
          description: Stocktaking details tab &gt; Lot/serial number &gt; The lot or serial number of the item.
          type: string
        physicalQuantity:
          description: Stocktaking details tab &gt; Physical quantity &gt; The physical quantity of the item as entered manually.
          format: double
          type: number
        reasonCode:
          description: Stocktaking details tab &gt; Reason code &gt; The reason code for the item.
          type: string
        status:
          description: Stocktaking details tab &gt; Status &gt; The status of the line of the stocktaking document, which indicates whether the actual physical quantity has been specified for the line.
          enum:
            - NotEntered
            - Entered
            - Skipped
          type: string
        tagNbr:
          description: Stocktaking details tab &gt; Tag no. &gt; The tag number for the line item, which is the stock item with the properties specified in the line, such as location, subitem, and lot or serial number.
          format: int32
          type: integer
        unitCost:
          description: Stocktaking details tab &gt; Unit cost &gt; The last cost of the item’s base unit as approximation of its unit cost during the count.
          format: double
          type: number
        varianceQuantity:
          description: Stocktaking details tab &gt; Variance quantity &gt; The difference between the book quantity and the physical quantity for the line item.
          format: double
          type: number
        warehouse:
          $ref: "#/components/schemas/warehouseInStocktakeLineDto"
      type: object
    StocktakeLineUpdateDto:
      description: This class represent a Stocktake line in StocktakeContoller. Used to update a Stocktake line
      properties:
        expirationDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        inventoryId:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNbr:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        lotSerialNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        physicalQuantity:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        reasonCode:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    StocktakeLineV2Dto:
      properties:
        baseUnit:
          description: Stocktaking details tab &gt; Base Unit &gt; The base unit for the item.
          type: string
        bookQuantity:
          description: Stocktaking details tab &gt; Book quantity &gt; The book quantity of the item, which is calculated based on the system records.
          format: double
          type: number
        expirationDate:
          description: Stocktaking details tab &gt; Expiration date &gt; The expiration date of the item with this specific lot or serial number.
          format: date-time
          type: string
        extVarianceCost:
          description: Stocktaking details tab &gt; Variance cost &gt; The difference between the extended cost calculated based on the book quantity and the extended cost calculated based on the physical quantity for the item.
          format: double
          type: number
        inventory:
          $ref: "#/components/schemas/inventoryInStocktakeLineV2Dto"
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        lineNbr:
          description: Stocktaking details tab &gt; Line no. &gt; The number of the line in the stocktaking document.
          format: int32
          type: integer
        location:
          $ref: "#/components/schemas/locationInStocktakeLineV2Dto"
        lotSerialNbr:
          description: Stocktaking details tab &gt; Lot/serial number &gt; The lot or serial number of the item.
          type: string
        physicalQuantity:
          description: Stocktaking details tab &gt; Physical quantity &gt; The physical quantity of the item as entered manually.
          format: double
          type: number
        reasonCode:
          description: Stocktaking details tab &gt; Reason code &gt; The reason code for the item.
          type: string
        status:
          description: Stocktaking details tab &gt; Status &gt; The status of the line of the stocktaking document, which indicates whether the actual physical quantity has been specified for the line.
          enum:
            - NotEntered
            - Entered
            - Skipped
          type: string
        tagNbr:
          description: Stocktaking details tab &gt; Tag no. &gt; The tag number for the line item, which is the stock item with the properties specified in the line, such as location, subitem, and lot or serial number.
          format: int32
          type: integer
        unitCost:
          description: Stocktaking details tab &gt; Unit cost &gt; The last cost of the item’s base unit as approximation of its unit cost during the count.
          format: double
          type: number
        varianceQuantity:
          description: Stocktaking details tab &gt; Variance quantity &gt; The difference between the book quantity and the physical quantity for the line item.
          format: double
          type: number
        warehouse:
          $ref: "#/components/schemas/warehouseInStocktakeLineV2Dto"
      type: object
    StocktakePagingQueryParameters:
      properties:
        endWithLine:
          description: Filter by by LineNumber LessEqual EndWithLine.
          format: int32
          type: integer
        expirationDateTime:
          description: Filter by ExpirationDateTime.
          type: string
        expirationDateTimeCondition:
          description: Filter by ExpirationDateTimeCondition.
          type: string
        freezeDateTime:
          description: Filter by FreezeDateTime.
          type: string
        freezeDateTimeCondition:
          description: Filter by FreezeDateTimeCondition.
          type: string
        inventory:
          description: Filter by Inventory.
          type: string
        lastModifiedDateTime:
          description: "System generated value for last modification of transaction/record. Use format: YYYY-MM-DD HH:MM (date and time) to filter from date to present.."
          type: string
        lastModifiedDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        location:
          description: Filter by Location.
          type: string
        lotSerialNumber:
          description: Filter by LotSerialNumber.
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        startWithLine:
          description: Filter by LineNumber GreaterEqual StartWithLine.
          format: int32
          type: integer
        status:
          description: Filter by StocktakeLineStatus.
          enum:
            - NotEntered
            - Entered
            - Skipped
          type: string
        summaryStatus:
          description: Filter by SummaryStatus.
          enum:
            - Cancelled
            - Completed
            - Counting
            - Entering
          type: string
        warehouse:
          description: Filter by Warehouse.
          type: string
      type: object
    StocktakeQueryParameters:
      properties:
        endWithLine:
          description: Filter by by LineNumber LessEqual EndWithLine.
          format: int32
          type: integer
        expirationDateTime:
          description: Filter by ExpirationDateTime.
          type: string
        expirationDateTimeCondition:
          description: Filter by ExpirationDateTimeCondition.
          type: string
        freezeDateTime:
          description: Filter by FreezeDateTime.
          type: string
        freezeDateTimeCondition:
          description: Filter by FreezeDateTimeCondition.
          type: string
        inventory:
          description: Filter by Inventory.
          type: string
        lastModifiedDateTime:
          description: "System generated value for last modification of transaction/record. Use format: YYYY-MM-DD HH:MM (date and time) to filter from date to present.."
          type: string
        lastModifiedDateTimeCondition:
          description: System retrieved information for state/condition.
          type: string
        location:
          description: Filter by Location.
          type: string
        lotSerialNumber:
          description: Filter by LotSerialNumber.
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        startWithLine:
          description: Filter by LineNumber GreaterEqual StartWithLine.
          format: int32
          type: integer
        status:
          description: Filter by StocktakeLineStatus.
          enum:
            - NotEntered
            - Entered
            - Skipped
          type: string
        summaryStatus:
          description: Filter by SummaryStatus.
          enum:
            - Cancelled
            - Completed
            - Counting
            - Entering
          type: string
        warehouse:
          description: Filter by Warehouse.
          type: string
      type: object
    StocktakeUpdateDto:
      description: This class represents a Stocktake in StocktakeController. Used to update Stocktake.
      properties:
        lines:
          items:
            $ref: "#/components/schemas/StocktakeLineUpdateDto"
          type: array
      type: object
    StocktakeV2Dto:
      properties:
        description:
          description: The top part &gt; Description &gt; The description of the stocktaking.
          type: string
        errorInfo:
          type: string
        freezeDate:
          description: The top part &gt; Freeze date &gt; An info field that shows the date when the stocktaking document was created.
          format: date-time
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        lines:
          description: Stocktaking details tab &gt;
          items:
            $ref: "#/components/schemas/StocktakeLineV2Dto"
          type: array
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        numberOfLines:
          format: int32
          type: integer
        physicalQty:
          description: The top part &gt; Total physical qty. &gt; An info field showing the total actual quantity of all stock items listed in the document.
          format: double
          type: number
        referenceNbr:
          description: The top part &gt; Ref. no. &gt; The reference number of the stocktaking document to be reviewed.
          type: string
        summaryStatus:
          description: The top part &gt; Status &gt; An info field that shows the current status of this stocktaking document.
          enum:
            - Cancelled
            - Completed
            - Counting
            - Entering
          type: string
        varianceCost:
          description: The top part &gt; Total variance cost &gt; An info field showing the total variance cost for all stock items listed in the document.
          format: double
          type: number
        varianceQty:
          description: The top part &gt; Total variance qty. &gt; An info field showing the total variance quantity for the document.
          format: double
          type: number
      type: object
    StocktakeV2ExceptionDto:
      properties:
        errorCode:
          description: Exception error code
          enum:
            - NotDefined
            - InventoryIDNotFound
            - LocationIDNotFound
            - ReasonCodeNotFound
            - ItemIsNotStockItem
            - CombinationAlreadyInUse
            - CombinationNotAllowed
            - LotSerialNumberAlreadyInUse
          type: string
        expirationDate:
          format: date-time
          type: string
        inventoryId:
          type: string
        locationId:
          type: string
        lotSerialNumber:
          type: string
        message:
          description: Exception message
          type: string
        physicalQuantity:
          format: double
          type: number
        reasonCode:
          type: string
      type: object
    SubAccountDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    SubAccountDto:
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
      type: object
    SubAccountUpdateDto:
      properties:
        active:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        subaccountId:
          $ref: "#/components/schemas/subaccountIdInSubAccountUpdateDto"
        subaccountNumber:
          $ref: "#/components/schemas/subaccountNumberInSubAccountUpdateDto"
      required:
        - subaccountNumber
      type: object
    SubaccountQueryParameters:
      properties:
        active:
          description: If the SubAccount is active
          type: boolean
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: Pagination parameter. Number of items to be collected
          format: int32
          type: integer
      type: object
    SubmitExpenseClaimActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    SubmitTimeCardActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    SubscriptionDto:
      properties:
        event:
          description: The event type for which the subscription is made
          type: string
        hookUri:
          description: The URL where notifications will be sent
          type: string
        id:
          description: The identifier of a subscription. Will be populated only on successful POST operation
          format: int64
          type: integer
      required:
        - event
        - hookUri
      type: object
    SupplierBalanceDto:
      properties:
        balance:
          format: double
          type: number
        lastModifiedDateTime:
          format: date-time
          type: string
        supplier:
          $ref: "#/components/schemas/SupplierDescriptionDto"
        totalPurchaseInvoicePeriod:
          $ref: "#/components/schemas/WithoutWithVatDto"
        totalPurchaseInvoiceYear:
          $ref: "#/components/schemas/WithoutWithVatDto"
        totalSentForApproval:
          $ref: "#/components/schemas/WithoutWithVatDto"
        unreleasedPurchasesNotInApproval:
          $ref: "#/components/schemas/WithoutWithVatDto"
      type: object
    SupplierBalanceQueryParameters:
      properties:
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          type: string
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
      type: object
    SupplierClassDto:
      properties:
        attributes:
          items:
            $ref: "#/components/schemas/ClassAttributeDto"
          type: array
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    SupplierDescriptionDto:
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
      type: object
    SupplierDetailsDto:
      properties:
        active:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        currencyID:
          $ref: "#/components/schemas/DtoValueOfString"
        default:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        eoq:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        lotSize:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        maxOrderQty:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        minOrderFreq:
          $ref: "#/components/schemas/DtoValueOfInt32"
        minOrderQty:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        override:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        purchaseUnit:
          $ref: "#/components/schemas/DtoValueOfString"
        shipmentLeadTime:
          $ref: "#/components/schemas/DtoValueOfInt16"
        supplierID:
          $ref: "#/components/schemas/DtoValueOfString"
        supplierItemID:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    SupplierDetailsLineDto:
      properties:
        active:
          type: boolean
        currencyId:
          type: string
        default:
          type: boolean
        eoq:
          format: double
          type: number
        lastSupplierPrice:
          format: double
          type: number
        leadTime:
          format: int32
          type: integer
        location:
          type: string
        lotSize:
          format: double
          type: number
        maxOrderQty:
          format: double
          type: number
        minOrderFreq:
          format: int32
          type: integer
        minOrderQty:
          format: double
          type: number
        override:
          type: boolean
        purchaseUnit:
          type: string
        shipmentLeadTime:
          format: int32
          type: integer
        supplierId:
          type: string
        supplierItemId:
          type: string
        supplierName:
          type: string
        warehouse:
          type: string
      type: object
    SupplierDocumentDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInSupplierDocumentDto"
        amount:
          description: Document details tab &gt; Amount &gt; Read-only. The total amount for the specified quantity of items or services of this type (after the discount has been taken).
          format: double
          type: number
        amountInCurrency:
          description: An automatic calculation of the amount with the currency set as default for supplier.
          format: double
          type: number
        approvalStatus:
          description: The Top part &gt; Approval status &gt; The status of the document in Visma.net Approval. [New, Canceled, SentToApproval, ReceivedByApproval, InProgressApproval, RejectedInApproval, ApprovedInApproval, ActiveWorkflowApproval.
          enum:
            - New
            - Canceled
            - SentToApproval
            - ReceivedByApproval
            - InProgressApproval
            - RejectedInApproval
            - ApprovedInApproval
            - ActiveWorkflowApproval
          type: string
        balance:
          description: The Top part &gt; Balance &gt; The balance of the supplier ledger document after VAT (if inclusive) and the discount as specified in the tabs below.
          format: double
          type: number
        balanceInCurrency:
          description: Background calculation giving you the Balance in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        branch:
          $ref: "#/components/schemas/branchInSupplierDocumentDto"
        branchNumber:
          $ref: "#/components/schemas/BranchNumberDto"
        cashAccount:
          description: Financial details tab &gt; The payment information section &gt; Cash account &gt; The cash account associated with the payment method.
          type: string
        cashDiscount:
          description: The Top part &gt; Cash discount &gt; The cash discount amount that has been or will be taken in the document, which the system calculates based in the specified credit terms.
          format: double
          type: number
        cashDiscountInCurrency:
          description: Background calculation giving you the Cash discount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        closedFinancialPeriod:
          description: Format YYYYMM.
          type: string
        createdDateTime:
          format: date-time
          type: string
        currencyId:
          description: The Top part &gt; Currency &gt; The currency of the document.
          type: string
        date:
          description: The Top part &gt; Date* &gt; The date of the original supplier ledger document; by default, it is the current date, which can be changed.
          format: date-time
          type: string
        description:
          description: The Top part &gt; Description &gt; A user-provided description for this supplier ledger document.
          type: string
        documentType:
          description: "The top part &gt; Top part &gt; Type &gt; The type of the document. The following types are available: Purchase invoice, credit adjustment, purchase credit note, prepayment."
          enum:
            - Check
            - CreditAdj
            - DebitAdj
            - Invoice
            - Prepayment
            - QuickCheck
            - Refund
            - VoidCheck
            - VoidQuickCheck
          type: string
        dueDate:
          description: The Top part &gt; Due date* &gt; The date when payment for the document is due in accordance with the supplier's credit terms.
          format: date-time
          type: string
        errorInfo:
          type: string
        financialPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInSupplierDocumentDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: The table &gt; Document details tab and Applications tab &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected with to invoice.
          type: string
        origInvoiceDate:
          description: The Top part &gt; OrigInvoiceDate* &gt; The original invoice date of the original supplier ledger document; by default, it is the current date, which can be changed.
          format: date-time
          type: string
        payDate:
          description: The Financial details tab &gt; The Payment information section &gt; Pay date* &gt; The date when the invoice should be paid. The date is the difference between the document due date or discount date and the number of days specified in the Payment lead time field in AP303000.
          format: date-time
          type: string
        paymentMessage:
          description: The Financial details tab &gt; The Payment information section &gt; Payment message &gt; The message connected with the payment.
          type: string
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInSupplierDocumentDto"
        postPeriod:
          description: The Top part &gt; Post period* &gt; The post period of the payment document. Format MMYYYY.
          type: string
        referenceNumber:
          type: string
        status:
          description: The Top part &gt; Document status &gt; A read-only field that shows the status of the supplier ledger document:[Hold, Balanced, Voided, Scheduled, Open, Closed, Printed, Prebooked, Reserved]
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - Printed
            - Prebooked
            - Reserved
          type: string
        subaccount:
          $ref: "#/components/schemas/subaccountInSupplierDocumentDto"
        supplier:
          $ref: "#/components/schemas/supplierInSupplierDocumentDto"
        supplierReference:
          description: The Top part &gt; Supplier ref. &gt; The document's original reference number as assigned by the supplier (for informational purposes).
          type: string
        vatTotal:
          description: The Top part &gt; VAT total &gt; The total amount of tax paid in the document.
          format: double
          type: number
        vatTotalInCurrency:
          description: Background calculation giving you the VAT total in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
      type: object
    SupplierDocumentQueryParameters:
      properties:
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        documentType:
          description: By type of document.
          enum:
            - Invoice
            - CreditAdj
            - DebitAdj
            - Prepayment
          type: string
        expandApproval:
          description: Set to true to include approval information.
          type: boolean
        expandNote:
          description: Set to true to include description.
          type: boolean
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        project:
          description: Filter by the project with which the document is associated.
          type: string
        released:
          description: Parameter for showing if invoice has been released or not.
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          description: The status of the document
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - Printed
            - Prebooked
            - Reserved
          type: string
      type: object
    SupplierDto:
      description: This class represents a supplier in SupplierController. Used by getting data.
      properties:
        accountReference:
          description: General information tab &gt; Main contact section &gt; Account ref. &gt; An optional text field that can contain a reference to your company's account number in the supplier's system.
          type: string
        accountUsedForPayment:
          description: Payment settings tab &gt; Payment settings section &gt; Account used for payment &gt; The bank account to be used for payments to the supplier.
          enum:
            - IBAN
            - BBAN
            - BANKGIRO
            - PLUSGIRO
          type: string
        attributes:
          description: Attributes tab &gt;
          items:
            $ref: "#/components/schemas/AttributeIdValueDto"
          type: array
        cashAccount:
          description: Payment settings tab &gt; Payment settings section &gt; Cash account &gt; The cash account to be used for operations with the supplier. You must select a cash account.
          type: string
        chargeBearer:
          description: Payment settings tab &gt; Payment settings section &gt; Charge bearer &gt; The party that will pay possible expenses connected with the payment.
          enum:
            - Payer
            - Beneficiary
            - Shared
            - ServiceLevel
          type: string
        corporateId:
          description: Purchase settings tab &gt; Default location settings section &gt; National insurance no. &gt; The supplier’s national insurance number associated with the location.
          type: string
        creditTerms:
          $ref: "#/components/schemas/creditTermsInSupplierDto"
        currencyId:
          description: General information tab &gt; Financial settings section &gt; Currency ID &gt; The currency that is used in operations with the supplier.
          type: string
        documentLanguage:
          description: General information tab &gt; Financial settings section &gt; Document language &gt; The language of the documents to be printed to the suppliers of the class.
          type: string
        errorInfo:
          type: string
        glAccounts:
          $ref: "#/components/schemas/glAccountsInSupplierDto"
        internalId:
          format: int32
          type: integer
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInSupplierDto"
        mainAddress:
          $ref: "#/components/schemas/mainAddressInSupplierDto"
        mainContact:
          $ref: "#/components/schemas/mainContactInSupplierDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          description: "Mandatory field: The top part &gt; Supplier name* &gt; The name of the supplier to appear in the system, which may be a trade name or a doing-business-as (DBA) name."
          type: string
        note:
          type: string
        number:
          description: "Mandatory field: The top part &gt; Supplier ID* &gt; The ID of the supplier account."
          type: string
        parentRecord:
          $ref: "#/components/schemas/parentRecordInSupplierDto"
        paySeparately:
          description: Payment settings tab &gt; Payment settings section &gt; Pay separately &gt; A check box that indicates (if selected) that each supplier document should be paid by a separate payment.
          type: boolean
        paymentBy:
          description: Payment settings tab &gt; Payment settings section &gt; Payment by &gt; An option that defines how to calculate the date when this supplier should be paid.
          enum:
            - DueDate
            - DiscountDate
          type: string
        paymentLeadTime:
          description: Payment settings tab &gt; Payment settings section &gt; Payment lead time (days) &gt; The number of days required for the payment to be delivered to the supplier's location.
          format: int32
          type: integer
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInSupplierDto"
        paymentRefDisplayMask:
          description: Payment settings tab &gt; Payment settings section &gt; Payment ref. display mask &gt; This is a rule (mask) for how the payment reference number will be displayed.
          type: string
        remitAddress:
          $ref: "#/components/schemas/remitAddressInSupplierDto"
        remitContact:
          $ref: "#/components/schemas/remitContactInSupplierDto"
        retainageApply:
          description: Payment settings tab &gt; Retainage settings section &gt; Apply retainage &gt; A check box that indicates (if selected) that by default, invoices with retainage are created for the supplier in the Purchase invoices window.
          type: boolean
        retainageCashAccountID:
          description: Payment settings tab &gt; Retainage settings section &gt; Retainage cash account &gt; The cash account to be used to record retainages for this supplier.
          type: string
        retainagePct:
          description: Payment settings tab &gt; Retainage settings section &gt; Retainage (%) &gt; The default percent to be retained in invoices for the supplier.
          format: double
          type: number
        status:
          description: "Mandatory field: The top part &gt; Status* &gt; The status of the supplier account."
          enum:
            - Active
            - OnHold
            - HoldPayments
            - Inactive
            - OneTime
          type: string
        supplierAddress:
          $ref: "#/components/schemas/supplierAddressInSupplierDto"
        supplierClass:
          $ref: "#/components/schemas/supplierClassInSupplierDto"
        supplierContact:
          $ref: "#/components/schemas/supplierContactInSupplierDto"
        supplierPaymentMethodDetails:
          description: This class represents a Payment Method Detail in SupplierController. Used to get data for SupplierPaymentMethodDetails of a Supplier.
          items:
            $ref: "#/components/schemas/SupplierPaymentMethodDetailDto"
          type: array
        vatRegistrationId:
          description: Purchase settings tab &gt; Default location settings section &gt; VAT registration ID &gt; The supplier's VAT registration ID associated with the location.
          type: string
        vatZone:
          $ref: "#/components/schemas/vatZoneInSupplierDto"
      type: object
    SupplierGlAccountsDto:
      properties:
        expenseAccount:
          $ref: "#/components/schemas/expenseAccountInSupplierGlAccountsDto"
        expenseAccountImport:
          $ref: "#/components/schemas/expenseAccountImportInSupplierGlAccountsDto"
        expenseAccountNonTax:
          $ref: "#/components/schemas/expenseAccountNonTaxInSupplierGlAccountsDto"
        expenseEUAccount:
          $ref: "#/components/schemas/expenseEUAccountInSupplierGlAccountsDto"
        expenseSubaccount:
          $ref: "#/components/schemas/expenseSubaccountInSupplierGlAccountsDto"
        supplierAccount:
          $ref: "#/components/schemas/supplierAccountInSupplierGlAccountsDto"
      type: object
    SupplierGlAccountsUpdateDto:
      properties:
        expenseAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseAccountImport:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseAccountNonTax:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseEUAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        expenseSubaccount:
          $ref: "#/components/schemas/DtoValueOfString"
        supplierAccount:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    SupplierInvoiceDto:
      description: This class represents a ApInvoice in SupplierInvoiceController. Used by getting data.
      properties:
        amount:
          description: The Top part &gt; Amount &gt; The amount to be paid for the document. Equal to the amount (or to the sum of amounts) shown in the Amount column of the Document details tab.
          format: double
          type: number
        approvalDetails:
          $ref: "#/components/schemas/approvalDetailsInSupplierInvoiceDto"
        approvalStatus:
          description: The Top part &gt; Approval status &gt; The status of the document in Visma.net Approval. [New, Canceled, SentToApproval, ReceivedByApproval, InProgressApproval, RejectedInApproval, ApprovedInApproval, ActiveWorkflowApproval.
          enum:
            - New
            - Canceled
            - SentToApproval
            - ReceivedByApproval
            - InProgressApproval
            - RejectedInApproval
            - ApprovedInApproval
            - ActiveWorkflowApproval
          type: string
        attachments:
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        balance:
          description: The Top part &gt; Balance &gt; The balance of the supplier ledger document after VAT (if inclusive) and the discount as specified in the tabs below.
          format: double
          type: number
        balanceInCurrency:
          description: Background calculation giving you the Balance in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        branchNumber:
          $ref: "#/components/schemas/BranchNumberDto"
        buyerReference:
          description: The Top part &gt; Supplier ref. &gt; The document's original reference number as assigned by the supplier (for informational purposes).
          type: string
        cashAccount:
          description: Financial details tab &gt; The payment information section &gt; Cash account &gt; The cash account associated with the payment method.
          type: string
        cashDiscount:
          description: The Top part &gt; Cash discount &gt; The cash discount amount that has been or will be taken in the document, which the system calculates based in the specified credit terms.
          format: double
          type: number
        cashDiscountDate:
          description: The Top part &gt; Cash discount date &gt; The end date of the cash discount period, which the system calculates by using the supplier's credit terms.
          format: date-time
          type: string
        cashDiscountInCurrency:
          description: Background calculation giving you the Cash discount in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        closedFinancialPeriod:
          description: Format YYYYMM.
          type: string
        createdDateTime:
          format: date-time
          type: string
        creditTerms:
          $ref: "#/components/schemas/creditTermsInSupplierInvoiceDto"
        currencyId:
          description: The Top part &gt; Currency &gt; The currency of the document.
          type: string
        curyRetainageTotal:
          format: double
          type: number
        curyRetainageUnreleasedAmt:
          format: double
          type: number
        date:
          description: The Top part &gt; Date* &gt; The date of the original supplier ledger document; by default, it is the current date, which can be changed.
          format: date-time
          type: string
        description:
          description: The Top part &gt; Description &gt; A user-provided description for this supplier ledger document.
          type: string
        detailTotal:
          description: The Top part &gt; Detail total &gt; The document total as specified in the Document details tab.
          format: double
          type: number
        detailTotalInCurrency:
          description: Background calculation giving you the Detail total in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        discountTotal:
          description: The Top part &gt; Discount total &gt; The discount total calculated for the document. This total includes discounts of the Group and Document levels.
          format: double
          type: number
        discountTotalInCurrency:
          description: Background calculation giving you the Discount total in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        documentType:
          description: "The top part &gt; Top part &gt; Type &gt; The type of the document. The following types are available: Purchase invoice, credit adjustment, purchase credit note, prepayment."
          enum:
            - Check
            - CreditAdj
            - DebitAdj
            - Invoice
            - Prepayment
            - QuickCheck
            - Refund
            - VoidCheck
            - VoidQuickCheck
          type: string
        documentVersionNumber:
          format: int64
          type: integer
        dueDate:
          description: The Top part &gt; Due date* &gt; The date when payment for the document is due in accordance with the supplier's credit terms.
          format: date-time
          type: string
        errorInfo:
          type: string
        exchangeRate:
          description: The Top part &gt; Currency &gt; The currency of the document.
          format: double
          type: number
        financialPeriod:
          description: The financial period to which the transactions recorded in the document should be posted. Format YYYYMM.
          type: string
        hold:
          description: The Top part &gt; Hold &gt; A check box that indicates that the status of the supplier ledger document is On hold.
          type: boolean
        invoiceLines:
          description: Transaction lines
          items:
            $ref: "#/components/schemas/SupplierInvoiceLineDto"
          type: array
        lastModifiedDateTime:
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInSupplierInvoiceDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        note:
          description: The table &gt; Document details tab and Applications tab &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected with to invoice.
          type: string
        origInvoiceDate:
          description: The Top part &gt; OrigInvoiceDate* &gt; The original invoice date of the original supplier ledger document; by default, it is the current date, which can be changed.
          format: date-time
          type: string
        payDate:
          description: The Financial details tab &gt; The Payment information section &gt; Pay date* &gt; The date when the invoice should be paid. The date is the difference between the document due date or discount date and the number of days specified in the Payment lead time field in AP303000.
          format: date-time
          type: string
        paySelected:
          description: The Financial details tab &gt; The Payment information section &gt; Approved for payment &gt; When set to true indicates that the document is approved for payment.
          type: boolean
        paymentMessage:
          description: The Financial details tab &gt; The Payment information section &gt; Payment message &gt; The message connected with the payment.
          type: string
        paymentMethod:
          $ref: "#/components/schemas/paymentMethodInSupplierInvoiceDto"
        paymentRefNo:
          description: The Top part &gt; Payment ref.no &gt; The payment reference number of the document.
          type: string
        postPeriod:
          description: The Top part &gt; Post period* &gt; The post period of the payment document. Format MMYYYY.
          type: string
        referenceNumber:
          type: string
        retainageApply:
          description: The Top part &gt; Apply retainage &gt; A check box that indicates (if selected) that this invoice is an invoice with retainage.
          type: boolean
        roundingDiff:
          description: The Top part &gt; Rounding diff. &gt; The difference between the original invoice amount (including the VAT amount calculated by the system) and rounded invoice amount (including the VAT amount modified by a user for VAT-inclusive items).
          format: double
          type: number
        roundingDiffInCurrency:
          description: Background calculation giving you the Rounding diff. in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        status:
          description: The Top part &gt; Document status &gt; A read-only field that shows the status of the supplier ledger document:[Hold, Balanced, Voided, Scheduled, Open, Closed, Printed, Prebooked, Reserved]
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - Printed
            - Prebooked
            - Reserved
          type: string
        supplier:
          $ref: "#/components/schemas/supplierInSupplierInvoiceDto"
        supplierReference:
          description: The Top part &gt; Supplier ref. &gt; The document's original reference number as assigned by the supplier (for informational purposes).
          type: string
        supplierTaxZone:
          $ref: "#/components/schemas/supplierTaxZoneInSupplierInvoiceDto"
        taxCalculationMode:
          description: The Financial details tab &gt; The VAT section &gt; VAT calculation mode &gt; The VAT calculation mode, which defines which amounts (VAT-inclusive or VAT-exclusive) should be entered in the detail lines of a document (TaxSetting, Gross, Net)
          enum:
            - TaxSetting
            - Gross
            - Net
          type: string
        taxDetailLines:
          description: The VAT details tab &gt;
          items:
            $ref: "#/components/schemas/TaxDetailDto"
          type: array
        vatAmount:
          description: The Top part &gt; VAT amount &gt; The VAT amount to be paid for the document. Enter this amount manually according to the VAT amount specified in the original document.
          format: double
          type: number
        vatExemptTotal:
          description: The Top part &gt; VAT exempt total &gt; The document total that is exempt from VAT.
          format: double
          type: number
        vatExemptTotalInCurrency:
          description: Background calculation giving you the VAT exempt total in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        vatTaxableTotal:
          description: The Top part &gt; VAT taxable total &gt; The document total that is subjected to VAT.
          format: double
          type: number
        vatTaxableTotalInCurrency:
          description: Background calculation giving you the VAT taxable total in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        vatTotal:
          description: The Top part &gt; VAT total &gt; The total amount of tax paid in the document.
          format: double
          type: number
        vatTotalInCurrency:
          description: Background calculation giving you the VAT total in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
        withholdingTax:
          description: The Top part &gt; With. tax &gt; The amount of withholding tax calculated for the document, if applicable.
          format: double
          type: number
        withholdingTaxInCurrency:
          description: Background calculation giving you the With. tax in your default currency. This field is applicable if the amount is given in another currency than your default.
          format: double
          type: number
      type: object
    SupplierInvoiceLineDto:
      properties:
        account:
          $ref: "#/components/schemas/accountInSupplierInvoiceLineDto"
        attachments:
          description: The data containing information about the document attachments
          items:
            $ref: "#/components/schemas/AttachmentDto"
          type: array
        branchNumber:
          $ref: "#/components/schemas/branchNumberInSupplierInvoiceLineDto"
        cost:
          description: The table &gt; Cost &gt; The unit cost of the item or service received from the supplier.
          format: double
          type: number
        costInCurrency:
          description: Background calculation giving you the Cost in the selected currency.This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        curyRetainageAmt:
          format: double
          type: number
        deferralCode:
          description: The table &gt; Deferral code &gt; The deferral code assigned to the stock item or non-stock item specified in this document line.
          type: string
        deferralSchedule:
          description: The table &gt; Original deferral schedule &gt; A read-only column filled in by the system in the Debit adjustment documents created by the reversing process.It shows the ID of the deferral schedule associated with the original document (such as a purchase invoice).
          format: int32
          type: integer
        deferralScheduleNbr:
          description: The public CD/Code of the deferral schedule visible to user
          type: string
        discountAmount:
          description: The table &gt; Discount amount &gt; The amount of the line-level discount that has been applied manually or automatically to this line.
          format: double
          type: number
        discountAmountInCurrency:
          description: Background calculation giving you the Discount amount in the selected currency.This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        discountPercent:
          description: The table &gt; Discount percent &gt; The percent of the line-level discount that has been applied manually or automatically.
          format: double
          type: number
        discountUnitCost:
          description: Background calculation giving you the Discount unit cost in the default currency.
          format: double
          type: number
        discountUnitCostInCurrency:
          description: Background calculation giving you the Discount unit cost in the selected currency.This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        externalInventoryId:
          description: The table &gt; External inventory id &gt; External inventory number
          type: string
        inventoryNumber:
          description: The table &gt; Item ID &gt; The unique ID of the particular item or service delivered by the supplier.
          type: string
        lineNumber:
          description: The table &gt; Number at the left indicating the line number of the table.
          format: int32
          type: integer
        manualDiscount:
          description: The table &gt; Manual discount &gt; A check box that indicates (if selected) that the discount has been applied manually.
          type: boolean
        note:
          description: The table &gt; Icon Notes &gt; Pop-up window for providing any user-defined text connected with to invoice.
          type: string
        poLineNr:
          description: The table &gt; Purchase order line &gt; The line number of the purchase order line linked to this line of the invoice.
          format: int32
          type: integer
        poNumber:
          description: The table &gt; Purchase order number &gt; The number of the purchase order linked to this line of the invoice.
          type: string
        poReceiptLineNbr:
          description: The table &gt; Purchase order receipt line &gt; The line number of the purchase receipt's line that is linked to this line of the invoice.
          format: int32
          type: integer
        poReceiptNbr:
          description: The table &gt; Purchase order receipt no. &gt; The number of the purchase receipt linked to this line of the invoice.
          type: string
        project:
          $ref: "#/components/schemas/projectInSupplierInvoiceLineDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInSupplierInvoiceLineDto"
        quantity:
          description: The table &gt; Quantity &gt; The quantity of the item or service to be delivered by the supplier.
          format: double
          type: number
        retainagePct:
          format: double
          type: number
        splitHierarchy:
          description: The table &gt; Split hierarchy &gt; The number of the original row that has been split.
          type: string
        stockItem:
          description: Background information indicating whether the item is a stock item or not.
          type: boolean
        subaccount:
          $ref: "#/components/schemas/subaccountInSupplierInvoiceLineDto"
        termEndDate:
          format: date-time
          type: string
        termStartDate:
          format: date-time
          type: string
        transactionDescription:
          description: The table &gt; Transaction descr. &gt; Any description relevant to the transaction. An alphanumeric string of up to 30 characters may be used.
          type: string
        unitCost:
          description: The table &gt; Unit cost &gt; The unit cost of the item.
          format: double
          type: number
        unitCostInCurrency:
          description: Background calculation giving you the Unit cost in the selected currency.This field is applicable if the amount is given in a another currency than your default.
          format: double
          type: number
        uom:
          description: The table &gt; UoM &gt; The unit of measure for the item.
          type: string
        vatCode:
          $ref: "#/components/schemas/vatCodeInSupplierInvoiceLineDto"
      type: object
    SupplierInvoiceLineUpdateDto:
      properties:
        accountNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        branch:
          $ref: "#/components/schemas/branchInSupplierInvoiceLineUpdateDto"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        costInCurrency:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        curyRetainageAmt:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        deferralCode:
          $ref: "#/components/schemas/DtoValueOfString"
        deferralSchedule:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        discountAmountInCurrency:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        discountPercent:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        discountUnitCostInCurrency:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        inventoryNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        linkLine:
          $ref: "#/components/schemas/LinkLineDto"
        manualDiscount:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        projectId:
          $ref: "#/components/schemas/DtoValueOfString"
        projectTaskId:
          $ref: "#/components/schemas/DtoValueOfString"
        quantity:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        retainagePct:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        splitHierarchy:
          $ref: "#/components/schemas/DtoValueOfString"
        splitLine:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        subaccount:
          items:
            $ref: "#/components/schemas/SegmentUpdateDto"
          type: array
        termEndDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        termStartDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        transactionDescription:
          $ref: "#/components/schemas/DtoValueOfString"
        undoSplitLine:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        unitCostInCurrency:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        uom:
          $ref: "#/components/schemas/DtoValueOfString"
        vatCodeId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    SupplierInvoiceQueryParameters:
      properties:
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        documentType:
          description: By type of document.
          enum:
            - Invoice
            - CreditAdj
            - DebitAdj
            - Prepayment
          type: string
        expandApproval:
          description: Set to true to include approval information.
          type: boolean
        expandAttachment:
          description: Set to true if you want to see all attachments regarding this document.
          type: boolean
        expandNote:
          description: Set to true to include description.
          type: boolean
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        project:
          description: Filter by the project with which the document is associated.
          type: string
        released:
          description: Parameter for showing if invoice has been released or not.
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          description: The status of the document
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - Printed
            - Prebooked
            - Reserved
          type: string
      type: object
    SupplierInvoiceUpdateDto:
      properties:
        addPOReceiptLines:
          items:
            $ref: "#/components/schemas/AddPOReceiptLineDto"
          type: array
        addPurchaseOrders:
          items:
            $ref: "#/components/schemas/AddPurchaseOrderDto"
          type: array
        amount:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        applyRetainage:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        approvalDetails:
          $ref: "#/components/schemas/ApprovalDetailsUpdateDto"
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        cashDiscountDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        creditTermsId:
          $ref: "#/components/schemas/DtoValueOfString"
        currencyId:
          $ref: "#/components/schemas/DtoValueOfString"
        date:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        documentType:
          $ref: "#/components/schemas/DtoValueOfNullableOfSupplierInvoiceTypes"
        dueDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        exchangeRate:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        financialPeriod:
          $ref: "#/components/schemas/financialPeriodInSupplierInvoiceUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        invoiceLines:
          items:
            $ref: "#/components/schemas/SupplierInvoiceLineUpdateDto"
          type: array
        locationId:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        origInvoiceDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        payDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        paySelected:
          $ref: "#/components/schemas/paySelectedInSupplierInvoiceUpdateDto"
        paymentMessage:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentMethod:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentRefNo:
          $ref: "#/components/schemas/DtoValueOfString"
        postPeriod:
          $ref: "#/components/schemas/postPeriodInSupplierInvoiceUpdateDto"
        referenceNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        roundingDiffInCurrency:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        supplierNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        supplierReference:
          $ref: "#/components/schemas/DtoValueOfString"
        supplierTaxZone:
          $ref: "#/components/schemas/DtoValueOfString"
        taxCalculationMode:
          $ref: "#/components/schemas/DtoValueOfNullableOfTaxCalcMode"
        taxDetailLines:
          items:
            $ref: "#/components/schemas/TaxDetailUpdateDto"
          type: array
        validateLineDetails:
          $ref: "#/components/schemas/validateLineDetailsInSupplierInvoiceUpdateDto"
        vatAmount:
          $ref: "#/components/schemas/DtoValueOfDecimal"
      type: object
    SupplierLocationDto:
      description: This class represents a Location in LocationController. Used for getting data.
      properties:
        active:
          description: The top part &gt; Active &gt; A check box that you select if the location is active.
          type: boolean
        address:
          $ref: "#/components/schemas/addressInSupplierLocationDto"
        baccount:
          $ref: "#/components/schemas/baccountInSupplierLocationDto"
        contact:
          $ref: "#/components/schemas/contactInSupplierLocationDto"
        corporateId:
          description: General information tab &gt; Location address section &gt; Corporate ID &gt; The corporate ID associated with the customer location.
          type: string
        ediCode:
          description: General information tab &gt; Location address section &gt; EDI code &gt; The EDI code to be used for the customer location.
          type: string
        errorInfo:
          type: string
        gln:
          description: General information tab &gt; Location address section &gt; GLN &gt; The GLN to be used for the customer location.
          type: string
        lastModifiedDateTime:
          description: System generation information
          format: date-time
          type: string
        locationId:
          description: "Mandatory field: The top part &gt; Location ID* &gt; The identifier of the location. Click the magnifier."
          type: string
        locationName:
          description: The top part &gt; Location name &gt; A descriptive name to help users recognize the location.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        vatRegistrationId:
          description: General information tab &gt; Location address section &gt; VAT registration ID &gt; The optional VAT registration ID associated with the location.
          type: string
        vatZone:
          $ref: "#/components/schemas/vatZoneInSupplierLocationDto"
      type: object
    SupplierLocationQueryParameters:
      properties:
        gln:
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        locationId:
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
      type: object
    SupplierLocationUpdateDto:
      description: This class represents a Location in LocationController. Used to create and update Location.
      properties:
        active:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        address:
          $ref: "#/components/schemas/DtoValueOfAddressUpdateDto"
        addressIsSameAsMain:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        baccountId:
          $ref: "#/components/schemas/baccountIdInSupplierLocationUpdateDto"
        contact:
          $ref: "#/components/schemas/DtoValueOfContactInfoUpdateDto"
        contactIsSameAsMain:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        corporateId:
          $ref: "#/components/schemas/DtoValueOfString"
        ediCode:
          $ref: "#/components/schemas/DtoValueOfString"
        gln:
          $ref: "#/components/schemas/DtoValueOfString"
        locationId:
          $ref: "#/components/schemas/locationIdInSupplierLocationUpdateDto"
        locationName:
          $ref: "#/components/schemas/DtoValueOfString"
        vatRegistrationId:
          $ref: "#/components/schemas/DtoValueOfString"
        vatZone:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    SupplierNumberDto:
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
      type: object
    SupplierPOBalanceDto:
      properties:
        lastModifiedDateTime:
          description: The date and time when the purchase order was last modified.
          format: date-time
          type: string
        supplier:
          $ref: "#/components/schemas/supplierInSupplierPOBalanceDto"
        totalClosedPOLineTotal:
          description: The total closed amount of the order line
          format: double
          type: number
        totalClosedPOOrderTotal:
          description: The total closed amount of the order
          format: double
          type: number
        totalOpenPOLineTotal:
          description: The total open amount of the order line
          format: double
          type: number
        totalOpenPOOrderTotal:
          description: The total open amount of the order
          format: double
          type: number
        totalPOOnHoldLineTotal:
          description: The total amount of the order line on hold
          format: double
          type: number
        totalPOOnHoldOrderTotal:
          description: The total amount of order on hold
          format: double
          type: number
      type: object
    SupplierPaymentAdjustmentDto:
      properties:
        amountPaid:
          format: double
          type: number
        applicationPeriod:
          type: string
        balance:
          format: double
          type: number
        batchNumber:
          type: string
        branch:
          type: string
        cashDiscountBalance:
          format: double
          type: number
        cashDiscountDate:
          format: date-time
          type: string
        cashDiscountTaken:
          format: double
          type: number
        currency:
          type: string
        date:
          format: date-time
          type: string
        description:
          type: string
        docType:
          enum:
            - Invoice
            - CreditAdj
            - DebitAdj
            - Prepayment
          type: string
        dueDate:
          format: date-time
          type: string
        invoiceRefNbr:
          type: string
        postPeriod:
          type: string
        supplierRef:
          type: string
        withholdingTax:
          format: double
          type: number
      type: object
    SupplierPaymentAdjustmentUpdateDto:
      properties:
        amountPaid:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        cashDiscountTaken:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        crossRate:
          $ref: "#/components/schemas/DtoValueOfDecimal"
        documentType:
          $ref: "#/components/schemas/DtoValueOfNullableOfSupplierInvoiceTypes"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        refNbr:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    SupplierPaymentDto:
      properties:
        applicationDate:
          description: "Mandatory field: The top part &gt; Date* &gt; The date when the payment is applied. The default value is the current business date."
          format: date-time
          type: string
        applicationPeriod:
          description: "MAndatory field: The top part &gt; Financial period* &gt; The financial period of payment application."
          type: string
        appliedAmount:
          description: The top part &gt; Amount &gt; The amount to be applied on the application date.
          format: double
          type: number
        branch:
          type: string
        cashAccount:
          description: "Mandatory field: The top part &gt; Cash account* &gt; The cash account associated with the payment method."
          type: string
        currency:
          $ref: "#/components/schemas/currencyInSupplierPaymentDto"
        description:
          description: The top part &gt; Description &gt; A description for the payment. You may use up to 50 alphanumeric characters.
          type: string
        documentType:
          description: The top part &gt; Voucher no. &gt; The unique identifier of the supplier ledger document.
          type: string
        errorInfo:
          type: string
        financeCharges:
          description: The top part &gt; Finance charges &gt; The total on all finance charges applied to this document.
          format: double
          type: number
        hold:
          description: The top part &gt; Hold &gt; A check box that means (if selected) that the status of the document is On hold.
          type: boolean
        lastModifiedDateTime:
          description: "Background information: The date and time when the document has been last modified."
          format: date-time
          type: string
        location:
          $ref: "#/components/schemas/locationInSupplierPaymentDto"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        paymentAmount:
          description: The top part &gt; Payment amount &gt; The total payment amount that should be applied to the documents.
          format: double
          type: number
        paymentLines:
          items:
            $ref: "#/components/schemas/SupplierPaymentAdjustmentDto"
          type: array
        paymentMethod:
          description: "Mandatory field: The top part &gt; Payment method* &gt; The payment method associated with the supplier."
          type: string
        paymentRef:
          description: The top part &gt; Payment ref. &gt; A payment reference number.
          type: string
        refNbr:
          description: The top part &gt; Voucher no. &gt; The unique identifier of the supplier ledger document.
          type: string
        released:
          description: "Background information: if this check box is selected, the document has been released."
          type: boolean
        status:
          description: "The top part &gt; Status &gt; The status of the supplier ledger document, which can be one of the following: On Hold, Printed, Open, Reserved, Closed, Voided, Released."
          enum:
            - Hold
            - Balanced
            - Voided
            - Scheduled
            - Open
            - Closed
            - Printed
            - Prebooked
            - PendingApproval
            - Rejected
            - Reserved
            - PendingPrint
          type: string
        supplier:
          $ref: "#/components/schemas/supplierInSupplierPaymentDto"
        type:
          description: "The top part &gt; Type &gt;The type of supplier ledger payment document. The following types are available: Payment, PUrchase credit note, Prepayment, Supplier refund, Voided payment."
          enum:
            - Payment
            - DebitAdj
            - Prepayment
            - Refund
            - VoidPayment
            - VoidRefund
          type: string
        unappliedBalance:
          description: The top part &gt; Unapplied balance &gt; The balance that has not been applied. This will be a non-zero value if the payment amount is not equal to a document's total amount. Checks shall always have a zero unapplied balance.
          format: double
          type: number
      type: object
    SupplierPaymentMethodDetailDto:
      description: This class represents a Payment Method Detail in SupplierController. Used to get data for SupplierPaymentMethodDetails of a Supplier.
      properties:
        paymentMethodDetailDescription:
          description: The description of the payment method detail.
          type: string
        paymentMethodDetailValue:
          description: The ID of the payment method detail.
          type: string
      type: object
    SupplierPaymentMethodDetailUpdateDto:
      description: This class represents a Payment Method Detail in SupplierController. Used to update SupplierPaymentMethodDetails when creating or updating a Supplier.
      properties:
        paymentMethodDetailDescription:
          type: string
        paymentMethodDetailValue:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    SupplierPaymentQueryParameters:
      properties:
        greaterThanValue:
          description: Enter the from-value for Ref. no.
          type: string
        invoiceRefNbr:
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        supplier:
          description: Filter by Supplier
          type: string
      type: object
    SupplierPaymentUpdateDto:
      properties:
        applicationDate:
          $ref: "#/components/schemas/DtoValueOfDateTime"
        applicationPeriod:
          $ref: "#/components/schemas/DtoValueOfString"
        branch:
          $ref: "#/components/schemas/DtoValueOfString"
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        hold:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        paymentAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        paymentLines:
          items:
            $ref: "#/components/schemas/SupplierPaymentAdjustmentUpdateDto"
          type: array
        paymentMethod:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentRef:
          $ref: "#/components/schemas/DtoValueOfString"
        referenceNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        supplier:
          $ref: "#/components/schemas/DtoValueOfString"
        type:
          $ref: "#/components/schemas/typeInSupplierPaymentUpdateDto"
      type: object
    SupplierQueryParameters:
      properties:
        attributes:
          type: string
        corporateId:
          type: string
        expandAccountInformation:
          type: boolean
        expandNote:
          type: boolean
        greaterThanValue:
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        name:
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        orderBy:
          type: string
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          enum:
            - Active
            - OnHold
            - HoldPayments
            - Inactive
            - OneTime
          type: string
        vatRegistrationId:
          type: string
      type: object
    SupplierUpdateDto:
      description: This class represents a supplier in SupplierController. Used to create and update supplier.
      properties:
        accountReference:
          $ref: "#/components/schemas/DtoValueOfString"
        accountUsedForPayment:
          $ref: "#/components/schemas/DtoValueOfAccountUsedForPayment"
        attributeLines:
          items:
            $ref: "#/components/schemas/AttributeLineUpdateDto"
          type: array
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        chargeBearer:
          $ref: "#/components/schemas/DtoValueOfSupplierChargeBearer"
        corporateId:
          $ref: "#/components/schemas/DtoValueOfString"
        creditTermsId:
          $ref: "#/components/schemas/DtoValueOfString"
        currencyId:
          $ref: "#/components/schemas/DtoValueOfString"
        currencyOverride:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        currencyRateOverride:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        documentLanguage:
          $ref: "#/components/schemas/DtoValueOfString"
        glAccounts:
          $ref: "#/components/schemas/DtoValueOfSupplierGlAccountsUpdateDto"
        mainAddress:
          $ref: "#/components/schemas/DtoValueOfAddressUpdateDto"
        mainContact:
          $ref: "#/components/schemas/DtoValueOfContactInfoUpdateDto"
        name:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        number:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        overrideWithClassValues:
          type: boolean
        parentRecordNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        paySeparately:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        paymentBy:
          $ref: "#/components/schemas/DtoValueOfPaymentBy"
        paymentLeadTime:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt16"
        paymentMethodId:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentRefDisplayMask:
          $ref: "#/components/schemas/DtoValueOfString"
        remitAddress:
          $ref: "#/components/schemas/DtoValueOfAddressUpdateDto"
        remitContact:
          $ref: "#/components/schemas/DtoValueOfContactInfoUpdateDto"
        retainageApply:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        retainageCashAccountID:
          $ref: "#/components/schemas/DtoValueOfString"
        retainagePct:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        status:
          $ref: "#/components/schemas/DtoValueOfSupplierStatus"
        supplierAddress:
          $ref: "#/components/schemas/DtoValueOfAddressUpdateDto"
        supplierClassId:
          $ref: "#/components/schemas/DtoValueOfString"
        supplierContact:
          $ref: "#/components/schemas/DtoValueOfContactInfoUpdateDto"
        supplierPaymentMethodDetails:
          items:
            $ref: "#/components/schemas/SupplierPaymentMethodDetailUpdateDto"
          type: array
        vatRegistrationId:
          $ref: "#/components/schemas/DtoValueOfString"
        vatZoneId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    TaskDto:
      properties:
        description:
          description: "Mandatory field: Description &gt; The description of the task."
          type: string
        employees:
          description: The Employees tab &gt; Information in this tab is retreived from EP203000 (Employees)
          items:
            $ref: "#/components/schemas/EmployeeDto"
          type: array
        plannedEnd:
          format: date-time
          type: string
        plannedStart:
          format: date-time
          type: string
        rateTable:
          $ref: "#/components/schemas/RateTableIdDescriptionDto"
        restrictEmployees:
          description: Summary tab &gt; Task properties section &gt; Restrict employees &gt; A check box that indicates (if selected) that only the employees listed on the Employees tab of this window can create activities and documents associated with the current task.
          type: boolean
        startDate:
          description: Start date &gt; The date when the task was actually started.
          format: date-time
          type: string
        status:
          description: "Mandatory field: Status* &gt; The status of the task, which can be one of the following: In planning, Active, Cancelled, Completed."
          enum:
            - Planned
            - Active
            - Cancelled
            - Canceled
            - Completed
          type: string
        taskId:
          description: "Mandatory field: &gt; Task ID* &gt; The ID of the task."
          type: string
        visibility:
          $ref: "#/components/schemas/VisibilityDto"
      type: object
    TaskEmployeeUpdateDto:
      properties:
        employeeId:
          $ref: "#/components/schemas/DtoValueOfString"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
      type: object
    TaskExtendedDto:
      properties:
        createdDateTime:
          description: Information collected from the system. Not visible on the screen.
          format: date-time
          type: string
        defAccount:
          $ref: "#/components/schemas/defAccountInTaskExtendedDto"
        defAccrualAccount:
          $ref: "#/components/schemas/defAccrualAccountInTaskExtendedDto"
        defAccrualSub:
          $ref: "#/components/schemas/defAccrualSubInTaskExtendedDto"
        defSub:
          $ref: "#/components/schemas/defSubInTaskExtendedDto"
        description:
          description: "Mandatory field: Description &gt; The description of the task."
          type: string
        employees:
          description: The Employees tab &gt; Information in this tab is retreived from EP203000 (Employees)
          items:
            $ref: "#/components/schemas/EmployeeDto"
          type: array
        internalId:
          description: Internal ID* &gt; The internal ID of the task.
          format: int32
          type: integer
        lastModifiedDateTime:
          description: Information collected from system.
          format: date-time
          type: string
        plannedEnd:
          format: date-time
          type: string
        plannedStart:
          format: date-time
          type: string
        projectInternalId:
          description: Project Internal ID* &gt; The internal ID of the project.
          format: int32
          type: integer
        rateTable:
          $ref: "#/components/schemas/rateTableInTaskExtendedDto"
        restrictEmployees:
          description: Summary tab &gt; Task properties section &gt; Restrict employees &gt; A check box that indicates (if selected) that only the employees listed on the Employees tab of this window can create activities and documents associated with the current task.
          type: boolean
        startDate:
          description: Start date &gt; The date when the task was actually started.
          format: date-time
          type: string
        status:
          description: "Mandatory field: Status* &gt; The status of the task, which can be one of the following: In planning, Active, Cancelled, Completed."
          enum:
            - Planned
            - Active
            - Cancelled
            - Canceled
            - Completed
          type: string
        taskId:
          description: "Mandatory field: &gt; Task ID* &gt; The ID of the task."
          type: string
        taxCategory:
          $ref: "#/components/schemas/taxCategoryInTaskExtendedDto"
        visibility:
          $ref: "#/components/schemas/visibilityInTaskExtendedDto"
      type: object
    TaskQueryParameters:
      properties:
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        description:
          description: Identifies the Project task description
          type: string
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
        projectId:
          description: Identifies the Project
          type: string
        projectInternalId:
          description: Identifies the project by internal id
          format: int32
          type: integer
        publicId:
          description: Identifies the project by publicId
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        restrictedEmployee:
          description: Id of the employee where access restrictions apply
          type: string
        restrictedUser:
          description: Id of the Odp User where access restrictions apply
          format: int64
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        status:
          description: The status of the document.
          enum:
            - Planned
            - Active
            - Cancelled
            - Canceled
            - Completed
          type: string
        taskCd:
          description: Identifies the Project task ID
          type: string
        taskCdDesc:
          description: Identifies the Project task ID and description
          type: string
        visibleInAp:
          description: If the project task is visible in the Supplier ledger
          type: boolean
        visibleInAr:
          description: If the project task is visible in the Customer ledger
          type: boolean
        visibleInCa:
          description: If the project task is visible in the Cash management workspace
          type: boolean
        visibleInCr:
          description: If the project task is visible in the CRM workspace
          type: boolean
        visibleInEa:
          description: If the project task is visible in the Expense workspace
          type: boolean
        visibleInGl:
          description: If the project task is visible in the General ledger workspace
          type: boolean
        visibleInIn:
          description: If the project task is visible in the Inventory workspace
          type: boolean
        visibleInPo:
          description: If the project task is visible in the Purchases workspace
          type: boolean
        visibleInSo:
          description: If the project task is visible in the Sales workspace
          type: boolean
        visibleInTa:
          description: If the project task is visible in the Time entities workspace
          type: boolean
      type: object
    TaskUpdateDto:
      properties:
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        employees:
          items:
            $ref: "#/components/schemas/TaskEmployeeUpdateDto"
          type: array
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        plannedEnd:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        plannedStart:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        rateTable:
          $ref: "#/components/schemas/DtoValueOfString"
        restrictEmployees:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        startDate:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        status:
          $ref: "#/components/schemas/DtoValueOfNullableOfProjTaskStatus"
        taskId:
          $ref: "#/components/schemas/DtoValueOfString"
      type: object
    TaxCategoryNumberDescriptionDto:
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
      type: object
    TaxDetailDto:
      description: This class represents a VAT Detail Line. Used for getting data.
      properties:
        recordId:
          description: The id as stored in the database. It can be used when we want to update a VAT record.
          format: int32
          type: integer
        taxId:
          description: "Mandatory field: VAT ID* &gt; The ID of the VAT applied to the document."
          type: string
        taxableAmount:
          description: Taxable amount &gt; The taxable amount for the VAT, which is calculated at the document level.
          format: double
          type: number
        vatAmount:
          description: VAT &gt; The VAT amount for the specific VAT, which is calculated at the document level.
          format: double
          type: number
        vatId:
          $ref: "#/components/schemas/vatIdInTaxDetailDto"
        vatRate:
          description: VAT rate &gt; The rate of the VAT.
          format: double
          type: number
      type: object
    TaxDetailUpdateDto:
      description: This class represents a Tax Detail Line. Used to pass data to server for updating a tax line
      properties:
        taxId:
          $ref: "#/components/schemas/DtoValueOfString"
        taxableAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
        vatAmount:
          $ref: "#/components/schemas/DtoValueOfNullableOfDecimal"
      type: object
    TaxNumberDescriptionDto:
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
      type: object
    TemplateNumberDescriptionDto:
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        status:
          enum:
            - Planned
            - Active
            - Completed
            - Cancelled
            - OnHold
            - PendingApproval
          type: string
      type: object
    TimeCardDto:
      properties:
        approvalStatus:
          description: The top part &gt; Approval status &gt; The approval status of the time card
          enum:
            - New
            - Canceled
            - SentToApproval
            - ReceivedByApproval
            - InProgressApproval
            - RejectedInApproval
            - ApprovedInApproval
            - ActiveWorkflowApproval
          type: string
        approvalStatusText:
          type: string
        employee:
          $ref: "#/components/schemas/employeeInTimeCardDto"
        errorInfo:
          type: string
        invoiceable:
          description: "The top part &gt; Regular column: Invoicable &gt; The invoiceable work hours spent by the employee during the week"
          format: int32
          type: integer
        invoiceableOvertime:
          description: "The top part &gt; Overtime column: Invoicable &gt; The invoiceable overtime spent by the employee during the week"
          format: int32
          type: integer
        invoiceableTotalTime:
          description: "The top part &gt; Total column: Invoicable &gt; The total invoiceable working time (regular and overtime) for the week"
          format: int32
          type: integer
        lastModifiedDateTime:
          description: "System generated information: The last time the time card line was modified"
          format: date-time
          type: string
        materials:
          description: Summary tab &gt; Time Card materials information
          items:
            $ref: "#/components/schemas/TimeCardMaterialsDto"
          type: array
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        origRefNbr:
          description: The top part &gt; Orig. ref. no. &gt; The reference number of the time card being corrected. This box is filled in only when Correction is specified in the Type box
          type: string
        overtimeSpent:
          description: "The top part &gt; Overtime column: Time spent &gt; The work hours spent by the employee during the week on activities with the Overtime earning type."
          format: int32
          type: integer
        refNbr:
          description: The top part &gt; Ref. no. &gt; The unique reference number of the time card, which Acumatica ERP automatically assigns according to the numbering sequence specified as the Time Card Numbering Sequence on the Time and Expenses Preferences (EP.10.10.00) form.
          type: string
        status:
          description: The top part &gt; Status &gt; The status of the time card
          enum:
            - Hold
            - Open
            - Approved
            - Rejected
            - Released
          type: string
        summary:
          description: Summary tab &gt; Time Card summary information
          items:
            $ref: "#/components/schemas/TimeCardSummaryDto"
          type: array
        timeSpent:
          description: "The top part &gt; Regular column: Time spent &gt; The work hours spent by the employee during the week on activities with the Regular Hours earning type."
          format: int32
          type: integer
        totalTimeSpent:
          description: "The top part &gt; Total column: Time spent &gt; The total working time (regular and overtime) for the week"
          format: int32
          type: integer
        type:
          description: "The top part &gt; Type &gt; The type of the time card. The following options are available:• Normal: Regular time card• Correction: Corrective time card, which is a time card that updates a released time card"
          enum:
            - Normal
            - Correction
            - NormalCorrected
          type: string
        week:
          $ref: "#/components/schemas/weekInTimeCardDto"
      type: object
    TimeCardMaterialsDto:
      properties:
        description:
          description: Description &gt; The description of the reported quantity.
          type: string
        fri:
          description: Fri &gt; The quantity reported for Friday.
          format: double
          type: number
        itemId:
          description: Item Id
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
        lineNumber:
          description: The time card line number
          format: int32
          type: integer
        mon:
          description: Mon &gt; The quantity reported for Monday.
          format: double
          type: number
        project:
          $ref: "#/components/schemas/projectInTimeCardMaterialsDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInTimeCardMaterialsDto"
        sat:
          description: Sat &gt; The quantity reported for Saturday.
          format: double
          type: number
        sun:
          description: Sun &gt; The quantity reported for Sunday.
          format: double
          type: number
        thu:
          description: Thu &gt; The quantity reported for Thursday.
          format: double
          type: number
        totalQty:
          description: Total Qty
          format: double
          type: number
        tue:
          description: Tue &gt; The quantity reported for Tuesday.
          format: double
          type: number
        uoM:
          description: The unit of measure of item
          type: string
        wed:
          description: Wed &gt; The quantity reported for Wednesday.
          format: double
          type: number
      type: object
    TimeCardMaterialsUpdateDto:
      properties:
        description:
          $ref: "#/components/schemas/descriptionInTimeCardMaterialsUpdateDto"
        fri:
          $ref: "#/components/schemas/friInTimeCardMaterialsUpdateDto"
        itemId:
          $ref: "#/components/schemas/itemIdInTimeCardMaterialsUpdateDto"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        mon:
          $ref: "#/components/schemas/monInTimeCardMaterialsUpdateDto"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        project:
          $ref: "#/components/schemas/projectInTimeCardMaterialsUpdateDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInTimeCardMaterialsUpdateDto"
        sat:
          $ref: "#/components/schemas/satInTimeCardMaterialsUpdateDto"
        sun:
          $ref: "#/components/schemas/sunInTimeCardMaterialsUpdateDto"
        thu:
          $ref: "#/components/schemas/thuInTimeCardMaterialsUpdateDto"
        tue:
          $ref: "#/components/schemas/tueInTimeCardMaterialsUpdateDto"
        uoM:
          $ref: "#/components/schemas/uoMInTimeCardMaterialsUpdateDto"
        wed:
          $ref: "#/components/schemas/wedInTimeCardMaterialsUpdateDto"
      type: object
    TimeCardSummaryDto:
      properties:
        approvalStatus:
          description: Approval status &gt; The approval status, which indicates whether the summary row requires approval and, if it does, what the current state of approval is.
          enum:
            - New
            - Canceled
            - SentToApproval
            - ReceivedByApproval
            - InProgressApproval
            - RejectedInApproval
            - ApprovedInApproval
            - ActiveWorkflowApproval
          type: string
        approvalStatusText:
          description: last approval comment &gt; The approval status text suitable for display
          type: string
        approver:
          description: The identifier of the person authorized to approve the activity, if approval is required. This is either the approver of the project task or, if no approver is assigned to the project task, the project manager.
          type: string
        description:
          description: Description &gt; The description of the reported work hours.
          type: string
        earningType:
          $ref: "#/components/schemas/earningTypeInTimeCardSummaryDto"
        fri:
          description: Fri &gt; The work time reported for Friday, including overtime.
          format: int32
          type: integer
        invoiceable:
          description: Invoicable &gt; A check box that you select to indicate that these work hours are invoiceable.
          type: boolean
        lastModifiedDateTime:
          description: The last time the time card line was modified
          format: date-time
          type: string
        lineId:
          description: The time card line id
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        lineNumber:
          description: The time card line number
          format: int32
          type: integer
        mon:
          description: Mon &gt; The work time reported for Monday, including overtime.
          format: int32
          type: integer
        project:
          $ref: "#/components/schemas/projectInTimeCardSummaryDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInTimeCardSummaryDto"
        sat:
          description: Sat &gt; The work time reported for Saturday, including overtime.
          format: int32
          type: integer
        sun:
          description: Sun &gt; The work time reported for Sunday, including overtime.
          format: int32
          type: integer
        thu:
          description: Thu &gt; The work time reported for Thursday, including overtime.
          format: int32
          type: integer
        timeSpent:
          description: Time spent &gt; The work time (regular and overtime) that the employee spent on the project and task during the week.
          format: int32
          type: integer
        tue:
          description: Tue &gt; The work time reported for Tuesday, including overtime.
          format: int32
          type: integer
        wed:
          description: Wed &gt; The work time reported for Wednesday, including overtime.
          format: int32
          type: integer
      type: object
    TimeCardSummaryUpdateDto:
      properties:
        description:
          $ref: "#/components/schemas/descriptionInTimeCardSummaryUpdateDto"
        earningType:
          $ref: "#/components/schemas/earningTypeInTimeCardSummaryUpdateDto"
        fri:
          $ref: "#/components/schemas/friInTimeCardSummaryUpdateDto"
        invoiceable:
          $ref: "#/components/schemas/invoiceableInTimeCardSummaryUpdateDto"
        lineNumber:
          $ref: "#/components/schemas/DtoValueOfInt32"
        mon:
          $ref: "#/components/schemas/monInTimeCardSummaryUpdateDto"
        operation:
          enum:
            - Insert
            - Update
            - Delete
          type: string
        project:
          $ref: "#/components/schemas/projectInTimeCardSummaryUpdateDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInTimeCardSummaryUpdateDto"
        sat:
          $ref: "#/components/schemas/satInTimeCardSummaryUpdateDto"
        sun:
          $ref: "#/components/schemas/sunInTimeCardSummaryUpdateDto"
        thu:
          $ref: "#/components/schemas/thuInTimeCardSummaryUpdateDto"
        tue:
          $ref: "#/components/schemas/tueInTimeCardSummaryUpdateDto"
        wed:
          $ref: "#/components/schemas/wedInTimeCardSummaryUpdateDto"
      type: object
    TimeCardUpdateDto:
      properties:
        employee:
          $ref: "#/components/schemas/DtoValueOfString"
        materials:
          description: Time Card Materials information
          items:
            $ref: "#/components/schemas/TimeCardMaterialsUpdateDto"
          type: array
        refNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        summary:
          description: Time Card summary information
          items:
            $ref: "#/components/schemas/TimeCardSummaryUpdateDto"
          type: array
      type: object
    TransactionDetailDto:
      properties:
        amount:
          description: Amount &gt; The total amount for all units or items.
          format: double
          type: number
        branch:
          $ref: "#/components/schemas/branchInTransactionDetailDto"
        description:
          description: Description &gt; The description provided for the item.
          type: string
        item:
          $ref: "#/components/schemas/itemInTransactionDetailDto"
        lineNumber:
          description: The line number in the table.
          format: int32
          type: integer
        nonBillable:
          description: Non-invoiceable &gt; A check box that indicates (if selected) that this transaction is non-invoiceable in the project.
          type: boolean
        offsetAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        offsetCashAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        offsetSubAccount:
          $ref: "#/components/schemas/offsetSubAccountInTransactionDetailDto"
        price:
          description: Price &gt; The unit price for the item.
          format: double
          type: number
        project:
          $ref: "#/components/schemas/projectInTransactionDetailDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInTransactionDetailDto"
        quantity:
          description: Quantity &gt; The quantity of the item.
          format: double
          type: number
        taxCategory:
          $ref: "#/components/schemas/taxCategoryInTransactionDetailDto"
        uom:
          description: UoM &gt; The unit of measure of the item.
          type: string
      type: object
    TypeDto:
      properties:
        assetTypeID:
          description: The type id of this fixed asset
          type: string
        description:
          description: The type description
          type: string
      type: object
    UnitOfMeasureDto:
      properties:
        fromUnit:
          description: "Mandatory field: The table &gt; From unit* &gt; The unit to be converted."
          type: string
        supplementaryMeasureUnit:
          description: The table &gt; Supplementary measure unit &gt; The supplementary measure unit to which the conversion will be made for Intrastat.
          enum:
            - None
            - Carats
            - NumberOfCells
            - CarryingCapacityTons
            - Gram
            - GramFissileIsotypes
            - Kilogram
            - KilogramCholineChloride
            - KilogramHydrogenPeroxide
            - KilogramPotassiumOxide
            - KilogramPotassiumHydroxide
            - KilogramMethylamines
            - KilogramDrainedNetWeight
            - KilogramSubstance90Dry
            - KilogramNitrogen
            - KilogramSodiumHydroxide
            - KilogramDiphosphorusPentaoxide
            - KilogramUranium
            - NumberOfItems
            - NumberOfPairs
            - Items100
            - Items1000
            - KilowattHours1000
            - Litre
            - LitrePureAlco
            - Litres1000
            - Meter
            - SquareMeter
            - CubicMeter
            - CubicMeters1000
            - Terajoule
          type: string
        toUnit:
          description: "Mandatory field: The table &gt; To unit* &gt; The unit to which the unit specified in the From unit will be converted with the use of the specified operation and specified conversion factor."
          type: string
        unitMultDiv:
          description: The table &gt; Multiply/divide &gt; The operation to be performed for conversion of the From unit to the To unit.
          enum:
            - Multiply
            - Divide
          type: string
        unitRate:
          description: The table &gt; Conversion factor &gt; The factor to be used for the unit conversion with the specified operation.
          format: double
          type: number
      type: object
    UpdateCostActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    UpdateCurrencyRateDto:
      properties:
        multDiv:
          $ref: "#/components/schemas/multDivInUpdateCurrencyRateDto"
        rate:
          $ref: "#/components/schemas/rateInUpdateCurrencyRateDto"
      type: object
    UpdateDiscountsActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    UpdateNoteDto:
      properties:
        note:
          $ref: "#/components/schemas/noteInUpdateNoteDto"
      type: object
    UserDescriptionDto:
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
      type: object
    VatCategoryDto:
      properties:
        active:
          description: The top part &gt; Active &gt; A check box that means (if selected) that this VAT category is active.
          type: boolean
        description:
          description: The top part &gt; Description &gt; A detailed description of the category.
          type: string
        excludeListedTaxes:
          description: The top part &gt; Exclude listed taxes &gt; A check box that indicates (if selected) this VAT category should exclude the listed taxes from VAT zones.
          type: boolean
        lastModifiedDateTime:
          description: Systemgenerated information.
          format: date-time
          type: string
        vatCategoryId:
          description: "Mandatory field: The top part &gt; VAT category ID* &gt; The unique ID of the VAT category. An alphanumeric string of up to six characters can be used."
          type: string
        vatCategoryLines:
          description: The table &gt;
          items:
            $ref: "#/components/schemas/VatCategoryLineDto"
          type: array
      type: object
    VatCategoryLineDto:
      properties:
        calculateOn:
          description: "Calculate on &gt; The way the VAT amount is calculated, which can be one of the following options: Extract from item amount, Document amount, Document and VAT amount."
          enum:
            - ExtractFromItemAmount
            - ItemAmount
            - ItemTaxAmount
            - DocumentAmount
            - DocumenTaxAmount
          type: string
        cashDiscount:
          description: "Cash discount &gt; The method of calculating the taxable amount if a discount is applied (based on the credit terms). It can be one of the following options: Reduce VAT amount, Does not affect VAT amount."
          enum:
            - ToTaxableAmount
            - ToPromtPayment
            - ToTaxAmount
            - AdjustTax
            - NoAdjust
          type: string
        description:
          description: Description &gt; The detailed description of the VAT item.
          type: string
        type:
          description: VAT type &gt; The type of VAT, which defines how it is processed.
          enum:
            - Sales
            - Use
            - Vat
            - Withholding
            - ExemptVat
            - StatisticalVat
            - DirectVat
            - PendingVat
            - ReverseVat
          type: string
        vatId:
          description: "Mandatory field: VAT ID* &gt; The ID of the VAT included in the category."
          type: string
        vatRates:
          items:
            $ref: "#/components/schemas/VatRateLineDto"
          type: array
      type: object
    VatCategoryQueryParameters:
      properties:
        createdDateTime:
          description: Creation date and time.
          type: string
        createdDateTimeCondition:
          description: System-retrieved information for state/condition
          type: string
        greaterThanValue:
          description: Greater than value. The item which is the object for this, varies from API to API.
          type: string
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.
          format: int32
          type: integer
      type: object
    VatCodeDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    VatDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    VatGlAccountsDto:
      properties:
        vatClaimableAccount:
          $ref: "#/components/schemas/vatClaimableAccountInVatGlAccountsDto"
        vatClaimableSubccount:
          $ref: "#/components/schemas/vatClaimableSubccountInVatGlAccountsDto"
        vatPayableAccount:
          $ref: "#/components/schemas/vatPayableAccountInVatGlAccountsDto"
        vatPayableSubaccount:
          $ref: "#/components/schemas/vatPayableSubaccountInVatGlAccountsDto"
      type: object
    VatInformationDto:
      properties:
        calculateOn:
          description: "VAT settings tab &gt; Calculate on &gt; The method of calculating the tax amount, which is one of the following options: Extract from item amount, Item amount, Item and VAT amount, Document amount, Document and VAT amount."
          enum:
            - ExtractFromItemAmount
            - ItemAmount
            - ItemTaxAmount
            - DocumentAmount
            - DocumenTaxAmount
          type: string
        cashDiscount:
          description: VAT settings tab &gt; Cash discount &gt; The method of calculating the tax base amount if a cash discount is applied.
          enum:
            - ToTaxableAmount
            - ToPromtPayment
            - ToTaxAmount
            - AdjustTax
            - NoAdjust
          type: string
        categories:
          description: Both tabs &gt; Categories tab &gt;
          items:
            $ref: "#/components/schemas/VatCategoryDto"
          type: array
        deductibleVat:
          description: VAT settings tab &gt; Partially deductible VAT &gt; A check box that indicates (if selected) that this is a deductible value-added VAT.
          type: boolean
        defaultNonStockItem:
          $ref: "#/components/schemas/defaultNonStockItemInVatInformationDto"
        description:
          description: VAT settings tab &gt; Description &gt; A detailed description of the VAT.
          type: string
        documentText:
          description: VAT Settings tab &gt; Document text tab &gt; Document text &gt; The text to be printed to the VAT document.
          type: string
        enterFromVatInvoice:
          description: VAT settings tab &gt; Enter from VAT invoice &gt; A check box that indicates (if selected) that this VAT should be calculated for documents only if the documents are added to a VAT invoice or VAT adjustment.
          type: boolean
        euReportCode:
          description: VAT settings tab &gt; EU report code &gt; The EU reporting code for the VAT.
          enum:
            - SalesOfGoods
            - Triangulation
            - SalesOfService
          type: string
        glAccounts:
          $ref: "#/components/schemas/glAccountsInVatInformationDto"
        includeinVatExemptTotal:
          description: VAT settings tab &gt; Include in VAT exempt total &gt; A check box that indicates (if selected) that this value-added VAT has a zero rate and is used to calculate a document subtotal that is actually exempt from VAT.
          type: boolean
        includeinVatTotal:
          description: VAT settings tab &gt; Include in VAT taxable total &gt; A check box that indicates (if selected) that the VAT taxable amount should appear in the VAT taxable total field in the documents (such as invoices).
          type: boolean
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        notValidAfter:
          description: VAT settings tab &gt; Not valid after &gt; The date after which the VAT is not effective.
          format: date-time
          type: string
        pendingVat:
          description: VAT settings tab &gt; Pendig VAT &gt; A check box that indicates (if selected) that the VAT that should be calculated in documents, but should not be recorded to the VAT report until the VAT invoice is received.
          type: boolean
        reverseVat:
          description: VAT settings tab &gt; Reverse VAT &gt; A check box that indicates (if selected) that this is a reverse VAT.
          type: boolean
        schedules:
          description: Both tabs &gt; VAT schedule &gt;
          items:
            $ref: "#/components/schemas/VatInformationScheduleDto"
          type: array
        statisticalVat:
          description: VAT settings tab &gt; Statistical VAT &gt; A check box that indicates (if selected) that the VAT on documents will be calculated only for statistical purposes or will be reported only but not actually paid.
          type: boolean
        type:
          description: VAT settings tab &gt; VAT type &gt; The type of VAT.
          enum:
            - Sales
            - Use
            - Vat
            - Withholding
            - ExemptVat
            - StatisticalVat
            - DirectVat
            - PendingVat
            - ReverseVat
          type: string
        vatAgencyId:
          $ref: "#/components/schemas/vatAgencyIdInVatInformationDto"
        vatCategoryId:
          description: VatCategoryId is deprecated, please use Vat Id instead
          type: string
        vatId:
          description: "Mandatory field: VAT settings tab &gt; VAT ID* &gt; The unique ID of the VAT."
          type: string
        vismaXmlVatType:
          description: VAT settings tab &gt; Visma XML VAT type &gt; The VAT type to be used in Visma XML files.
          enum:
            - VatTypeHigh
            - VatTypeMedium
            - VatTypeLow
            - VatTypeZero
            - VatTypeExempt
          type: string
        zones:
          description: Both tabs &gt; Zones tab &gt;
          items:
            $ref: "#/components/schemas/VatZoneDto"
          type: array
      type: object
    VatInformationScheduleDto:
      properties:
        deductibleVatRate:
          description: Deductible VAT rate &gt; The VAT rate (%) that is used to calculate the amount deductible from the output VAT.
          format: double
          type: number
        groupType:
          description: Group type &gt; The type of the reporting group.
          enum:
            - Output
            - Input
          type: string
        maxTaxableAmt:
          description: Max. taxable amount &gt; The maximum taxable amount for which this rate applies.
          format: double
          type: number
        minTaxableAmt:
          description: Min. taxable amount &gt; The minimum taxable amount for which this rate is applicable.
          format: double
          type: number
        reportingGroup:
          description: Reporting group &gt; The reporting group for the VAT.
          type: string
        startDate:
          description: "Mandatory field: Start date &gt; The date when the VAT at the rate in the current row becomes effective."
          format: date-time
          type: string
        vatRate:
          description: VAT rate &gt; The VAT rate (%) that is used to calculate the VAT amount.
          format: double
          type: number
      type: object
    VatQueryParameters:
      properties:
        lastModifiedDateTime:
          description: "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r

            \r

            Accepted format:\r

            * ```yyyy-MM-dd```\r

            * ```yyyy-MM-dd HH:mm:ss```\r

            * ```yyyy-MM-dd HH:mm:ss.FFF```\r

            * ```yyyy-MM-ddTHH:mm:ss```\r

            * ```yyyy-MM-ddTHH:mm:ss.FFF```\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        lastModifiedDateTimeCondition:
          description: "This value represents the condition to be applied when retrieving records.\r

            \r

            Accepted values (without the single quotes):\r

            * '&gt;' for greater than\r

            * '&lt;' for less than\r

            * '&gt;=' for greater than or equal\r

            * '&lt;=' for less than or equal\r

            \r

            _Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
          type: string
        numberToRead:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
        skipRecords:
          description: This field has been deprecated and will be removed in future versions.
          format: int32
          type: integer
      type: object
    VatRateLineDto:
      properties:
        revisionID:
          description: The revision ID of the VAT rate.
          type: string
        startDate:
          description: The date and time from which the VAT rate is effective.
          format: date-time
          type: string
        vatRate:
          description: The VAT rate of the line.
          format: double
          type: number
      type: object
    VatZoneDto:
      properties:
        defaultTaxCategory:
          $ref: "#/components/schemas/TaxCategoryNumberDescriptionDto"
        defaultVatCategory:
          description: Click the magnifier. The Default VAT category for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        description:
          description: Click the magnifier. The description for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        errorInfo:
          type: string
        id:
          description: Click the magnifier. The identifier for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
      type: object
    VatZoneQueryParameters:
      properties:
        pageNumber:
          description: Pagination parameter. Page number.
          format: int32
          type: integer
        pageSize:
          description: "Pagination parameter. Number of items to be collected.\r

            Please use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r

            If requested page size is greater than allowed max page size, request will be limited to max page size."
          format: int32
          type: integer
      type: object
    VisibilityDto:
      properties:
        visibleInAp:
          description: Supplier ledger
          type: boolean
        visibleInAr:
          description: Customer ledger
          type: boolean
        visibleInCa:
          description: Cash management
          type: boolean
        visibleInCr:
          type: boolean
        visibleInEa:
          description: Expenses
          type: boolean
        visibleInGl:
          description: General ledger
          type: boolean
        visibleInIn:
          description: Inventory
          type: boolean
        visibleInPo:
          description: Purchases
          type: boolean
        visibleInSo:
          description: Sales
          type: boolean
        visibleInTa:
          description: Time entries
          type: boolean
      type: object
    VisibilityUpdateDto:
      properties:
        visibleInAp:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        visibleInAr:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        visibleInCa:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        visibleInCr:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        visibleInEa:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        visibleInGl:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        visibleInIn:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        visibleInPo:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        visibleInSo:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        visibleInTa:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
      type: object
    VoidPaymentActionDto:
      properties:
        returnVoidPayment:
          type: boolean
        type:
          enum:
            - Payment
            - CreditNote
            - Prepayment
            - Refund
            - VoidPayment
            - SmallBalanceWo
            - VoidRefund
            - Undefined
          type: string
      type: object
    VoidPaymentActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
        refNbr:
          type: string
        type:
          enum:
            - Payment
            - CreditNote
            - Prepayment
            - Refund
            - VoidPayment
            - SmallBalanceWo
            - VoidRefund
            - Undefined
          type: string
        voidPayment:
          $ref: "#/components/schemas/PaymentDto"
      type: object
    VoidSupplierInvoiceActionResultDto:
      properties:
        actionId:
          format: uuid
          type: string
        actionResult:
          enum:
            - Queued
            - InProcess
            - Failed
            - Done
          type: string
        errorInfo:
          type: string
      type: object
    WarehouseAddressDto:
      properties:
        addressId:
          description: Information retrieved from the system.
          format: int32
          type: integer
        addressLine1:
          description: Address ! &gt; The first line in the address of the warehouse.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line in the warehouse address.
          type: string
        addressType:
          description: Information retrieved from the system.
          type: string
        city:
          description: City &gt; The city of the warehouse address.
          type: string
        country:
          $ref: "#/components/schemas/countryInWarehouseAddressDto"
        county:
          $ref: "#/components/schemas/countyInWarehouseAddressDto"
        postalCode:
          description: Postcode &gt; The postcode relevant for the warehouse address.
          type: string
        validated:
          description: Information retrieved from the system.
          type: boolean
      type: object
    WarehouseContactDto:
      properties:
        attention:
          description: Attention &gt; The department or person to be noted on the attention line, if this line is used by your company.
          type: string
        companyName:
          description: Company name &gt; The legal business name of the warehouse to appear on the documents.
          type: string
        contactId:
          description: Information retrieved from the system.
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the contact person assigned to this warehouse.
          type: string
        fax:
          description: Fax &gt; The fax number of the contact person assigned to this warehouse.
          type: string
        phone1:
          description: Phone 1 &gt; The primary phone number of the contact person assigned to this warehouse.
          type: string
        phone2:
          description: Phone 2 &gt; 	A secondary phone number of the contact person assigned to this warehouse.
          type: string
        web:
          description: Web &gt; The URL of the web page where information about the warehouse is published.
          type: string
      type: object
    WarehouseDetailDto:
      description: This class represents a WarehouseDetail part of InventoryItem in InventoryItemController. Used for getting data.
      properties:
        available:
          format: double
          type: number
        availableForShipment:
          format: double
          type: number
        isDefault:
          type: boolean
        lastModifiedDateTime:
          format: date-time
          type: string
        quantityOnHand:
          description: Qty. on hand &gt; The quantity of this item available (on hand) at the warehouse.
          format: double
          type: number
        warehouse:
          description: Warehouse &gt; The warehouse where the stock item is available.
          type: string
      type: object
    WarehouseDto:
      description: This class represents a Warehouse in WarehouseController. Used for getting data.
      properties:
        active:
          description: The top part &gt; Active &gt; This check box indicates (if selected) that the warehouse is active.
          type: boolean
        address:
          $ref: "#/components/schemas/addressInWarehouseDto"
        avgDefaultCost:
          description: The top part &gt; Avg. default return cost &gt; For items with the Average valuation method, the option that defines which of costs should be used for returns and receipts.
          enum:
            - AverageCost
            - LastCost
          type: string
        branch:
          $ref: "#/components/schemas/branchInWarehouseDto"
        contact:
          $ref: "#/components/schemas/contactInWarehouseDto"
        description:
          description: The top part &gt; Description &gt; A brief description of the warehouse.
          type: string
        dropShipLocation:
          $ref: "#/components/schemas/dropShipLocationInWarehouseDto"
        fifoDefaultCost:
          description: The top part &gt; FIFO default returns cost &gt; For items with the FIFO valuation method, the option that defines which of costs should be used for returns and receipts.
          enum:
            - AverageCost
            - LastCost
          type: string
        locationEntry:
          description: The top part &gt; Location entry &gt; An option indicating whether warehouse locations can be added directly on any inventory document or only by using this window.
          enum:
            - Validate
            - Warn
            - NoValidate
          type: string
        locations:
          description: Location table tab &gt; The location table &gt;
          items:
            $ref: "#/components/schemas/WarehouseLocationDto"
          type: array
        lockSitePICountEntry:
          description: The top part &gt; Freeze the inventory when the stocktaking is in data entry state &gt; This check box indicates (if selected) that the inventory in the warehouse will be frozen during the stocktaking and data entry stages of stocktaking.
          type: boolean
        receiptLocation:
          $ref: "#/components/schemas/receiptLocationInWarehouseDto"
        replenishmentClass:
          $ref: "#/components/schemas/replenishmentClassInWarehouseDto"
        returnLocation:
          $ref: "#/components/schemas/returnLocationInWarehouseDto"
        shipLocation:
          $ref: "#/components/schemas/shipLocationInWarehouseDto"
        warehouseID:
          description: "Mandatory field: The top part &gt; Warehouse ID* &gt; The unique ID of the warehouse."
          type: string
      type: object
    WarehouseIdDescriptionDto:
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
      type: object
    WarehouseLocationDto:
      properties:
        active:
          description: Active &gt; This check box indicates whether this location is active.
          type: boolean
        assemblyValid:
          description: Assembly allowed &gt; You select this check box if assembly operations are allowed at this location.
          type: boolean
        description:
          description: Description &gt; A brief description of the warehouse location.
          type: string
        inclQtyAvail:
          description: Include in qty. available &gt; You select this check box if the quantities of goods available at this location will be included in the quantities of available goods and used in inventory transactions, such as issues and transfers.
          type: boolean
        isCosted:
          description: Cost separately &gt; You select this check box if the costs for goods available at this location will be calculated separately from costs calculated at the system-level; that is, for FIFO and specific valuation methods, separate cost layers will be created for this location.
          type: boolean
        locationId:
          description: Location ID &gt; The unique ID of the warehouse location.
          type: string
        primaryItem:
          $ref: "#/components/schemas/primaryItemInWarehouseLocationDto"
        primaryItemClass:
          $ref: "#/components/schemas/primaryItemClassInWarehouseLocationDto"
        primaryItemValid:
          description: Primary item validation &gt; An option indicating whether the operations with the primary item should be validated for this location and how.
          enum:
            - PrimaryNothing
            - PrimaryItemWarning
            - PrimaryItemError
            - PrimaryItemClassWarning
            - PrimaryItemClassError
          type: string
        project:
          $ref: "#/components/schemas/projectInWarehouseLocationDto"
        projectTask:
          $ref: "#/components/schemas/projectTaskInWarehouseLocationDto"
        receiptsValid:
          description: Receipts allowed &gt; You select this check box if receipts are allowed at this location.
          type: boolean
        salesValid:
          description: Sales allowed &gt; You select this check box if sales are allowed from this location.
          type: boolean
        transfersValid:
          description: Transfers allowed &gt; You select this check box if transfers are allowed for this location.
          type: boolean
      type: object
    WarehouseLocationUpdateDto:
      properties:
        active:
          $ref: "#/components/schemas/activeInWarehouseLocationUpdateDto"
        assemblyValid:
          $ref: "#/components/schemas/assemblyValidInWarehouseLocationUpdateDto"
        description:
          $ref: "#/components/schemas/descriptionInWarehouseLocationUpdateDto"
        inclQtyAvail:
          $ref: "#/components/schemas/inclQtyAvailInWarehouseLocationUpdateDto"
        isCosted:
          $ref: "#/components/schemas/isCostedInWarehouseLocationUpdateDto"
        locationId:
          $ref: "#/components/schemas/locationIdInWarehouseLocationUpdateDto"
        pickPriority:
          $ref: "#/components/schemas/pickPriorityInWarehouseLocationUpdateDto"
        primaryItemClassId:
          $ref: "#/components/schemas/primaryItemClassIdInWarehouseLocationUpdateDto"
        primaryItemId:
          $ref: "#/components/schemas/primaryItemIdInWarehouseLocationUpdateDto"
        primaryItemValid:
          $ref: "#/components/schemas/primaryItemValidInWarehouseLocationUpdateDto"
        projectId:
          $ref: "#/components/schemas/projectIdInWarehouseLocationUpdateDto"
        projectTaskId:
          $ref: "#/components/schemas/projectTaskIdInWarehouseLocationUpdateDto"
        receiptsValid:
          $ref: "#/components/schemas/receiptsValidInWarehouseLocationUpdateDto"
        salesValid:
          $ref: "#/components/schemas/salesValidInWarehouseLocationUpdateDto"
        transfersValid:
          $ref: "#/components/schemas/transfersValidInWarehouseLocationUpdateDto"
      type: object
    WebhookNotificationFeedbackDto:
      properties:
        description:
          description: The description text of the notification. Such as "Operation failed".
          type: string
        isSuccess:
          description: "Was the notification successfully consumed: True or false."
          type: boolean
        notificationId:
          description: The ID of the notification.
          format: uuid
          type: string
        source:
          description: The source of the notification
          type: string
      type: object
    WeekNumberDescriptionDto:
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
      type: object
    WithoutWithVatDto:
      properties:
        withVat:
          format: double
          type: number
        withoutVat:
          format: double
          type: number
      type: object
    WorkTypeDto:
      properties:
        description:
          type: string
        rutRotType:
          enum:
            - Rut
            - Rot
          type: string
        xmlTag:
          type: string
      type: object
    accountDescriptionInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The description of this account.
      properties:
        value:
          type: string
    accountDescriptionInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The description of this account.
      properties:
        value:
          type: string
    accountGroupInProjectTransactionLineDto:
      description: Account group &gt; The account group of the debit side account of the transaction.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    accountIdInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The account used to record the item amount on the purchase receipt; used for non-stock items for which receipt is not required.
      properties:
        value:
          type: string
    accountIdInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The account used to record the item amount on the purchase receipt; used for non-stock items for which receipt is not required.
      properties:
        value:
          type: string
    accountInBudgetDto:
      description: "Mandatory field: The budget area &gt; The budget articles pane &gt; Account* &gt; The account of the budget article if the article is a leaf on the budget tree."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCashSaleDto:
      description: The Document details tab &gt;  Account * &gt; The sales account used for the transaction.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCashSaleLineDto:
      description: "Mandatory field: Account* &gt; The sales account used for the transaction."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCreditNoteDto:
      description: The Document details tab &gt;  Account * &gt; The sales account used for the transaction.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCreditNoteLineDto:
      description: "Mandatory field: Account* &gt; The sales account used for the transaction."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCustomerCreditNoteDto:
      description: The Document details tab &gt;  Account * &gt; The sales account used for the transaction.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCustomerCreditNoteLineDto:
      description: "Mandatory field: Account* &gt; The sales account used for the transaction."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCustomerCreditWriteOffDto:
      description: The Document details tab &gt;  Account * &gt; The sales account used for the transaction.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCustomerDebitNoteDto:
      description: The Document details tab &gt;  Account * &gt; The sales account used for the transaction.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCustomerDebitNoteLineDto:
      description: "Mandatory field: Account* &gt; The sales account used for the transaction."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCustomerDocumentDto:
      description: The Document details tab &gt;  Account * &gt; The sales account used for the transaction.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCustomerInvoiceDto:
      description: The Document details tab &gt;  Account * &gt; The sales account used for the transaction.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCustomerInvoiceLineDto:
      description: "Mandatory field: Account* &gt; The sales account used for the transaction."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCustomerOverdueChargeDto:
      description: The Document details tab &gt;  Account * &gt; The sales account used for the transaction.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInCustomerOverdueChargeLineDto:
      description: "Mandatory field: Account* &gt; The sales account used for the transaction."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInGeneralLedgerTransactionDetailsDto:
      description: Account &gt; The account updated by the batch transactions.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: ExternalCode1 is deprecated, please use ExternalCode1Info instead.
          type: string
        externalCode1Info:
          $ref: "#/components/schemas/ExternalCodeNumberDescriptionDto"
        externalCode2:
          description: ExternalCode2 is deprecated, please use ExternalCode2Info instead.
          type: string
        externalCode2Info:
          $ref: "#/components/schemas/ExternalCodeNumberDescriptionDto"
        glConsolAccountCD:
          type: string
        number:
          description: Number of item
          type: string
        type:
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInPurchaseOrderLineDto:
      description: Account &gt; The expense account used to record the purchased non-stock item that does not require receipt (by default, the account specified for the item in the Combine COGS/expense sub. from field in the Posting classes (IN206000) window).
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    accountInPurchaseReceiptLineDto:
      description: Document details tab &gt; Account &gt; The account used to record the item amount on the purchase receipt;
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    accountInSupplierDocumentDto:
      description: "Mandatory field: Document details tab &gt; Account* &gt; The expense account to be updated by this transaction."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInSupplierInvoiceLineDto:
      description: "The table &gt; Mandatory field: Account* &gt; The purchase account used for the invoice line."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    accountInformationInInventoryDto:
      description: General ledger account tab &gt;
      properties:
        cogsAccount:
          $ref: "#/components/schemas/cogsAccountInInventoryAccountInformationDto"
        cogsSubaccount:
          $ref: "#/components/schemas/cogsSubaccountInInventoryAccountInformationDto"
        expenseAccount:
          $ref: "#/components/schemas/expenseAccountInInventoryAccountInformationDto"
        expenseAccrualAccount:
          $ref: "#/components/schemas/expenseAccrualAccountInInventoryAccountInformationDto"
        expenseEuAccount:
          $ref: "#/components/schemas/expenseEuAccountInInventoryAccountInformationDto"
        expenseImportAccount:
          $ref: "#/components/schemas/expenseImportAccountInInventoryAccountInformationDto"
        expenseNonTaxableAccount:
          $ref: "#/components/schemas/expenseNonTaxableAccountInInventoryAccountInformationDto"
        expenseSubaccount:
          $ref: "#/components/schemas/expenseSubaccountInInventoryAccountInformationDto"
        inventoryAccount:
          $ref: "#/components/schemas/inventoryAccountInInventoryAccountInformationDto"
        salesAccount:
          $ref: "#/components/schemas/salesAccountInInventoryAccountInformationDto"
        salesEuAccount:
          $ref: "#/components/schemas/salesEuAccountInInventoryAccountInformationDto"
        salesExportAccount:
          $ref: "#/components/schemas/salesExportAccountInInventoryAccountInformationDto"
        salesNonTaxableAccount:
          $ref: "#/components/schemas/salesNonTaxableAccountInInventoryAccountInformationDto"
        salesSubaccount:
          $ref: "#/components/schemas/salesSubaccountInInventoryAccountInformationDto"
    accountsInFixedAssetClassDto:
      description: Default accounts for the fixed asset using this fixed asset class
      properties:
        accountID:
          description: The fixed asset account for this fixed asset
          type: string
        accrualAccountID:
          description: The accrual account for this fixed asset
          type: string
        accrualSubAccountID:
          description: The accrual sub account for this fixed asset
          type: string
        accumulatedDepreciationAccountID:
          description: The accumulated depreciation account for this fixed asset
          type: string
        accumulatedDepreciationSubAccountID:
          description: The accumulated depreciation sub for this fixed asset
          type: string
        creditAccountID:
          description: The credit account
          type: string
        creditSubAccountID:
          description: The credit sub account
          type: string
        debitAccountID:
          description: The debit account
          type: string
        debitSubAccountID:
          description: The debit sub account
          type: string
        depreciatedExpenseAccountID:
          description: The depreciation expense account for this fixed asset
          type: string
        depreciatedExpenseSubAccountID:
          description: The depreciation expense sub for this fixed asset
          type: string
        disposalAccountID:
          description: The proceeds account for this fixed asset
          type: string
        disposalSubAccountID:
          description: The proceeds sub for this fixed asset
          type: string
        gainAccountID:
          description: The gain account for this fixed asset
          type: string
        gainSubAccountID:
          description: The gain sub for this fixed asset
          type: string
        lossAccountID:
          description: The loss account for this fixed asset
          type: string
        lossSubAccountID:
          description: The loss sub for this fixed asset
          type: string
        subAccountID:
          description: The sub account for this fixed asset
          type: string
    accountsInFixedAssetDto:
      description: All accounts selected for this fixed asset
      properties:
        accountID:
          description: The fixed asset account for this fixed asset
          type: string
        accrualAccountID:
          description: The accrual account for this fixed asset
          type: string
        accrualSubAccountID:
          description: The accrual sub account for this fixed asset
          type: string
        accumulatedDepreciationAccountID:
          description: The accumulated depreciation account for this fixed asset
          type: string
        accumulatedDepreciationSubAccountID:
          description: The accumulated depreciation sub for this fixed asset
          type: string
        creditAccountID:
          description: The credit account
          type: string
        creditSubAccountID:
          description: The credit sub account
          type: string
        debitAccountID:
          description: The debit account
          type: string
        debitSubAccountID:
          description: The debit sub account
          type: string
        depreciatedExpenseAccountID:
          description: The depreciation expense account for this fixed asset
          type: string
        depreciatedExpenseSubAccountID:
          description: The depreciation expense sub for this fixed asset
          type: string
        disposalAccountID:
          description: The proceeds account for this fixed asset
          type: string
        disposalSubAccountID:
          description: The proceeds sub for this fixed asset
          type: string
        gainAccountID:
          description: The gain account for this fixed asset
          type: string
        gainSubAccountID:
          description: The gain sub for this fixed asset
          type: string
        lossAccountID:
          description: The loss account for this fixed asset
          type: string
        lossSubAccountID:
          description: The loss sub for this fixed asset
          type: string
        subAccountID:
          description: The sub account for this fixed asset
          type: string
    accountsInFixedAssetTransactionDto:
      description: The accounts used in this fixed asset transaction
      properties:
        creditAccountID:
          description: The credit account
          type: string
        creditSubAccountID:
          description: The credit sub account
          type: string
        debitAccountID:
          description: The debit account
          type: string
        debitSubAccountID:
          description: The debit sub account
          type: string
    activeInWarehouseLocationUpdateDto:
      description: Active &gt; This check box indicates whether this location is active.
      properties:
        value:
          type: boolean
    actualAccountIdInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The accrual account to record the item amount on the purchase receipt; used for stock items and non-stock items for which a receipt is required.
      properties:
        value:
          type: string
    actualAccountIdInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The accrual account to record the item amount on the purchase receipt; used for stock items and non-stock items for which a receipt is required.
      properties:
        value:
          type: string
    actualAccountInPurchaseReceiptLineDto:
      description: Document details tab &gt; Accrual account &gt; The accrual account to record the item amount on the purchase receipt; used for stock items and non-stock items for which a receipt is required.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    actualSubInPurchaseReceiptLineDto:
      description: Document details tab &gt; Accrual sub. &gt; The subaccount used to record the item amount on the purchase receipt, used for stock items and non-stock items for which a receipt is required.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    addressInContactDto:
      description: The Details tab &gt; Address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    addressInEmployeeDto:
      description: General information tab &gt; Address info section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    addressInEmployeeUpdateDto:
      description: General information tab &gt; Address info section &gt;
      properties:
        addressLine1:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine2:
          $ref: "#/components/schemas/DtoValueOfString"
        addressLine3:
          $ref: "#/components/schemas/DtoValueOfString"
        city:
          $ref: "#/components/schemas/DtoValueOfString"
        countryId:
          $ref: "#/components/schemas/DtoValueOfString"
        county:
          $ref: "#/components/schemas/DtoValueOfString"
        postalCode:
          $ref: "#/components/schemas/DtoValueOfString"
    addressInLocationDto:
      description: General information tab &gt; Location address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    addressInSupplierLocationDto:
      description: General information tab &gt; Location address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    addressInWarehouseDto:
      description: Address information tab &gt; Address section &gt;
      properties:
        addressId:
          description: Information retrieved from the system.
          format: int32
          type: integer
        addressLine1:
          description: Address ! &gt; The first line in the address of the warehouse.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line in the warehouse address.
          type: string
        addressType:
          description: Information retrieved from the system.
          type: string
        city:
          description: City &gt; The city of the warehouse address.
          type: string
        country:
          $ref: "#/components/schemas/countryInWarehouseAddressDto"
        county:
          $ref: "#/components/schemas/countyInWarehouseAddressDto"
        postalCode:
          description: Postcode &gt; The postcode relevant for the warehouse address.
          type: string
        validated:
          description: Information retrieved from the system.
          type: boolean
    allocationRuleInProjectDto:
      description: Summary tab &gt; Invoicing and allocation settings section &gt; Allocation rule &gt; The default allocation rule that is used for the tasks created for the project.
      properties:
        active:
          type: boolean
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    alternateTypeInInventoryCrossReferenceUpdateDto:
      description: "The alternate type field. Select one of the following predefined types: CPN, VPN, Global, Barcode"
      properties:
        value:
          enum:
            - CPN
            - VPN
            - Global
            - Barcode
          type: string
    amountInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The amount calculated (after discount has been taken) for the item.
      properties:
        value:
          format: double
          type: number
    amountInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The amount calculated (after discount has been taken) for the item.
      properties:
        value:
          format: double
          type: number
    applicationDateInPaymentUpdateDto:
      description: "Mandatory field: The top part &gt; Date* &gt; The date when a payment is applied to a document (invoice or note). The current business date for unapplied or partially applied payments and the latest application date for the closed payment."
      properties:
        value:
          format: date-time
          type: string
    applicationPeriodInPaymentUpdateDto:
      description: "Mandatory field: The top part &gt; Financial period* &gt; The financial period to which the payment should be applied, which the system fills in based on the date."
      properties:
        value:
          type: string
    approvalDetailsInSupplierInvoiceDto:
      description: The Approval details tab &gt;
      properties:
        attachmentID:
          description: The Approval details tab &gt; Default document &gt; The default document that includes the payments requiring approval.
          type: string
        comment:
          description: The Approval details tab &gt; Comment &gt; The comment connected with the approval of the payments.
          type: string
    assemblyValidInWarehouseLocationUpdateDto:
      description: Assembly allowed &gt; You select this check box if assembly operations are allowed at this location.
      properties:
        value:
          type: boolean
    attributeIdInAttributeLineUpdateDto:
      description: The ID of the attribute on the line.
      properties:
        value:
          type: string
    bAccountInInventoryCrossReferenceDto:
      description: "Mandatory field: Supplier/Customer*, click magnifier &gt; Account ID &gt; Account no. identifying the business account."
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    baccountIdInLocationUpdateDto:
      description: Mandatory field for creating a new location. Can not be updated after it has been created.
      properties:
        value:
          type: string
    baccountIdInSupplierLocationUpdateDto:
      description: Mandatory field for creating a new location. Can not be updated after it has been created.
      properties:
        value:
          type: string
    baccountInLocationDto:
      description: "Mandatory field: The top part &gt; Business connection* &gt; The business account this location is associated with. Click the magnifier."
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    baccountInSupplierLocationDto:
      description: "Mandatory field: The top part &gt; Business connection* &gt; The business account this location is associated with. Click the magnifier."
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    bankAddress1InBankSettingsUpdateDto:
      description: Bank address 1
      properties:
        value:
          type: string
    bankAddress2InBankSettingsUpdateDto:
      description: Bank address 2
      properties:
        value:
          type: string
    bankAddress3InBankSettingsUpdateDto:
      description: Bank address 3
      properties:
        value:
          type: string
    bankCountryInBankSettingsUpdateDto:
      description: Bank country
      properties:
        value:
          type: string
    bankNameInBankSettingsUpdateDto:
      description: Bank name
      properties:
        value:
          type: string
    bankSettingsInBranchDto:
      description: The payment settings tab.
      properties:
        bankAddress1:
          description: Bank address1
          type: string
        bankAddress2:
          description: BankAddress2
          type: string
        bankAddress3:
          description: BankAddress3
          type: string
        bankCountry:
          description: BankCountry
          type: string
        bankName:
          description: Bank name
          type: string
        bbaN2:
          description: BBAN2
          type: string
        bbaN3:
          description: BBAN3
          type: string
        bban:
          description: BBAN
          type: string
        bic:
          description: BIC
          type: string
        creditorId:
          description: CreditorId
          type: string
        iban:
          description: IBAN
          type: string
    bankSettingsInExtendedOrganizationDto:
      description: Bank Settings
      properties:
        bankAddress1:
          description: Bank address1
          type: string
        bankAddress2:
          description: BankAddress2
          type: string
        bankAddress3:
          description: BankAddress3
          type: string
        bankCountry:
          description: BankCountry
          type: string
        bankName:
          description: Bank name
          type: string
        bbaN2:
          description: BBAN2
          type: string
        bbaN3:
          description: BBAN3
          type: string
        bban:
          description: BBAN
          type: string
        bic:
          description: BIC
          type: string
        creditorId:
          description: CreditorId
          type: string
        iban:
          description: IBAN
          type: string
    baseItemVolumeInPackagingUpdateDto:
      description: The volume of the <see cref="!:BaseUnit">Base Unit</see> of the item.
      properties:
        value:
          format: double
          type: number
    baseItemWeightInPackagingUpdateDto:
      description: The weight of the <see cref="!:BaseUnit">Base Unit</see> of the item.
      properties:
        value:
          format: double
          type: number
    bbaN2InBankSettingsUpdateDto:
      description: BBAN 2
      properties:
        value:
          type: string
    bbaN3InBankSettingsUpdateDto:
      description: BBAN 3
      properties:
        value:
          type: string
    bbanInBankSettingsUpdateDto:
      description: BBAN
      properties:
        value:
          type: string
    bicInBankSettingsUpdateDto:
      description: BIC
      properties:
        value:
          type: string
    billingRuleInProjectDto:
      description: Summary tab &gt; Invoicing and allocation settings section &gt; Invoicing rule &gt; The default invoicing rule that is used for the tasks created for the project.
      properties:
        active:
          type: boolean
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    bookBalanceInFixedAssetDto:
      description: The book balance details for this fixed asset
      properties:
        acquisitionCost:
          description: The acquisition cost of this fixed asset
          format: double
          type: number
        book:
          $ref: "#/components/schemas/bookInBookBalanceDto"
        depreciationFromDate:
          description: The date this asset is placed in service
          format: date-time
          type: string
        depreciationFromPeriod:
          description: The first period this fixed asset will start/has started depreciating
          type: string
        depreciationMethodID:
          description: The depreciation method id of this fixed asset
          type: string
        depreciationToPeriod:
          description: The last period this fixed asset will depreciate/ was depreciated
          type: string
        lastDepreciationPeriod:
          description: The last period this asset has been depreciated
          type: string
        salvageAmount:
          description: The salvage amount of this fixed asset
          format: double
          type: number
        usefulLife:
          description: The useful life of this fixed asset in years
          format: double
          type: number
    bookInBookBalanceDto:
      description: The book details of this fixed asset
      properties:
        bookID:
          description: The book id of this fixed asset
          type: string
        description:
          description: The description of the book
          type: string
    bookSettingsInFixedAssetClassDto:
      description: Default book settings for the fixed asset using this fixed asset class
      properties:
        bookID:
          description: The book id
          type: string
        depreciationMethodID:
          description: The depreciation method id
          type: string
    branchIdInPurchaseReceiptLineBasicUpdateDto:
      description: BranchId is deprecated, please use BranchNumber instead.
      properties:
        value:
          type: string
    branchIdInPurchaseReceiptLineUpdateDto:
      description: BranchId is deprecated, please use BranchNumber instead.
      properties:
        value:
          type: string
    branchInContractUsageLineDto:
      description: Both tabs &gt; Branch &gt;
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInCustomerDocumentDto:
      description: Branch is deprecated, please use BranchNumber instead.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInExpenseClaimDetailDto:
      description: "Mandatory field: Branch &gt; The branch that will reimburse the expenses to the employee."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInExpenseClaimDetailUpdateDto:
      description: The branch that will reimburse the expenses to the employee.
      properties:
        value:
          type: string
    branchInExpenseReceiptDto:
      description: "Mandatory field: The top part &gt; Branch &gt; The company branch that will incur the expenses."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInFinancialsDetailDto:
      description: Link to general ledger section &gt; Branch &gt; 	The branch that initiated the transaction.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInGeneralLedgerTransactionDetailsDto:
      description: Branch &gt; The branch of the company.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInNumberingSequenceDto:
      description: The table &gt; Branch &gt; The branch using the numbering series.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInProjectTransactionLineDto:
      description: Branch &gt; The branch in which the transaction was created.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInPurchaseOrderBasicDto:
      description: Document details tab &gt; Branch &gt; The branch to receive the item.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInPurchaseOrderDto:
      description: Document details tab &gt; Branch &gt; The branch to receive the item.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInPurchaseOrderLineDto:
      description: Branch &gt; The branch associated with the purchase order.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInPurchaseReceiptLineDto:
      description: Branch is deprecated, please use BranchNumber instead.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInSupplierDocumentDto:
      description: Branch is deprecated, please use BranchNumber instead.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInSupplierInvoiceLineUpdateDto:
      description: Branch is deprecated, please use BranchNumber instead.
      properties:
        value:
          type: string
    branchInTransactionDetailDto:
      description: "Mandatory field: Branch &gt; The branch that created the transaction."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchInWarehouseDto:
      description: "Mandatory field: The top part &gt; Branch* &gt; The branch associated with the company."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInBudgetDto:
      description: The Top part &gt; Branch &gt; Click the magnifier
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCashSaleDto:
      description: The Financial details tab &gt; Branch &gt; The branch with which this invoice or memo is associated. The field is available if your company is set up with branches.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCashSaleLineDto:
      description: "Mandatory field: Branch* &gt; The branch that sells the line item or provides the service."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCreditNoteDto:
      description: The Financial details tab &gt; Branch &gt; The branch with which this invoice or memo is associated. The field is available if your company is set up with branches.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCreditNoteLineDto:
      description: "Mandatory field: Branch* &gt; The branch that sells the line item or provides the service."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCustomerCreditNoteDto:
      description: The Financial details tab &gt; Branch &gt; The branch with which this invoice or memo is associated. The field is available if your company is set up with branches.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCustomerCreditNoteLineDto:
      description: "Mandatory field: Branch* &gt; The branch that sells the line item or provides the service."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCustomerCreditWriteOffDto:
      description: The Financial details tab &gt; Branch &gt; The branch with which this invoice or memo is associated. The field is available if your company is set up with branches.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCustomerDebitNoteDto:
      description: The Financial details tab &gt; Branch &gt; The branch with which this invoice or memo is associated. The field is available if your company is set up with branches.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCustomerDebitNoteLineDto:
      description: "Mandatory field: Branch* &gt; The branch that sells the line item or provides the service."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCustomerDocumentDto:
      description: The Financial details tab &gt; Branch &gt; The branch with which this invoice or memo is associated. The field is available if your company is set up with branches.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCustomerInvoiceDto:
      description: The Financial details tab &gt; Branch &gt; The branch with which this invoice or memo is associated. The field is available if your company is set up with branches.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCustomerInvoiceLineDto:
      description: "Mandatory field: Branch* &gt; The branch that sells the line item or provides the service."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCustomerOverdueChargeDto:
      description: The Financial details tab &gt; Branch &gt; The branch with which this invoice or memo is associated. The field is available if your company is set up with branches.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInCustomerOverdueChargeLineDto:
      description: "Mandatory field: Branch* &gt; The branch that sells the line item or provides the service."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInInventoryAdjustmentDto:
      description: The Branch associated
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInInventoryAdjustmentUpdateDto:
      description: The Branch associated
      properties:
        value:
          type: string
    branchNumberInInventoryIssueDto:
      description: The Branch associated
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInInventoryIssueUpdateDto:
      description: The Branch associated
      properties:
        value:
          type: string
    branchNumberInInventoryReceiptDto:
      description: The Branch associated
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInInventoryReceiptUpdateDto:
      description: The Branch associated
      properties:
        value:
          type: string
    branchNumberInInventoryTransferDto:
      description: The Branch associated
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInInventoryTransferUpdateDto:
      description: The Branch associated
      properties:
        value:
          type: string
    branchNumberInPurchaseReceiptBasicDto:
      description: "Mandatory field: Document details tab &gt; Branch* &gt; The branch to which the document belongs."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInPurchaseReceiptDto:
      description: "Mandatory field: Document details tab &gt; Branch* &gt; The branch to which the document belongs."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The number of the branch to which the purchase receipt line belongs.
      properties:
        value:
          type: string
    branchNumberInPurchaseReceiptLineDto:
      description: "Mandatory field: Document details tab &gt; Branch* &gt; The branch for which the item is purchased."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The number of the branch to which the purchase receipt line belongs.
      properties:
        value:
          type: string
    branchNumberInSalesOrderBasicDto:
      description: "Mandatory field: Document details tab &gt; Branch* &gt; The branch of the company."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInSalesOrderDto:
      description: "Mandatory field: Document details tab &gt; Branch* &gt; The branch of the company."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    branchNumberInSupplierInvoiceLineDto:
      description: "The table &gt; Mandatory field: Branch* &gt; The branch that purchases the line item or service.\r

        Note: The field type has been changed from string to BranchNumberDto, please consider doing changes accordingly."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    businessAccountInEntryTypeDto:
      description: "Business account &gt; The supplier account, if the entry type is used to record transactions that involve a particular supplier, or the customer account,\r

        if the entry type is used to record transactions that involve a particular customer."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    cN8InIntrastatUpdateDto:
      description: "Represents the 8 digit level Combine Nomenclature commodity code specific for the year\r

        for which the creating / actualizations Intrastat declarations is drafted."
      properties:
        value:
          type: string
    caseCountItemInCustomerContractSummaryDto:
      description: Contract management section &gt; Case count item &gt; A non-stock item used for counting cases associated with the contract.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    cashAccountInCashTransactionDto:
      description: "Mandatory field: The top part &gt; Cash account* &gt; The cash account that is a source account for the transaction."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    cashAccountInCustomerPaymentMethodDto:
      description: The top part &gt; Cash account &gt; The cash account to accrue customer payments made by this payment method, if it differs from the default cash account specified for the payment method selected.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    cashAccountInPaymentUpdateDto:
      description: "Mandatory field: The top part &gt; Cash account* &gt; The default cash account associated with the payment method."
      properties:
        value:
          type: string
    claimDetailIdInExpenseClaimDetailUpdateDto:
      description: Identifies the expense claim detail line to update
      properties:
        value:
          format: int32
          type: integer
    claimedByInExpenseClaimDto:
      description: "Mandatory field: The top part &gt; Claimed by &gt; The employee who is claiming the expenses. If the claim is released, an Accounts Payable bill will be generated to this employee."
      properties:
        internalId:
          type: string
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    claimedByInExpenseClaimUpdateDto:
      description: The employee who is claiming the expenses. If the claim is released, an Accounts Payable bill will be generated to this employee.
      properties:
        value:
          type: string
    claimedByInExpenseReceiptDto:
      description: "Mandatory field: The top part &gt; Claimed by* &gt; \tThe name of the employee who is claiming the expenses."
      properties:
        address:
          $ref: "#/components/schemas/addressInEmployeeDto"
        branch:
          $ref: "#/components/schemas/BranchNumberDto"
        calendarID:
          type: string
        contact:
          $ref: "#/components/schemas/contactInEmployeeDto"
        department:
          description: "Mandatory field: General information tab &gt; Employee section &gt; Department* &gt; The department the employee works for."
          type: string
        employeeClass:
          $ref: "#/components/schemas/employeeClassInEmployeeDto"
        employeeId:
          description: "Mandatory field: The top part &gt; Employee ID* &gt; The unique identifier, which is assigned to the employee in accordance with the configuration of the EMPLOYEE segmented key."
          format: int32
          type: integer
        employeeLogin:
          type: string
        employeeName:
          description: The top part &gt; Employee name &gt; The name of this employee.
          type: string
        employeeNumber:
          description: General information tab &gt; Employee settings section &gt; Employee ref. no. &gt; A reference number for the employee.
          type: string
        employeeUserId:
          description: Employee internal user ID. This is the ID of the user linked to the employee
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        status:
          description: "Mandatory field: The top part &gt; Status &gt; The status of the employee. The following options are available: Active, On hold, Hold payments, Inactive, One-time."
          enum:
            - Active
            - OnHold
            - HoldPayments
            - Inactive
            - OneTime
          type: string
        workGroupDescription:
          items:
            type: string
          type: array
    cogsAccountInInventoryAccountInformationDto:
      description: "Only used for Stock items.\r

        COGS account &gt; The expense account to be used for this stock item to record the cost of goods sold (COGS) once the sales order is released."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    cogsAccountInInventoryUpdateDto:
      description: Only used for Stock items
      properties:
        value:
          type: string
    cogsSubaccountInInventoryAccountInformationDto:
      description: "Only used for Stock items.\r

        COGS sub. &gt; The subaccount to be used for this item with the COGS account."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    completePoLineInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; A check box that indicates to the system (if selected) that the purchase order line added to this receipt line should be considered completed upon release of this purchase receipt.
      properties:
        value:
          type: boolean
    completePoLineInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; A check box that indicates to the system (if selected) that the purchase order line added to this receipt line should be considered completed upon release of this purchase receipt.
      properties:
        value:
          type: boolean
    consolBranchInLedgerDto:
      description: The top part &gt; Consol. branch &gt;  The consolidation branch, which you create when a company has multiple branches that operate within a single legal entity and post transactions to the same ledger.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    contactInCustomerCreditNoteDto:
      description: The top part &gt; Contact &gt; The contact associated with the customer.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    contactInCustomerDebitNoteDto:
      description: The Top part &gt; Contact &gt; The contact associated with the customer.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    contactInCustomerInvoiceDto:
      description: The top part &gt; Contact &gt; The contact associated with the customer.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    contactInCustomerOverdueChargeDto:
      description: The top part &gt; Contact &gt; The contact associated with the customer.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    contactInEmployeeDto:
      description: General information tab &gt; Contact section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        employeeContact:
          description: Employee contact &gt; The link to the contact record associated with the employee.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        firstName:
          description: First name &gt; The first name of the employee.
          type: string
        lastName:
          description: "Mandatory field: Last name* &gt; The last name of the employee."
          type: string
        midName:
          description: Middle name &gt; The middle name of the employee.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        phone3:
          description: Phone 3 &gt; An additional phone number of the employee.
          type: string
        title:
          description: Title &gt; The courtesy title to be used for the employee.
          enum:
            - Doctor
            - Miss
            - Mr
            - Mrs
            - Ms
            - Prof
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    contactInEmployeeUpdateDto:
      description: General information tab &gt; Contact section &gt;
      properties:
        email:
          $ref: "#/components/schemas/DtoValueOfString"
        fax:
          $ref: "#/components/schemas/DtoValueOfString"
        firstName:
          $ref: "#/components/schemas/DtoValueOfString"
        lastName:
          $ref: "#/components/schemas/DtoValueOfString"
        middleName:
          $ref: "#/components/schemas/DtoValueOfString"
        phone1:
          $ref: "#/components/schemas/DtoValueOfString"
        phone2:
          $ref: "#/components/schemas/DtoValueOfString"
        phone3:
          $ref: "#/components/schemas/DtoValueOfString"
    contactInLocationDto:
      description: General information tab &gt; Location contact section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    contactInSupplierLocationDto:
      description: General information tab &gt; Location contact section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    contactInWarehouseDto:
      description: Address information tab &gt; Contact section &gt;
      properties:
        attention:
          description: Attention &gt; The department or person to be noted on the attention line, if this line is used by your company.
          type: string
        companyName:
          description: Company name &gt; The legal business name of the warehouse to appear on the documents.
          type: string
        contactId:
          description: Information retrieved from the system.
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the contact person assigned to this warehouse.
          type: string
        fax:
          description: Fax &gt; The fax number of the contact person assigned to this warehouse.
          type: string
        phone1:
          description: Phone 1 &gt; The primary phone number of the contact person assigned to this warehouse.
          type: string
        phone2:
          description: Phone 2 &gt; 	A secondary phone number of the contact person assigned to this warehouse.
          type: string
        web:
          description: Web &gt; The URL of the web page where information about the warehouse is published.
          type: string
    contractIdInCustomerContractUpdateDto:
      description: Mandatory for POST, not applicable for PUT.
      properties:
        value:
          type: string
    contractTemplateInCustomerContractDto:
      description: "Mandatory field: The top part &gt; Contract template* &gt; The contract template that is used as a base for the contract."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    contractTemplateInCustomerContractUpdateDto:
      description: Mandatory for POST, not applicable for PUT.
      properties:
        value:
          type: string
    controlAmountInInventoryIssueUpdateDto:
      description: The manually entered summary amount for all specified inventory items. Control Amount is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Amount and Total Amount values do not match, the system generates a warning message and the issue cannot be saved.
      properties:
        value:
          format: double
          type: number
    controlCostInInventoryAdjustmentUpdateDto:
      description: The manually entered summary cost for all specified inventory adjustment items.
      properties:
        value:
          format: double
          type: number
    controlCostInInventoryReceiptUpdateDto:
      description: The manually entered summary amount for all specified inventory receipt items.
      properties:
        value:
          format: double
          type: number
    controlQuantityInInventoryAdjustmentUpdateDto:
      description: The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
      properties:
        value:
          format: double
          type: number
    controlQuantityInInventoryIssueUpdateDto:
      description: The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
      properties:
        value:
          format: double
          type: number
    controlQuantityInInventoryReceiptUpdateDto:
      description: The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
      properties:
        value:
          format: double
          type: number
    controlQuantityInInventoryTransferUpdateDto:
      description: The manually entered quantity of inventory items. Control Qty. is available only if the Validate Document Totals on Entry option is selected on the Inventory Preferences form. If the Control Qty. and Total Qty.values do not match, the system generates a warning message and the issue cannot be saved.
      properties:
        value:
          format: double
          type: number
    costPriceStatisticsInInventoryDto:
      description: Price/cost information tab &gt;
      properties:
        averageCost:
          description: Cost price statistics section &gt; Average cost &gt; The average cost for the stock item.
          format: double
          type: number
        lastCost:
          description: Cost price statistics section &gt; Last cost &gt; The last standard cost used for the stock item.
          format: double
          type: number
        maxCost:
          description: Cost price statistics section &gt; Max. cost &gt; The maximum cost for the stock item.
          format: double
          type: number
        minCost:
          description: Cost price statistics section &gt; Min. cost &gt; The minimum cost for the stock item.
          format: double
          type: number
    countryInAddressDto:
      description: Country &gt; The country.
      properties:
        errorInfo:
          type: string
        id:
          description: "Mandatory field: Country ID* &gt; The unique two-letter country ID according to international standard ISO 3166."
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          description: "Mandatory field: Country name* &gt; The complete name of the country."
          type: string
    countryInCustomerDocumentAddressDto:
      description: Country &gt; The country.
      properties:
        errorInfo:
          type: string
        id:
          description: "Mandatory field: Country ID* &gt; The unique two-letter country ID according to international standard ISO 3166."
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          description: "Mandatory field: Country name* &gt; The complete name of the country."
          type: string
    countryInPurchaseOrderAddressDto:
      description: Country &gt; The country.
      properties:
        errorInfo:
          type: string
        id:
          description: "Mandatory field: Country ID* &gt; The unique two-letter country ID according to international standard ISO 3166."
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          description: "Mandatory field: Country name* &gt; The complete name of the country."
          type: string
    countryInSalesOrderAddressDto:
      description: Country &gt; The country.
      properties:
        errorInfo:
          type: string
        id:
          description: "Mandatory field: Country ID* &gt; The unique two-letter country ID according to international standard ISO 3166."
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          description: "Mandatory field: Country name* &gt; The complete name of the country."
          type: string
    countryInShipmentAddressDto:
      description: Country &gt; The country.
      properties:
        errorInfo:
          type: string
        id:
          description: "Mandatory field: Country ID* &gt; The unique two-letter country ID according to international standard ISO 3166."
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          description: "Mandatory field: Country name* &gt; The complete name of the country."
          type: string
    countryInWarehouseAddressDto:
      description: Country &gt; The country where the warehouse is located.
      properties:
        errorInfo:
          type: string
        id:
          description: "Mandatory field: Country ID* &gt; The unique two-letter country ID according to international standard ISO 3166."
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          description: "Mandatory field: Country name* &gt; The complete name of the country."
          type: string
    countryOfOriginInIntrastatUpdateDto:
      description: "The country of origin of the commodity will be selected,\r

        that country where the good has been produced or had the last substantial transformation."
      properties:
        value:
          type: string
    countyInAddressDto:
      description: County &gt; The county or province.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    countyInCustomerDocumentAddressDto:
      description: County &gt; The county or province.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    countyInPurchaseOrderAddressDto:
      description: County &gt; The county or province.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    countyInSalesOrderAddressDto:
      description: County &gt; The county or province.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    countyInShipmentAddressDto:
      description: County &gt; The county or province.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    countyInWarehouseAddressDto:
      description: County &gt; The county where the warehouse is located.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    creditAccountGroupInProjectTransactionLineDto:
      description: Debit Account group &gt; The account group of the credit side account of the transaction.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    creditAccountInProjectTransactionLineDto:
      description: Credit account &gt; For released transactions, the account the transaction credited when it was released; for unreleased transactions, the account the transaction credits if it is released.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    creditSubaccountInProjectTransactionLineDto:
      description: Credit subaccount &gt; 	For released transactions, the subaccount the transaction credited when it was released; for unreleased transactions, the subaccount the transaction credits if it is released.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    creditTermsInCashSaleDto:
      description: "Mandatory field: The Financial details tab &gt; Payment info section &gt; Terms*"
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    creditTermsInCustomerCreditNoteDto:
      description: The top part &gt; Terms* &gt; The credit terms used in relations with the customer.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    creditTermsInCustomerDebitNoteDto:
      description: "Mandatory field: The Top part &gt; Terms* &gt; The credit terms used in relations with the customer."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    creditTermsInCustomerDto:
      description: General information tab &gt; Financial settings section &gt; Terms &gt; The type of credit terms used in operations with the customer.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    creditTermsInCustomerInvoiceDto:
      description: "Mandatory field: The top part &gt; Terms* &gt; The credit terms used in relations with the customer."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    creditTermsInCustomerOverdueChargeDto:
      description: "Mandatory field: The top part &gt; Terms* &gt; The credit terms used in relations with the customer."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    creditTermsInSupplierDto:
      description: General information tab &gt; Financial settings section &gt; Terms &gt; The type of credit terms used in operations with the supplier.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    creditTermsInSupplierInvoiceDto:
      description: The Top part &gt; Terms &gt; The credit terms associated with the supplier (unavailable for prepayments and debit adjustments)
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    creditorIdInBankSettingsUpdateDto:
      description: Creditor Id
      properties:
        value:
          type: string
    currencyInBranchDto:
      description: The Organisation details tab &gt; Base currency settings (shared) section &gt; This group of elements holds information that is shared among all branches of the company.
      properties:
        description:
          description: Currency description.
          type: string
        id:
          description: Currency Id.
          type: string
        symbol:
          description: Currency symbol.
          type: string
    currencyInExpenseReceiptDto:
      description: Both tabs &gt; Currency &gt; The currency of the expense receipt.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    currencyInExtendedOrganizationDto:
      description: Currency
      properties:
        decimalPrecision:
          description: Decimal precision.
          format: int32
          type: integer
        description:
          description: Currency description.
          type: string
        id:
          description: Currency Id.
          type: string
        isBaseCurrency:
          description: Identify if the currency is the base currency.
          type: boolean
        isUsedForAccounting:
          description: Identify if is used for accounting.
          type: boolean
        symbol:
          description: Currency symbol.
          type: string
    currencyInPaymentUpdateDto:
      description: The top part &gt; Currency &gt; The currency of the payment document. Once the customer is selected, the system inserts the customer's default currency.
      properties:
        value:
          type: string
    currencyInSupplierPaymentDto:
      description: The top part &gt; Currency &gt; The currency of the payment; by default, it is the currency associated with the cash account.
      properties:
        decimalPrecision:
          description: Decimal precision.
          format: int32
          type: integer
        description:
          description: Currency description.
          type: string
        id:
          description: Currency Id.
          type: string
        isBaseCurrency:
          description: Identify if the currency is the base currency.
          type: boolean
        isUsedForAccounting:
          description: Identify if is used for accounting.
          type: boolean
        symbol:
          description: Currency symbol.
          type: string
    customerClassInCustomerDto:
      description: "Mandatory field: General information tab &gt; Financial settings section &gt; Customer class* &gt; The class to which the customer is assigned."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    customerInCashSaleDto:
      description: The top part &gt; Customer &gt; The customer associated with the document.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInCreditNoteDto:
      description: The top part &gt; Customer &gt; The customer associated with the document.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInCustomerContractDto:
      description: "Mandatory field: The top part &gt; Customer* &gt; The customer associated with the contract."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInCustomerContractUpdateDto:
      description: Mandatory for POST, not applicable for PUT.
      properties:
        value:
          type: string
    customerInCustomerCreditNoteDto:
      description: The top part &gt; Customer &gt; The customer associated with the document.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInCustomerCreditWriteOffDto:
      description: The top part &gt; Customer &gt; The customer associated with the document.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInCustomerDebitNoteDto:
      description: The top part &gt; Customer &gt; The customer associated with the document.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInCustomerDocumentDto:
      description: The top part &gt; Customer &gt; The customer associated with the document.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInCustomerInvoiceDto:
      description: The top part &gt; Customer &gt; The customer associated with the document.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInCustomerOverdueChargeDto:
      description: The top part &gt; Customer &gt; The customer associated with the document.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInCustomerPaymentMethodDto:
      description: "Mandatory field: The top part &gt; Customer* &gt; The customer whose payment method you want to view or add; select a customer from the list of customers defined in the system."
      properties:
        id:
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    customerInExpenseClaimDetailDto:
      description: Customer &gt; The identifier of the customer associated with the expense.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInExpenseClaimDetailUpdateDto:
      description: The identifier of the customer associated with the expense.
      properties:
        value:
          type: string
    customerInExpenseClaimDto:
      description: The top part &gt; Customer &gt; The applicable customer.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInExpenseClaimUpdateDto:
      description: The applicable customer.
      properties:
        value:
          type: string
    customerInExpenseReceiptDto:
      description: Receipt details tab &gt; Financial details section &gt; Customer &gt; The customer, which should be specified if the employee incurred the expenses while working for a particular customer.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInPaymentDto:
      description: "Mandatory field: The top part &gt; Customer* &gt; The customer who issued the payment."
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInPaymentUpdateDto:
      description: "Mandatory field: The top part &gt; Customer* &gt; The customer who issued the payment."
      properties:
        value:
          type: string
    customerInProjectBasicDto:
      description: The top part &gt; Customer &gt; The customer for the project if this project is external.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInProjectDto:
      description: The top part &gt; Customer &gt; The customer for the project if this project is external.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    customerInSalesOrderBasicDto:
      description: The top part &gt; Customer &gt; The customer that has ordered the goods or services.
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    customerInSalesOrderBasicUpdateDto:
      description: Mandatory field if GLN or VatRegistrationId is not specified.
      properties:
        value:
          type: string
    customerInSalesOrderDto:
      description: The top part &gt; Customer &gt; The customer that has ordered the goods or services.
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    customerInSalesOrderUpdateDto:
      description: Mandatory field if GLN or VatRegistrationId is not specified.
      properties:
        value:
          type: string
    customerInShipmentDto:
      description: The top part &gt; Customer &gt; The customer to whom the goods specified in the document should be shipped. (This field does not appear for transfers.)
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    customerLocationInProjectDto:
      description: Summary tab &gt; Invoice to section &gt; Customer location &gt; The location of the project's customer.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    customerVATZoneInSalesOrderDto:
      description: Financial settings tab &gt; Financial information section &gt; Customer VAT zone &gt; The customers VAT zone to be used to process customer sales orders, which generally is the zone associated with the customer's delivery address.
      properties:
        defaultTaxCategory:
          $ref: "#/components/schemas/TaxCategoryNumberDescriptionDto"
        defaultVatCategory:
          description: Click the magnifier. The Default VAT category for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        description:
          description: Click the magnifier. The description for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        errorInfo:
          type: string
        id:
          description: Click the magnifier. The identifier for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
    customerVatZoneInCustomerCreditNoteDto:
      description: The Financial details tab &gt; The VAT info section &gt; Customer VAT zone
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    customerVatZoneInCustomerCreditWriteOffDto:
      description: The Financial details tab &gt; The VAT info section &gt; Customer VAT zone &gt; If the invoice was created from an opportunity that has a VAT zone specified, the VAT zone specified for the opportunity.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    customerVatZoneInCustomerDebitNoteDto:
      description: The Financial details tab &gt; The VAT info section &gt; Dunning letter date &gt;
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    customerVatZoneInCustomerInvoiceDto:
      description: The Financial details tab &gt; The VAT info section &gt; Dunning letter date &gt;
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    customerVatZoneInCustomerOverdueChargeDto:
      description: The Financial details tab &gt; The VAT info section &gt; Dunning letter date
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    customerVendorInProjectTransactionLineDto:
      description: Customer/supplier &gt; The name of the supplier (if the transaction originated in the Supplier ledger workspace) or customer (if the transaction originated in another workspace).
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    dateInExpenseClaimDetailUpdateDto:
      description: The date when the expense was incurred.
      properties:
        value:
          format: date-time
          type: string
    dateInExpenseClaimUpdateDto:
      description: The date when the claim was entered.
      properties:
        value:
          format: date-time
          type: string
    dateInInventoryAdjustmentUpdateDto:
      description: The date when the receipt was created. All transactions included in this document will have this transaction date.
      properties:
        value:
          format: date-time
          type: string
    dateInInventoryIssueUpdateDto:
      description: The date when the receipt was created. All transactions included in this document will have this transaction date.
      properties:
        value:
          format: date-time
          type: string
    dateInInventoryReceiptUpdateDto:
      description: The date when the receipt was created. All transactions included in this document will have this transaction date.
      properties:
        value:
          format: date-time
          type: string
    dateInInventoryTransferUpdateDto:
      description: The date when the receipt was created. All transactions included in this document will have this transaction date.
      properties:
        value:
          format: date-time
          type: string
    daysEffectiveInCreateCurrencyRateTypeDto:
      description: Days effective.
      properties:
        value:
          format: int32
          type: integer
    debitAccountGroupInProjectTransactionLineDto:
      description: Debit Account group &gt; The account group of the debit side account of the transaction. This field has been deprecated and will be removed in future versions. Use DebitAccountGroup.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    debitAccountInProjectTransactionLineDto:
      description: Debit account &gt; For released transactions, the account the transaction debited when it was released; for unreleased transactions, the account the transaction debits if it is released (mainly for the transactions that originate in the Projects module).
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    debitSubaccountInProjectTransactionLineDto:
      description: Debit subaccount &gt; For released transactions, the subaccount the transaction debited when it was released; for unreleased transactions, the subaccount the transaction debits if it is released.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    defAccountInProjectDto:
      description: General ledger accounts tab &gt; Default values section &gt; Default account &gt; The account to be used as one of the sources of possible accounts for the invoices and transactions for the project.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    defAccountInTaskExtendedDto:
      description: General ledger accounts tab &gt; Default values section &gt; Default account &gt; The account to be used as one of the sources of possible accounts for the invoices and transactions for the project task.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    defAccrualAccountInProjectDto:
      description: General ledger accounts tab &gt; Default values section &gt; Accrual account &gt; The default accrual account to be used in project transactions for the project.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    defAccrualAccountInTaskExtendedDto:
      description: General ledger accounts tab &gt; Default values section &gt; Accrual account &gt; The default accrual account to be used in project transactions for the project task.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    defAccrualSubInProjectDto:
      description: General ledger accounts tab &gt; Default values section &gt; Accrual subaccount &gt; The default accrual subaccount to be used in project transactions for the project.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    defAccrualSubInTaskExtendedDto:
      description: General ledger accounts tab &gt; Default values section &gt; Accrual subaccount &gt; The default accrual subaccount to be used in project transactions for the project task.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    defSubInProjectDto:
      description: "Mandatory field: General ledger accounts tab &gt; Default values section &gt; Default subaccount* &gt; The subaccount to be used as one of the sources of possible segment values for subaccounts to be used in the invoices and transactions for the project."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    defSubInTaskExtendedDto:
      description: General ledger accounts tab &gt; Default values section &gt; Default subaccount* &gt; The subaccount to be used as one of the sources of possible segment values for subaccounts to be used in the invoices and transactions for the project task.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    defaultCountryInBranchDto:
      description: "Mandatory field: The organisation details tab &gt; Configuration settings section &gt; Default country* &gt; The default country, which is the country of most of the company's customers and suppliers."
      properties:
        errorInfo:
          type: string
        id:
          description: "Mandatory field: Country ID* &gt; The unique two-letter country ID according to international standard ISO 3166."
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          description: "Mandatory field: Country name* &gt; The complete name of the country."
          type: string
    defaultCountryInExtendedOrganizationDto:
      description: Default Country
      properties:
        errorInfo:
          type: string
        id:
          description: "Mandatory field: Country ID* &gt; The unique two-letter country ID according to international standard ISO 3166."
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        name:
          description: "Mandatory field: Country name* &gt; The complete name of the country."
          type: string
    defaultIssueFromInInventoryDto:
      description: General information tab &gt; Warehouse defaults section &gt; Default issue from &gt; The location of the warehouse to be used by default to issue quantities of the selected stock item.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    defaultIssueFromInInventoryUpdateDto:
      description: General information tab &gt; Warehouse defaults section &gt; Default issue from &gt; The location of the warehouse to be used by default to issue quantities of the selected stock item.
      properties:
        value:
          type: string
    defaultNonStockItemInVatInformationDto:
      description: VAT settings tab &gt; Default non-stock item &gt; The default non-stock item for the VAT ID.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    defaultOffsetAccountBranchInEntryTypeDto:
      description: The branch to which the default offset account belongs.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    defaultOffsetAccountInEntryTypeDto:
      description: Default offset account &gt; The account that is used by default as the offset account for this entry type.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    defaultOffsetSubaccountInEntryTypeDto:
      description: Default offset subaccount &gt; The corresponding subaccount.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    defaultPriceInInventoryUpdateDto:
      description: The price of the item. This price is used as the default price, if there are no other prices set.
      properties:
        value:
          format: double
          type: number
    defaultReceiptToInInventoryDto:
      description: General information tab &gt; Warehouse defaults section &gt; Default receipt to &gt; The location of warehouse to be used by default to receive certain quantities of the specified stock item.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    defaultReceiptToInInventoryUpdateDto:
      description: General information tab &gt; Warehouse defaults section &gt; Default receipt to &gt; The location of warehouse to be used by default to receive certain quantities of the specified stock item.
      properties:
        value:
          type: string
    defaultWarehouseInInventoryDto:
      description: General information tab &gt; Warehouse defaults section &gt; Default warehouse &gt; The default warehouse used to store the stock item with the specified item ID.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    defaultWarehouseInInventoryUpdateDto:
      description: General information tab &gt; Warehouse defaults section &gt; Default warehouse &gt; The default warehouse used to store the stock item with the specified item ID.
      properties:
        value:
          type: string
    deferralAccountInDeferralCodeDto:
      description: Deferral account &gt; The account used to hold the deferred amount until it is fully recognised.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    deferralSubInDeferralCodeDto:
      description: Deferral sub &gt; The corresponding subaccount.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    deliveryAddressInBranchDto:
      description: The Delivery settings tab &gt; Delivery address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    deliveryAddressInCustomerDto:
      description: Delivery settings tab &gt; Shipping address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    deliveryAddressInExtendedOrganizationDto:
      description: Delivery Address
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    deliveryAddressInShipmentDto:
      description: Delivery settings tab &gt; Delivery address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInShipmentAddressDto"
        county:
          $ref: "#/components/schemas/countyInShipmentAddressDto"
        overrideAddress:
          description: Override address &gt; A check box that you select to not include the default address information and to type new address information.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    deliveryContactInBranchDto:
      description: The Delivery settings tab &gt; Delivery contact section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    deliveryContactInCustomerDto:
      description: Delivery settings tab &gt; Shipping contact section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    deliveryContactInExtendedOrganizationDto:
      description: Delivery Contact
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    deliveryContactInShipmentDto:
      description: Delivery settings tab &gt; Delivery address contact section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        overrideContact:
          description: Override contact &gt; A check box that you select to not use+ the default contact information and to type new contact information.
          type: boolean
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    departmentInEmployeeUpdateDto:
      description: "Mandatory field: General information tab &gt; Employee section &gt; Department* &gt; The department the employee works for."
      properties:
        value:
          type: string
    departmentInExpenseClaimDto:
      description: "Mandatory field: The top part &gt; Department ID &gt; The department associated with the expense claim."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    descriptionInCreateCurrencyRateTypeDto:
      description: Description.
      properties:
        value:
          type: string
    descriptionInExpenseClaimDetailUpdateDto:
      description: A description of the transaction.
      properties:
        value:
          type: string
    descriptionInExpenseClaimUpdateDto:
      description: A description of the claim.
      properties:
        value:
          type: string
    descriptionInInventoryAdjustmentUpdateDto:
      description: A brief description of the inventory issue or its transactions.
      properties:
        value:
          type: string
    descriptionInInventoryIssueUpdateDto:
      description: A brief description of the inventory issue or its transactions.
      properties:
        value:
          type: string
    descriptionInInventoryReceiptUpdateDto:
      description: A brief description of the inventory issue or its transactions.
      properties:
        value:
          type: string
    descriptionInInventoryTransferUpdateDto:
      description: A brief description of the inventory issue or its transactions.
      properties:
        value:
          type: string
    descriptionInProjectUpdateDto:
      description: Mandatory field
      properties:
        value:
          type: string
    descriptionInTimeCardMaterialsUpdateDto:
      description: The description of the reported quantity.
      properties:
        value:
          type: string
    descriptionInTimeCardSummaryUpdateDto:
      description: The description of the reported work hours.
      properties:
        value:
          type: string
    descriptionInWarehouseLocationUpdateDto:
      description: Description &gt; A brief description of the warehouse location.
      properties:
        value:
          type: string
    detailsInCustomerContractDto:
      description: Details tab &gt;
      properties:
        currentRecurring:
          format: double
          type: number
        currentRenewal:
          format: double
          type: number
        currentSetup:
          format: double
          type: number
        effectiveFrom:
          format: date-time
          type: string
        lines:
          items:
            $ref: "#/components/schemas/CustomerContractDetailsLineDto"
          type: array
        pendingRecurring:
          format: double
          type: number
        pendingRenewal:
          format: double
          type: number
        pendingSetup:
          format: double
          type: number
        promoCode:
          $ref: "#/components/schemas/PromoCodeIdDescriptionDto"
        totalPending:
          format: double
          type: number
    detailsInFixedAssetDto:
      description: The details of this fixed asset
      properties:
        acquisitionCost:
          description: The acquisition cost of this fixed asset
          format: double
          type: number
        billNumber:
          description: The bill number of the fixed asset invoice
          type: string
        depreciateFromDate:
          description: The date this asset is placed in service
          format: date-time
          type: string
        disposalDate:
          description: The date of the disposal of this fixed asset
          format: date-time
          type: string
        disposalMethod:
          $ref: "#/components/schemas/disposalMethodInDetailsDto"
        disposalMethodID:
          description: The disposal method of this fixed asset
          format: int32
          type: integer
        disposalPeriodID:
          description: The period of the disposal of this fixed asset
          type: string
        leaseAndRentInfo:
          $ref: "#/components/schemas/leaseAndRentInfoInDetailsDto"
        propertyType:
          description: Type can be
          enum:
            - Property
            - GrantProperty
            - Leased
            - LeasedtoOthers
            - Rented
            - RentedtoOthers
            - Credit
          type: string
        receiptDate:
          description: The date of the receipt
          format: date-time
          type: string
        saleAmount:
          description: The disposal amount of this fixed asset
          format: double
          type: number
        salvageAmount:
          description: The salvage amount of this fixed asset
          format: double
          type: number
        serialNumber:
          description: The serial number of this fixed asset
          type: string
        status:
          description: Status can be
          enum:
            - Active
            - Disposed
            - FullyDepreciated
            - Hold
            - Reversed
            - Suspended
          type: string
    discountAmountInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The automatically calculated or manually entered discount amount on the line.
      properties:
        value:
          format: double
          type: number
    discountAmountInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The automatically calculated or manually entered discount amount on the line.
      properties:
        value:
          format: double
          type: number
    discountCodeIdInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The code of the line discount that has been applied to this line automatically.
      properties:
        value:
          type: string
    discountCodeIdInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The code of the line discount that has been applied to this line automatically.
      properties:
        value:
          type: string
    discountCodeInPurchaseOrderLineDto:
      description: Discount code &gt; The code of the line discount that has been applied to this line automatically.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    discountCodeInPurchaseReceiptLineDto:
      description: Document details tab &gt; Discount code &gt; The code of the line discount that has been applied to this line automatically.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    discountPercentInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The automatically calculated or manually entered discount percent on the line.
      properties:
        value:
          format: double
          type: number
    discountPercentInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The automatically calculated or manually entered discount percent on the line.
      properties:
        value:
          format: double
          type: number
    disposalMethodInDetailsDto:
      description: The disposal method details of this fixed asset
      properties:
        description:
          description: The description of the disposal method
          type: string
    dropShipLocationInWarehouseDto:
      description: Location table tab &gt; Drop-ship location &gt; The warehouse location used to account for drop shipments.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    eInvoiceContractInCustomerDto:
      description: Other invoice settings tab.
      properties:
        fInvoiceContractID:
          type: string
        fInvoiceIntermediatorID:
          type: string
    earningTypeInProjectTransactionLineDto:
      description: Earning type &gt; The earning type specified for the transaction to calculate the labour cost.
      properties:
        code:
          description: "Mandatory field: Code* &gt; The unique ID of the type of hour."
          type: string
        description:
          description: "Mandatory field: Description &gt; The brief description of the type of hour."
          type: string
        isActive:
          description: Active &gt; A check box that indicates (if selected) that the type of hour is active and can be used.
          type: boolean
        isBillable:
          description: Invoicable &gt; A check box that indicates (if selected) that the type is treated as invoiceable by default.
          type: boolean
        isOvertime:
          description: Overtime &gt; A check box that indicates (if selected) that the type of hour is treated as overtime.
          type: boolean
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        overtimeMultiplier:
          description: Multiplier &gt; The value by which the employee cost for this type of hour is multiplied when the time activity is released.
          format: double
          type: number
    earningTypeInTimeCardSummaryDto:
      description: Earning type &gt; The type of the work time spent by the employee
      properties:
        code:
          description: "Mandatory field: Code* &gt; The unique ID of the type of hour."
          type: string
        description:
          description: "Mandatory field: Description &gt; The brief description of the type of hour."
          type: string
        isActive:
          description: Active &gt; A check box that indicates (if selected) that the type of hour is active and can be used.
          type: boolean
        isBillable:
          description: Invoicable &gt; A check box that indicates (if selected) that the type is treated as invoiceable by default.
          type: boolean
        isOvertime:
          description: Overtime &gt; A check box that indicates (if selected) that the type of hour is treated as overtime.
          type: boolean
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        overtimeMultiplier:
          description: Multiplier &gt; The value by which the employee cost for this type of hour is multiplied when the time activity is released.
          format: double
          type: number
    earningTypeInTimeCardSummaryUpdateDto:
      description: The type of the work time spent by the employee
      properties:
        value:
          type: string
    effectiveDateInCreateCurrencyRateDto:
      description: Currency effective date.
      properties:
        value:
          format: date-time
          type: string
    employeeClassInEmployeeDto:
      description: "Additional information about Employee User\r

        ///"
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    employeeInProjectTransactionLineDto:
      description: Employee &gt; The employee associated with the transaction, such as the employee who worked on the project for the customer.
      properties:
        address:
          $ref: "#/components/schemas/addressInEmployeeDto"
        branch:
          $ref: "#/components/schemas/BranchNumberDto"
        calendarID:
          type: string
        contact:
          $ref: "#/components/schemas/contactInEmployeeDto"
        department:
          description: "Mandatory field: General information tab &gt; Employee section &gt; Department* &gt; The department the employee works for."
          type: string
        employeeClass:
          $ref: "#/components/schemas/employeeClassInEmployeeDto"
        employeeId:
          description: "Mandatory field: The top part &gt; Employee ID* &gt; The unique identifier, which is assigned to the employee in accordance with the configuration of the EMPLOYEE segmented key."
          format: int32
          type: integer
        employeeLogin:
          type: string
        employeeName:
          description: The top part &gt; Employee name &gt; The name of this employee.
          type: string
        employeeNumber:
          description: General information tab &gt; Employee settings section &gt; Employee ref. no. &gt; A reference number for the employee.
          type: string
        employeeUserId:
          description: Employee internal user ID. This is the ID of the user linked to the employee
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        status:
          description: "Mandatory field: The top part &gt; Status &gt; The status of the employee. The following options are available: Active, On hold, Hold payments, Inactive, One-time."
          enum:
            - Active
            - OnHold
            - HoldPayments
            - Inactive
            - OneTime
          type: string
        workGroupDescription:
          items:
            type: string
          type: array
    employeeInTimeCardDto:
      description: The top part &gt; Employee &gt; The name of the employee whose time card is currently open.
      properties:
        internalId:
          type: string
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    employeePartInExpenseClaimDetailUpdateDto:
      description: The part of the total amount that will not be paid back to the employee. The percentage depends on the company policy.
      properties:
        value:
          format: double
          type: number
    entryTypeInCashTransactionDto:
      description: "Mandatory field: The top part &gt; Entry type* &gt; The user-defined transaction type."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    expenseAccountImportInSupplierGlAccountsDto:
      description: Expense account, import &gt; The import expense account used to record expenses made to the suppliers of this class.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    expenseAccountInDepartmentDto:
      description: The table &gt; Expense account &gt; The expense account to be used for recording department-related expenses.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    expenseAccountInExpenseClaimDetailDto:
      description: "Mandatory field: Expense account &gt; The expense account to which the system should record the part of the expense to be paid back to the employee."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    expenseAccountInExpenseClaimDetailUpdateDto:
      description: The expense account to which the system should record the part of the expense to be paid back to the employee.
      properties:
        value:
          type: string
    expenseAccountInExpenseReceiptDto:
      description: Receipt details tab &gt; Financial details section &gt; Expense account &gt; The expense account to which the system records the part of the expense to be paid back to the employee.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    expenseAccountInInventoryAccountInformationDto:
      description: "Only used for Non-stock items.\r

        Mandatory field: Expense account* &gt; The default expense account to be used for this non-stock item."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    expenseAccountInInventoryUpdateDto:
      description: Only used for Non-stock items
      properties:
        value:
          type: string
    expenseAccountInSupplierGlAccountsDto:
      description: Expense account &gt; The expense account used to record expenses incurred for the supplier.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    expenseAccountNonTaxInSupplierGlAccountsDto:
      description: Expence acct, non-taxable &gt; The non-taxable expense account used to record expenses made to the suppliers of this class.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    expenseAccrualAccountInInventoryAccountInformationDto:
      description: "Only used for Non-stock items.\r

        Purchase accrual account &gt; Purchase order accrual account &gt; The liability account to be used for this stock item to accrue amounts on purchase orders related to this item."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    expenseAccrualAccountInInventoryUpdateDto:
      description: Only used for Non-stock items
      properties:
        value:
          type: string
    expenseClaimInExpenseReceiptDto:
      description: Receipt details tab &gt; Expense details section &gt; Expense claim &gt; The expense claim with which the expense receipt is associated.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    expenseEUAccountInSupplierGlAccountsDto:
      description: Expence EU account &gt; The EU expense account used to record expenses made to the suppliers of this class.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    expenseEuAccountInInventoryAccountInformationDto:
      description: Expense EU account &gt; The income account to be used for this stock item to record EU expenses.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    expenseImportAccountInInventoryAccountInformationDto:
      description: Expense account, import &gt; The income account to be used for this stock item to record import expenses.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    expenseItemInExpenseClaimDetailDto:
      description: "Mandatory field: Expense item* &gt; The expense identifier, if an expense of this type is listed as an inventory nonstock item."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    expenseItemInExpenseClaimDetailUpdateDto:
      description: The expense identifier, if an expense of this type is listed as an inventory nonstock item.
      properties:
        value:
          type: string
    expenseNonTaxableAccountInInventoryAccountInformationDto:
      description: Expense account, non-taxable &gt; The income account to be used for this stock item to record non-taxable expenses.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    expenseSubInExpenseReceiptDto:
      description: Receipt details tab &gt; Financial details section &gt; Expense sub. &gt; The corresponding subaccount the system uses to record the part of the expense to be paid back to the employee.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    expenseSubaccountInDepartmentDto:
      description: The table &gt; Expense sub. &gt; The subaccount to be used for recording department related expenses.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    expenseSubaccountInExpenseClaimDetailDto:
      description: "MAndatory field: Expense sub. &gt; The corresponding subaccount the system uses to record the part of the expense to be paid back to the employee."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    expenseSubaccountInInventoryAccountInformationDto:
      description: "Only used for Non-stock items.\r

        Mandatory field: Expense sub* &gt; The subaccount to be used by default with the expense account for transactions related to this non-stock item."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    expenseSubaccountInSupplierGlAccountsDto:
      description: Expense sub &gt; The corresponding subaccount used to record expenses incurred for the supplier.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    expirationDateInAllocationsUpdateDto:
      description: Expiration date &gt; The expiration date of the specified quantity of the stock item.
      properties:
        value:
          format: date-time
          type: string
    expirationDateInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The expiration date of the received item.
      properties:
        value:
          format: date-time
          type: string
    expirationDateInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The expiration date of the received item.
      properties:
        value:
          format: date-time
          type: string
    expirationDateInShipmentDetailLineUpdateDto:
      description: Property will become obsolete after version 5.31
      properties:
        value:
          format: date-time
          type: string
    extCostInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The extended cost of the item, which is the unit price multiplied by the quantity.
      properties:
        value:
          format: double
          type: number
    extCostInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The extended cost of the item, which is the unit price multiplied by the quantity.
      properties:
        value:
          format: double
          type: number
    externalReferenceInInventoryAdjustmentUpdateDto:
      description: The external reference number of the inventory issue document (for example, the vendor’s reference code).
      properties:
        value:
          type: string
    externalReferenceInInventoryIssueUpdateDto:
      description: The external reference number of the inventory issue document (for example, the vendor’s reference code).
      properties:
        value:
          type: string
    externalReferenceInInventoryReceiptUpdateDto:
      description: The external reference number of the inventory issue document (for example, the vendor’s reference code).
      properties:
        value:
          type: string
    externalReferenceInInventoryTransferUpdateDto:
      description: The external reference number of the inventory issue document (for example, the vendor’s reference code).
      properties:
        value:
          type: string
    finanacialPeriodInCashTransactionUpdateDto:
      description: The property is now considered obsolete. Use Financial Period instead
      properties:
        value:
          type: string
    financialDetailsInPaymentDto:
      description: Financial Details
      properties:
        paymentDate:
          description: Financial Details tab &gt; Payment date
          format: date-time
          type: string
    financialPeriodInCashSaleUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.
      properties:
        value:
          type: string
    financialPeriodInCashTransactionUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.
      properties:
        value:
          type: string
    financialPeriodInCreditNoteUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.
      properties:
        value:
          type: string
    financialPeriodInCustomerCreditNoteUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.
      properties:
        value:
          type: string
    financialPeriodInCustomerDebitNoteUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.
      properties:
        value:
          type: string
    financialPeriodInCustomerInvoiceUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.
      properties:
        value:
          type: string
    financialPeriodInCustomerOverdueChargeUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.
      properties:
        value:
          type: string
    financialPeriodInJournalTransactionUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.
      properties:
        value:
          type: string
    financialPeriodInSupplierInvoiceUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format YYYYMM.
      properties:
        value:
          type: string
    financialsDetailInCashTransactionDto:
      description: Financial details tab &gt;
      properties:
        batchNumber:
          description: Link to general ledger section &gt; Batch number &gt; The number of the batch generated to implement the cash transaction.
          type: string
        branch:
          $ref: "#/components/schemas/branchInFinancialsDetailDto"
        clearDate:
          description: Link to general ledger section &gt; Clear date &gt; 	The date when the transaction was cleared.
          format: date-time
          type: string
        cleared:
          description: Link to general ledger section &gt; Cleared &gt; A check box that indicates (if selected) that the transaction was cleared.
          type: boolean
        taxCalcMode:
          description: VAT settings section &gt; VAT calculation &gt; The VAT calculation mode, which defines which amounts (VAT-inclusive or VAT-exclusive) should be entered in the detail lines of a document.
          enum:
            - TaxSetting
            - Gross
            - Net
          type: string
        taxZone:
          $ref: "#/components/schemas/taxZoneInFinancialsDetailDto"
    fobPointInSalesOrderDto:
      description: Delivery settings tab &gt; Shipping information section &gt; FOB point &gt; The point where ownership of the goods is transferred to the customer.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    fobPointInShipmentDto:
      description: Delivery settings tab &gt; Shipping information section &gt; FOB point &gt; The point where obligation of goods passes to the customer.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    friInTimeCardMaterialsUpdateDto:
      description: The quantity reported for Friday.
      properties:
        value:
          format: double
          type: number
    friInTimeCardSummaryUpdateDto:
      description: The work time reported for Friday, including overtime.
      properties:
        value:
          format: int32
          type: integer
    fromCurrencyIdInCreateCurrencyRateDto:
      description: From currency id.
      properties:
        value:
          type: string
    fromWarehouseInShipmentDto:
      description: "Mandatory field: The top part &gt; Warehouse ID* &gt; The warehouse from which the goods should be shipped."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    glAccountsInCustomerDto:
      description: Information collected from the system. Some accounts visible in window, some not.
      properties:
        cashDiscountAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        cashDiscountSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
        customerLedgerAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        customerLedgerSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
        discountAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        discountSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
        freightAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        freightSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
        prepaymentAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        prepaymentSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
        salesAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        salesEuAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        salesExportAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        salesNonTaxableAccount:
          $ref: "#/components/schemas/AccountNumberTypeDescriptionDto"
        salesSubaccount:
          $ref: "#/components/schemas/SubAccountDto"
    glAccountsInSupplierDto:
      description: General ledger accounts tab &gt;
      properties:
        expenseAccount:
          $ref: "#/components/schemas/expenseAccountInSupplierGlAccountsDto"
        expenseAccountImport:
          $ref: "#/components/schemas/expenseAccountImportInSupplierGlAccountsDto"
        expenseAccountNonTax:
          $ref: "#/components/schemas/expenseAccountNonTaxInSupplierGlAccountsDto"
        expenseEUAccount:
          $ref: "#/components/schemas/expenseEUAccountInSupplierGlAccountsDto"
        expenseSubaccount:
          $ref: "#/components/schemas/expenseSubaccountInSupplierGlAccountsDto"
        supplierAccount:
          $ref: "#/components/schemas/supplierAccountInSupplierGlAccountsDto"
    glAccountsInVatInformationDto:
      description: General ledger accounts &gt;
      properties:
        vatClaimableAccount:
          $ref: "#/components/schemas/vatClaimableAccountInVatGlAccountsDto"
        vatClaimableSubccount:
          $ref: "#/components/schemas/vatClaimableSubccountInVatGlAccountsDto"
        vatPayableAccount:
          $ref: "#/components/schemas/vatPayableAccountInVatGlAccountsDto"
        vatPayableSubaccount:
          $ref: "#/components/schemas/vatPayableSubaccountInVatGlAccountsDto"
    glnInPurchaseOrderBasicUpdateDto:
      description: Mandatory field if Supplier or VatRegistrationId is not specified.
      properties:
        value:
          type: string
    glnInPurchaseOrderUpdateDto:
      description: Mandatory field if Supplier or VatRegistrationId is not specified.
      properties:
        value:
          type: string
    glnInSalesOrderBasicUpdateDto:
      description: Mandatory field if Customer or VatRegistrationId is not specified.
      properties:
        value:
          type: string
    glnInSalesOrderUpdateDto:
      description: Mandatory field if Customer or VatRegistrationId is not specified.
      properties:
        value:
          type: string
    holdInInventoryAdjustmentUpdateDto:
      description: A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
      properties:
        value:
          type: boolean
    holdInInventoryIssueUpdateDto:
      description: A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
      properties:
        value:
          type: boolean
    holdInInventoryReceiptUpdateDto:
      description: A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
      properties:
        value:
          type: boolean
    holdInInventoryTransferUpdateDto:
      description: A check box that you select to give the receipt the On Hold status. Clear the check box to save the receipt with the Balanced status.
      properties:
        value:
          type: boolean
    holdInPaymentUpdateDto:
      description: The top part &gt; Hold &gt; A check box that indicates (if selected) that the document is a draft with the On hold status.
      properties:
        value:
          type: boolean
    ibanInBankSettingsUpdateDto:
      description: IBAN
      properties:
        value:
          type: string
    idInCreateCurrencyRateTypeDto:
      description: Currency rate type id.
      properties:
        value:
          type: string
    imageInExpenseReceiptDto:
      description: Receipt details tab &gt; Image section
      properties:
        id:
          description: The ID of the attachment
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: The name of the attachment.
          type: string
        revision:
          description: The version of the attachment.
          format: int32
          type: integer
    inclQtyAvailInWarehouseLocationUpdateDto:
      description: Include in qty. available &gt; You select this check box if the quantities of goods available at this location will be included in the quantities of available goods and used in inventory transactions, such as issues and transfers.
      properties:
        value:
          type: boolean
    industryCodeInBranchDto:
      description: The Organisation details tab &gt; Configuration settings section &gt; Industry code &gt; The branch's industry code ID.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    industryCodeInExtendedOrganizationDto:
      description: Industry Code
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    intrastatInInventoryDto:
      description: General information tab &gt; Intrastat section
      properties:
        cN8:
          description: "Represents the 8 digit level Combine Nomenclature commodity code specific for the year\r

            for which the creating / actualizations Intrastat declarations is drafted."
          type: string
        countryOfOrigin:
          description: "The country of origin of the commodity will be selected,\r

            that country where the good has been produced or had the last substantial transformation."
          type: string
        supplementaryMeasureUnit:
          description: "The requirement for Supplementary Measure Units applies only to certain classes of goods(NC8 Positions)\r

            that may be expressed from quantitative point of view in other measurement units but kilo also."
          type: string
    inventoryAccountInInventoryAccountInformationDto:
      description: "Only used for Stock items.\r

        Inventory account &gt; The asset account to be used to keep the inventory balance resulting from transactions with this stock item."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    inventoryAccountInInventoryUpdateDto:
      description: Only used for Stock items
      properties:
        value:
          type: string
    inventoryIdInProjectTransactionLineDto:
      description: Item ID &gt; The identifier of the stock or non-stock item associated with the transaction.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    inventoryIdInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The item ID of the received item.
      properties:
        value:
          type: string
    inventoryIdInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The item ID of the received item.
      properties:
        value:
          type: string
    inventoryIdInSalesOrderBasicLineUpdateDto:
      description: InventoryId is deprecated, please use InventoryNumber instead.
      properties:
        value:
          type: string
    inventoryIdInSalesOrderLineUpdateDto:
      description: InventoryId is deprecated, please use InventoryNumber instead.
      properties:
        value:
          type: string
    inventoryInInventorySummaryDto:
      description: "Mandatory field: The top part &gt; Item ID* &gt; \tThe stock item for which you want to view data. Click the magnifier."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    inventoryInPurchaseOrderLineDto:
      description: Item ID &gt; The ID of the item.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    inventoryInStocktakeLineDto:
      description: Stocktaking details tab &gt; Item ID &gt; The item ID of the item.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    inventoryInStocktakeLineV2Dto:
      description: Stocktaking details tab &gt; Item ID &gt; The item ID of the item.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click the magnifier &gt; The displayed name
          type: string
        internalId:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
    inventoryItemInInventoryAdjustmentLineDto:
      description: "Mandatory field: Item ID* &gt; The ID of the goods to be transferred."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    inventoryItemInInventoryIssueLineDto:
      description: "Mandatory field: Item ID* &gt; The ID of the goods to be transferred."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    inventoryItemInInventoryReceiptLineDto:
      description: "Mandatory field: Item ID* &gt; The ID of the goods to be transferred."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    inventoryItemInInventoryTransferLineDto:
      description: "Mandatory field: Item ID* &gt; The ID of the goods to be transferred."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    inventoryNumberInInventoryUpdateDto:
      description: Mandatory for POST, not applicable for PUT. The unique alphanumeric identifier of the  item that is used in UI.
      properties:
        value:
          type: string
    inventoryNumberInSalesOrderBasicLineUpdateDto:
      description: Mandatory field
      properties:
        value:
          type: string
    inventoryNumberInSalesOrderLineUpdateDto:
      description: Mandatory field
      properties:
        value:
          type: string
    invoiceAccountInCustomerContractSummaryDto:
      description: Invoice information section &gt; Account &gt; 	The specific account that is to be invoiced for contract services.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          type: string
    invoiceAddressInCashSaleDto:
      description: The Invoice address tab &gt; The Invoice address section.
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInCustomerDocumentAddressDto"
        county:
          $ref: "#/components/schemas/countyInCustomerDocumentAddressDto"
        overrideAddress:
          description: Override address &gt; A check box that indicates (if selected) that the invoice address is not the default invoice address of the customer.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    invoiceAddressInCreditNoteDto:
      description: The Invoice address tab &gt; The Invoice address section.
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInCustomerDocumentAddressDto"
        county:
          $ref: "#/components/schemas/countyInCustomerDocumentAddressDto"
        overrideAddress:
          description: Override address &gt; A check box that indicates (if selected) that the invoice address is not the default invoice address of the customer.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    invoiceAddressInCustomerCreditNoteDto:
      description: The Invoice address tab &gt; The Invoice address section.
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInCustomerDocumentAddressDto"
        county:
          $ref: "#/components/schemas/countyInCustomerDocumentAddressDto"
        overrideAddress:
          description: Override address &gt; A check box that indicates (if selected) that the invoice address is not the default invoice address of the customer.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    invoiceAddressInCustomerDebitNoteDto:
      description: The Invoice address tab &gt; The Invoice address section.
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInCustomerDocumentAddressDto"
        county:
          $ref: "#/components/schemas/countyInCustomerDocumentAddressDto"
        overrideAddress:
          description: Override address &gt; A check box that indicates (if selected) that the invoice address is not the default invoice address of the customer.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    invoiceAddressInCustomerDto:
      description: Invoicing settings tab &gt; Invoice address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    invoiceAddressInCustomerInvoiceDto:
      description: The Invoice address tab &gt; The Invoice address section.
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInCustomerDocumentAddressDto"
        county:
          $ref: "#/components/schemas/countyInCustomerDocumentAddressDto"
        overrideAddress:
          description: Override address &gt; A check box that indicates (if selected) that the invoice address is not the default invoice address of the customer.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    invoiceAddressInCustomerOverdueChargeDto:
      description: The Invoice address tab &gt; The Invoice address section.
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInCustomerDocumentAddressDto"
        county:
          $ref: "#/components/schemas/countyInCustomerDocumentAddressDto"
        overrideAddress:
          description: Override address &gt; A check box that indicates (if selected) that the invoice address is not the default invoice address of the customer.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    invoiceContactInCashSaleDto:
      description: The Invoice address tab &gt; The Invoice contact section.
      properties:
        attention:
          type: string
        businessName:
          type: string
        contactId:
          format: int32
          type: integer
        email:
          type: string
        overrideContact:
          type: boolean
        phone1:
          type: string
    invoiceContactInCreditNoteDto:
      description: The Invoice address tab &gt; The Invoice contact section.
      properties:
        attention:
          type: string
        businessName:
          type: string
        contactId:
          format: int32
          type: integer
        email:
          type: string
        overrideContact:
          type: boolean
        phone1:
          type: string
    invoiceContactInCustomerCreditNoteDto:
      description: The Invoice address tab &gt; The Invoice contact section.
      properties:
        attention:
          type: string
        businessName:
          type: string
        contactId:
          format: int32
          type: integer
        email:
          type: string
        overrideContact:
          type: boolean
        phone1:
          type: string
    invoiceContactInCustomerDebitNoteDto:
      description: The Invoice address tab &gt; The Invoice contact section.
      properties:
        attention:
          type: string
        businessName:
          type: string
        contactId:
          format: int32
          type: integer
        email:
          type: string
        overrideContact:
          type: boolean
        phone1:
          type: string
    invoiceContactInCustomerDto:
      description: Invoicing setting tab &gt; Invoice contact section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    invoiceContactInCustomerInvoiceDto:
      description: The Invoice address tab &gt; The Invoice contact section.
      properties:
        attention:
          type: string
        businessName:
          type: string
        contactId:
          format: int32
          type: integer
        email:
          type: string
        overrideContact:
          type: boolean
        phone1:
          type: string
    invoiceContactInCustomerOverdueChargeDto:
      description: The Invoice address tab &gt; The Invoice contact section.
      properties:
        attention:
          type: string
        businessName:
          type: string
        contactId:
          format: int32
          type: integer
        email:
          type: string
        overrideContact:
          type: boolean
        phone1:
          type: string
    invoiceTextInPaymentUpdateDto:
      description: The top part &gt; Invoice text &gt; A user-defined description of the payment.
      properties:
        value:
          type: string
    invoiceableInExpenseClaimDetailUpdateDto:
      description: The currency of the expense receipt. However, if you enter a claim line directly, the currency value is read-only and matching the claim currency.
      properties:
        value:
          type: boolean
    invoiceableInTimeCardSummaryUpdateDto:
      description: A check box that you select to indicate that these work hours are invoiceable.
      properties:
        value:
          type: boolean
    isCostedInWarehouseLocationUpdateDto:
      description: Cost separately &gt; You select this check box if the costs for goods available at this location will be calculated separately from costs calculated at the system-level; that is, for FIFO and specific valuation methods, separate cost layers will be created for this location.
      properties:
        value:
          type: boolean
    itemClassInInventoryDto:
      description: "Mandatory field: General information tab &gt; Item defaults section &gt; Item class* &gt; The item class to which the stock item is assigned."
      properties:
        attributes:
          items:
            $ref: "#/components/schemas/ClassAttributeDto"
          type: array
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
        type:
          enum:
            - NonStockItem
            - LaborItem
            - ServiceItem
            - ChargeItem
            - ExpenseItem
            - FinishedGoodItem
            - ComponentPartItem
            - SubassemblyItem
          type: string
    itemClassInInventoryUpdateDto:
      description: Mandatory, the item class to which the item is assigned. Selecting a class provides default settings for the item.
      properties:
        value:
          type: string
    itemIdInTimeCardMaterialsUpdateDto:
      description: Item Id
      properties:
        value:
          type: string
    itemInContractUsageLineDto:
      description: Both tabs
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    itemInTransactionDetailDto:
      description: Item ID &gt; The ID of the non-stock item specified as the transaction subject.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    itemTypeInCustomerInvoiceLinesUpdateDto:
      description: The property is now considered obsolete. Please define ItemType on the item level instead.
      properties:
        value:
          enum:
            - Service
            - MaterialCost
            - OtherCost
          type: string
    leaseAndRentInfoInDetailsDto:
      description: The lease and rent infor for this fixed asset
      properties:
        leaseNumber:
          type: string
        leaseRentTerm:
          format: int32
          type: integer
        lessorID:
          type: string
        lessorName:
          type: string
        manufacturingYear:
          type: string
        rentAmount:
          format: double
          type: number
        retailCost:
          format: double
          type: number
    ledgerInBranchDto:
      description: The ledgers tab &gt; The ledger column and the Description column.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    ledgerInExtendedOrganizationDto:
      description: Ledger
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    ledgerInGeneralLedgerTransactionDetailsDto:
      description: Ledger &gt; The ledger used for the batch.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    lineNbrInAllocationsUpdateDto:
      description: Line no. &gt; The line of the purchase order that contains the selected item.
      properties:
        value:
          format: int32
          type: integer
    lineNbrInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The number of the purchase receipt line.
      properties:
        value:
          format: int32
          type: integer
    lineNbrInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The number of the purchase receipt line.
      properties:
        value:
          format: int32
          type: integer
    lineTypeInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The type of the purchase receipt line.
      properties:
        value:
          enum:
            - GoodsForInventory
            - GoodsForSalesOrder
            - GoodsForReplenishment
            - GoodsForDropShip
            - NonStockForDropShip
            - NonStockForSalesOrder
            - NonStock
            - Service
            - Freight
            - Description
          type: string
    lineTypeInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The type of the purchase receipt line.
      properties:
        value:
          enum:
            - GoodsForInventory
            - GoodsForSalesOrder
            - GoodsForReplenishment
            - GoodsForDropShip
            - NonStockForDropShip
            - NonStockForSalesOrder
            - NonStock
            - Service
            - Freight
            - Description
          type: string
    locationIdInLocationUpdateDto:
      description: Mandatory field for creating a new location. Can not be updated after it has been created.
      properties:
        value:
          type: string
    locationIdInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The location where the item has been received.
      properties:
        value:
          type: string
    locationIdInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The location where the item has been received.
      properties:
        value:
          type: string
    locationIdInSupplierLocationUpdateDto:
      description: Mandatory field for creating a new location. Can not be updated after it has been created.
      properties:
        value:
          type: string
    locationIdInWarehouseLocationUpdateDto:
      description: Location ID &gt; The unique ID of the warehouse location.
      properties:
        value:
          type: string
    locationInAllocationsDto:
      description: Location &gt; The location in the warehouse.
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInAllocationsUpdateDto:
      description: Location &gt; The location in the warehouse.
      properties:
        value:
          type: string
    locationInCashSaleDto:
      description: "The top part &gt; Location &gt; The location of the customer related to the document. By default, it is the default\r

        location of the selected customer or, if the invoice is created from an opportunity,\r

        it is the customer location specified for the opportunity."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInCreditNoteDto:
      description: "The top part &gt; Location &gt; The location of the customer related to the document. By default, it is the default\r

        location of the selected customer or, if the invoice is created from an opportunity,\r

        it is the customer location specified for the opportunity."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInCustomerContractDto:
      description: The top part &gt; Location &gt; The customer location associated with the contract.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    locationInCustomerCreditNoteDto:
      description: "The top part &gt; Location &gt; The location of the customer related to the document. By default, it is the default\r

        location of the selected customer or, if the invoice is created from an opportunity,\r

        it is the customer location specified for the opportunity."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInCustomerCreditWriteOffDto:
      description: "The top part &gt; Location &gt; The location of the customer related to the document. By default, it is the default\r

        location of the selected customer or, if the invoice is created from an opportunity,\r

        it is the customer location specified for the opportunity."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInCustomerDebitNoteDto:
      description: "The top part &gt; Location &gt; The location of the customer related to the document. By default, it is the default\r

        location of the selected customer or, if the invoice is created from an opportunity,\r

        it is the customer location specified for the opportunity."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInCustomerDocumentDto:
      description: "The top part &gt; Location &gt; The location of the customer related to the document. By default, it is the default\r

        location of the selected customer or, if the invoice is created from an opportunity,\r

        it is the customer location specified for the opportunity."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInCustomerDto:
      description: Delivery settings tab &gt; Default location settings section &gt; Location name &gt; A description of the customer location.
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInCustomerInvoiceDto:
      description: "The top part &gt; Location &gt; The location of the customer related to the document. By default, it is the default\r

        location of the selected customer or, if the invoice is created from an opportunity,\r

        it is the customer location specified for the opportunity."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInCustomerOverdueChargeDto:
      description: "The top part &gt; Location &gt; The location of the customer related to the document. By default, it is the default\r

        location of the selected customer or, if the invoice is created from an opportunity,\r

        it is the customer location specified for the opportunity."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInExpenseClaimDetailDto:
      description: Location &gt; The identifier of the customer location associated with the expense.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    locationInExpenseClaimDetailUpdateDto:
      description: The identifier of the customer location associated with the expense.
      properties:
        value:
          type: string
    locationInExpenseClaimDto:
      description: The top part &gt; Location &gt; The company location associated with the claim.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    locationInExpenseClaimUpdateDto:
      description: The company location associated with the claim.
      properties:
        value:
          type: string
    locationInExpenseReceiptDto:
      description: Receipt details tab &gt; Financial details section &gt; Location &gt; The location of the customer related to the expenses.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    locationInFixedAssetDto:
      description: The current location of this fixed asset
      properties:
        branchID:
          description: The current branch id of this fixed asset
          type: string
        departmentID:
          description: The current department id of this fixed asset
          type: string
    locationInInventoryAdjustmentLineDto:
      description: Location &gt; The warehouse location from which the goods are transferred.
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInInventoryIssueLineDto:
      description: Location &gt; The warehouse location from which the goods are transferred.
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInInventoryReceiptLineDto:
      description: Location &gt; The warehouse location from which the goods are transferred.
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInInventorySummaryDto:
      description: The top part &gt; Location &gt; The location for which you want to view data; select a location, or make no selection to view data for all locations.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInInventoryTransferLineDto:
      description: Location &gt; The warehouse location from which the goods are transferred.
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInLandedCostDto:
      description: "Mandatory field: Landed costs tab &gt; Location* &gt; The location of the selected landed cost supplier."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInPaymentDto:
      description: "Mandatory field: The top part &gt; Location* &gt; The customer location associated with the sale."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInPaymentUpdateDto:
      description: "Mandatory field: The top part &gt; Location* &gt; The customer location associated with the sale. Once the customer is selected, this field displays the customer's default location."
      properties:
        value:
          type: string
    locationInProjectTransactionLineDto:
      description: Location &gt; The location of the customer or supplier.
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInPurchaseOrderBasicDto:
      description: "Mandatory field: The top part &gt; Location* &gt; Click the magnifier. The supplier location from which the items will be received."
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInPurchaseOrderDto:
      description: "Mandatory field: The top part &gt; Location* &gt; Click the magnifier. The supplier location from which the items will be received."
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInPurchaseReceiptBasicDto:
      description: "Mandatory field: The top part Location* &gt; The supplier location from which the items should be received or to which they should be returned."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInPurchaseReceiptDto:
      description: "Mandatory field: The top part Location* &gt; The supplier location from which the items should be received or to which they should be returned."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInPurchaseReceiptLineDto:
      description: Document details tab &gt; Location &gt; The location where the item has been received.
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInSalesOrderBasicDto:
      description: "Mandatory field: The top part &gt; Location* &gt; The customer location from which the goods or services have been ordered or, if the sales order is created from an opportunity, the customer location specified for the opportunity."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInSalesOrderDto:
      description: "Mandatory field: The top part &gt; Location* &gt; The customer location from which the goods or services have been ordered or, if the sales order is created from an opportunity, the customer location specified for the opportunity."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInShipmentDetailLineDto:
      description: Document details tab &gt; Location &gt; The location in the warehouse from which the item is shipped.
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInShipmentDto:
      description: "Mandatory field: The top part &gt; Location* &gt; The customer location to receive the shipment."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInStocktakeLineDto:
      description: Stocktaking details tab &gt; Location &gt; The warehouse location of the item.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInStocktakeLineV2Dto:
      description: Stocktaking details tab &gt; Location &gt; The warehouse location of the item.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click the magnifier &gt; The displayed name
          type: string
        internalId:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
    locationInSupplierDocumentDto:
      description: The Top part &gt; Location* &gt; The supplier location associated with the purchase.
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInSupplierDto:
      description: Purchase settings tab &gt; Default location settings section &gt;
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInSupplierInvoiceDto:
      description: The Top part &gt; Location* &gt; The supplier location associated with the purchase.
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    locationInSupplierPaymentDto:
      description: "Mandatory field: The top part &gt; Location* &gt; The supplier's location. Main location by default."
      properties:
        countryId:
          description: Location*.
          type: string
        id:
          description: Click the magnifier &gt; The identifier
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    lotSerialClassInInventoryDto:
      description: "Mandatory field: General information tab &gt; Item defaults section &gt; Lot/Serial Class* &gt; The lot serial class ID of the stock item, which by default is the ID associated with the item class."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    lotSerialNumberInAllocationsUpdateDto:
      description: Lot/Serial no. &gt; The lot or serial number of the item.
      properties:
        value:
          type: string
    mainAddressInBranchDto:
      description: The Organisation details tab &gt; The Main address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    mainAddressInCustomerDto:
      description: General information tab &gt; Main address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    mainAddressInExtendedOrganizationDto:
      description: Main Address
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    mainAddressInSupplierDto:
      description: General information tab &gt; Main address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    mainContactInBranchDto:
      description: The Organisation details tab &gt;  The Main contact section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    mainContactInCustomerDto:
      description: General information tab &gt; Main contact section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    mainContactInExtendedOrganizationDto:
      description: Main Contact
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    mainContactInSupplierDto:
      description: General information tab &gt; Main contact section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    manualDiscountInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; A check box that indicates (if selected) that the discount has been applied manually.
      properties:
        value:
          type: boolean
    manualDiscountInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; A check box that indicates (if selected) that the discount has been applied manually.
      properties:
        value:
          type: boolean
    modeOfTrasportInShipmentDto:
      description: Delivery settings tab &gt; Intrastat section &gt; Mode of transportation &gt; The method of transportation.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          format: int32
          type: integer
    monInTimeCardMaterialsUpdateDto:
      description: The quantity reported for Monday.
      properties:
        value:
          format: double
          type: number
    monInTimeCardSummaryUpdateDto:
      description: The work time reported for Monday, including overtime.
      properties:
        value:
          format: int32
          type: integer
    multDivInCreateCurrencyRateDto:
      description: Mult/Div.
      properties:
        value:
          enum:
            - Multiply
            - Divide
          type: string
    multDivInUpdateCurrencyRateDto:
      description: Mult/Div.
      properties:
        value:
          enum:
            - Multiply
            - Divide
          type: string
    noteInUpdateNoteDto:
      description: Note for Vat report header.
      properties:
        value:
          type: string
    offsetAccountBranchInEntryTypeDto:
      description: Default offset account branch &gt; The branch to which the overriding offset account belongs.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    offsetAccountOverrideInEntryTypeDto:
      description: "Reclassification account override &gt; The account that should be used as the offset account for this entry type with this cash account instead of the default offset account specified on the Entry types tab. \r

        We recommend that for the disbursement type of transaction, you specify an expense account. For the receipt type of transaction, specify an asset account."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    offsetSubAccountInTransactionDetailDto:
      description: "Mandatory field: Offset subaccount* &gt; The corresponding subaccount to be used for the transaction."
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    offsetSubaccountOverrideInEntryTypeDto:
      description: Offset account override &gt; The subaccount for this entry type to be used with this cash account instead of the default offset subaccount specified in the Entry types window.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    orderTypeInSalesOrderBasicUpdateDto:
      description: Mandatory field
      properties:
        value:
          type: string
    orderTypeInSalesOrderUpdateDto:
      description: Mandatory field
      properties:
        value:
          type: string
    overrideNumberSeriesInCustomerInvoiceUpdateDto:
      description: Set this value to true if you need to create a new invoice and use supplied referenceNumber (Invoicenumber)
      properties:
        value:
          type: boolean
    ownerInCashTransactionDto:
      description: The top part &gt; Owner &gt; The user who created the cash transaction.
      properties:
        internalId:
          type: string
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    ownerInCustomerContractSummaryDto:
      description: Contract management section &gt; Owner &gt; The owner of the contract.
      properties:
        internalId:
          type: string
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    ownerInPurchaseOrderBasicDto:
      description: The top part &gt; Owner &gt; The employee who is responsible for the purchase order.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    ownerInPurchaseOrderDto:
      description: The top part &gt; Owner &gt; The employee who is responsible for the purchase order.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    ownerInSalesOrderDto:
      description: The Financial settings tab &gt; Financial information section &gt; Owner &gt; The user in the work group who is responsible for the sales order.
      properties:
        employeeId:
          description: The Financial settings tab &gt; The Financial information section &gt; Owner &gt; Click the magnifier  &gt; Employee ID &gt; The unique identifier, which is assigned to the employee in accordance with the configuration of the EMPLOYEEsegmented key. This information is retrieved from window EP203000.
          type: string
        id:
          description: Employee internal user ID. This is the ID of the user linked to the employee
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: The Financial settings tab &gt; The Financial information section &gt; Owner &gt; Click the magnifier &gt; Employee name &gt; The name of this employee. This information is retrieved from window EP203000.
          type: string
    ownerInShipmentDto:
      description: The top part &gt; Owner &gt; The user assigned to approve the document.
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    packagingInInventoryDto:
      description: Packaging tab
      properties:
        baseItemVolume:
          description: The volume of the <see cref="!:BaseUnit">Base Unit</see> of the item.
          format: double
          type: number
        baseItemWeight:
          description: The weight of the <see cref="!:BaseUnit">Base Unit</see> of the item.
          format: double
          type: number
        volumeUOM:
          description: The <see cref="!:INUnit">Unit of Measure</see> used for the <see cref="P:Visma.net.ERP.Web.Api.Model.V1.IN.PackagingDto.BaseItemVolume">Volume</see> of the item.
          type: string
        weightUOM:
          description: The <see cref="!:INUnit">Unit of Measure</see> used for the <see cref="P:Visma.net.ERP.Web.Api.Model.V1.IN.PackagingDto.BaseItemWeight">Weight</see> of the item.
          type: string
    parentRecordInSupplierDto:
      description: General information tab &gt; Main contact section &gt; Parent account &gt; The parent supplier's account, which you can select from the list of existing supplier accounts.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    paySelectedInSupplierInvoiceUpdateDto:
      description: The Financial details tab &gt; The Default Payment Info section &gt; When set to true indicates that the document is approved for payment.
      properties:
        value:
          type: boolean
    paymentAmountInPaymentUpdateDto:
      description: The top part &gt; Payment amount &gt; The total of the documents to which payment is to be applied.
      properties:
        value:
          format: double
          type: number
    paymentMethodInCashSaleDto:
      description: The Financial details tab &gt; The Payment information section &gt; Payment method &gt; The identifier for the payment method that the customer will use to pay the document.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInCreditNoteDto:
      description: The Financial details tab &gt; The Payment information section &gt; Payment method &gt; The identifier for the payment method that the customer will use to pay the document.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInCustomerCreditNoteDto:
      description: The Financial details tab &gt; The Payment information section &gt; Payment method &gt; The identifier for the payment method that the customer will use to pay the document.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInCustomerCreditWriteOffDto:
      description: The Financial details tab &gt; The Payment information section &gt; Payment method &gt; The identifier for the payment method that the customer will use to pay the document.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInCustomerDebitNoteDto:
      description: The Financial details tab &gt; The Payment information section &gt; Payment method &gt; The identifier for the payment method that the customer will use to pay the document.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInCustomerDocumentDto:
      description: The Financial details tab &gt; The Payment information section &gt; Payment method &gt; The identifier for the payment method that the customer will use to pay the document.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInCustomerInvoiceDto:
      description: The Financial details tab &gt; The Payment information section &gt; Payment method &gt; The identifier for the payment method that the customer will use to pay the document.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInCustomerOverdueChargeDto:
      description: The Financial details tab &gt; The Payment information section &gt; Payment method &gt; The identifier for the payment method that the customer will use to pay the document.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInCustomerPaymentMethodDto:
      description: "Mandatory field: The top part &gt; Payment method* &gt; The payment method used as a template for a customer payment method you are currently viewing; select a payment method to use its settings for creating a new customer payment method."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInPaymentDto:
      description: The top part &gt; Payment method &gt; The customer's default payment method; this field is not available for credit notes.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInPaymentUpdateDto:
      description: The top part &gt; Payment method &gt; The customer's default payment method.
      properties:
        value:
          type: string
    paymentMethodInSalesOrderDto:
      description: Payment settings tab &gt; Payment method
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInSupplierDocumentDto:
      description: The Financial details tab &gt; Payment method &gt; The payment method used for the payment.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInSupplierDto:
      description: Payment settings tab &gt; Payment settings section &gt; Payment method &gt; The default payment method to be used for the supplier.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentMethodInSupplierInvoiceDto:
      description: The Financial details tab &gt; Payment method &gt; The payment method used for the payment.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    paymentRefInPaymentUpdateDto:
      description: "Mandatory field: The top part &gt; Payment ref.* &gt; A secondary payment reference identifier, which can be a system-generated number or an external reference number entered manually."
      properties:
        value:
          type: string
    paymentReferenceInCashSaleUpdateDto:
      description: Mandatory
      properties:
        value:
          type: string
    peppolSchemeInLocationDto:
      description: Fields to be used when sending electronic invoices in PEPPOL BIS 3.0 format.
      properties:
        endpoint:
          description: "Seller electronic address identification scheme identifier.\r

            The identification scheme identifier of the seller electronic address."
          type: string
        partyIdentification:
          description: "Buyer identifier identification scheme identifier.\r

            The identification scheme identifier of the Buyer identifier."
          type: string
        partyLegal:
          description: "Seller legal registration identifier identification scheme identifier.\r

            The identification scheme identifier of the Seller legal registration identifier."
          type: string
    pickPriorityInWarehouseLocationUpdateDto:
      description: Pick priority &gt; The order of which location should have priority.
      properties:
        value:
          format: int32
          type: integer
    poOrderLineNbrInPurchaseReceiptLineBasicUpdateDto:
      description: This property replaced by an action please use the following sub-endpoint:/controller/api/v1/PurchaseReceipt/{receiptNumber}/action/addpurchaseorderlines
      properties:
        value:
          format: int32
          type: integer
    poOrderLineNbrInPurchaseReceiptLineUpdateDto:
      description: This property replaced by an action please use the following sub-endpoint:/controller/api/v1/PurchaseReceipt/{receiptNumber}/action/addpurchaseorderlines
      properties:
        value:
          format: int32
          type: integer
    poOrderNbrInPurchaseReceiptLineBasicUpdateDto:
      description: This property replaced by an action, please use the following sub-endpoint:/controller/api/v1/PurchaseReceipt/{receiptNumber}/action/addpurchaseorder.
      properties:
        value:
          type: string
    poOrderNbrInPurchaseReceiptLineUpdateDto:
      description: This property replaced by an action, please use the following sub-endpoint:/controller/api/v1/PurchaseReceipt/{receiptNumber}/action/addpurchaseorder.
      properties:
        value:
          type: string
    poOrderTypeInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The type of the purchase order related to this purchase receipt.
      properties:
        value:
          enum:
            - RegularOrder
            - DropShip
            - Blanket
            - StandardBlanket
          type: string
    poOrderTypeInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The type of the purchase order related to this purchase receipt.
      properties:
        value:
          enum:
            - RegularOrder
            - DropShip
            - Blanket
            - StandardBlanket
          type: string
    postPeriodInCashSaleUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInCreditNoteUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInCustomerCreditNoteUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInCustomerDebitNoteUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInCustomerInvoiceUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInCustomerOverdueChargeUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInInventoryAdjustmentUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInInventoryIssueUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInInventoryReceiptUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInInventoryTransferUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInJournalTransactionUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInPurchaseReceiptBasicUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInPurchaseReceiptUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postPeriodInSupplierInvoiceUpdateDto:
      description: The financial period to which the transactions recorded in the document should be posted. Use the format MMYYYY.
      properties:
        value:
          type: string
    postingClassInInventoryDto:
      description: "Mandatory field: General information tab &gt; Item defaults section &gt; Posting class* &gt; The posting class of the stock item, which by default is the posting class assigned to the item class."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    postingClassInInventoryUpdateDto:
      description: The posting class of the item, which by default is the posting class assigned to the item class.
      properties:
        value:
          type: string
    preferredWarehouseInSalesOrderDto:
      description: The Delivery settings tab &gt; The shipping information section &gt; Preferred warehouse ID
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    priceClassInCustomerDto:
      description: Deliver settings tab &gt; Default location settings section &gt; Price class &gt; The price class assigned to the customer.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    priceClassInInventoryDto:
      description: The Price/cost information tab &gt; Price management section &gt; Price class &gt; The item price class associated with the non-stock item. Group stock or non-stock items with similar price calculation methods.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    priceManagerInInventoryDto:
      description: The Price/cost information tab &gt; Price management section &gt; Price manager &gt; The manager responsible for the product pricing.
      properties:
        id:
          type: string
        name:
          type: string
    primaryItemClassIdInWarehouseLocationUpdateDto:
      description: Primary item class &gt; The primary item class for this location; items of this class are received the most often or stored here in the highest volumes.
      properties:
        value:
          type: string
    primaryItemClassInWarehouseLocationDto:
      description: Primary item class &gt; The primary item class for this location; items of this class are received the most often or stored here in the highest volumes.
      properties:
        attributes:
          items:
            $ref: "#/components/schemas/ClassAttributeDto"
          type: array
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
        type:
          enum:
            - NonStockItem
            - LaborItem
            - ServiceItem
            - ChargeItem
            - ExpenseItem
            - FinishedGoodItem
            - ComponentPartItem
            - SubassemblyItem
          type: string
    primaryItemIdInWarehouseLocationUpdateDto:
      description: Primary item &gt; The primary item for this location, which is the item that is received the most often or stored here in the highest volumes.
      properties:
        value:
          type: string
    primaryItemInWarehouseLocationDto:
      description: Primary item &gt; The primary item for this location, which is the item that is received the most often or stored here in the highest volumes.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    primaryItemValidInWarehouseLocationUpdateDto:
      description: Primary item validation &gt; An option indicating whether the operations with the primary item should be validated for this location and how.
      properties:
        value:
          enum:
            - PrimaryNothing
            - PrimaryItemWarning
            - PrimaryItemError
            - PrimaryItemClassWarning
            - PrimaryItemClassError
          type: string
    projectIdInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The project with which the document is associated.
      properties:
        value:
          type: string
    projectIdInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The project with which the document is associated.
      properties:
        value:
          type: string
    projectIdInWarehouseLocationUpdateDto:
      description: Project &gt; The project to associate with this location by default.
      properties:
        value:
          type: string
    projectInCashSaleDto:
      description: The top part &gt; Project* &gt; The identifier and description of the project with which this document is associated, or the code indicating that this document is not associated with any project; the non-project code is specified in the Project accounting preferences (PM101000) window.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInCreditNoteDto:
      description: The top part &gt; Project* &gt; The identifier and description of the project with which this document is associated, or the code indicating that this document is not associated with any project; the non-project code is specified in the Project accounting preferences (PM101000) window.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInCustomerCreditNoteDto:
      description: The top part &gt; Project* &gt; The identifier and description of the project with which this document is associated, or the code indicating that this document is not associated with any project; the non-project code is specified in the Project accounting preferences (PM101000) window.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInCustomerCreditWriteOffDto:
      description: The top part &gt; Project* &gt; The identifier and description of the project with which this document is associated, or the code indicating that this document is not associated with any project; the non-project code is specified in the Project accounting preferences (PM101000) window.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInCustomerDebitNoteDto:
      description: The top part &gt; Project* &gt; The identifier and description of the project with which this document is associated, or the code indicating that this document is not associated with any project; the non-project code is specified in the Project accounting preferences (PM101000) window.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInCustomerDocumentDto:
      description: The top part &gt; Project* &gt; The identifier and description of the project with which this document is associated, or the code indicating that this document is not associated with any project; the non-project code is specified in the Project accounting preferences (PM101000) window.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInCustomerInvoiceDto:
      description: The top part &gt; Project* &gt; The identifier and description of the project with which this document is associated, or the code indicating that this document is not associated with any project; the non-project code is specified in the Project accounting preferences (PM101000) window.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInCustomerOverdueChargeDto:
      description: The top part &gt; Project* &gt; The identifier and description of the project with which this document is associated, or the code indicating that this document is not associated with any project; the non-project code is specified in the Project accounting preferences (PM101000) window.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInExpenseClaimDetailDto:
      description: "Mandatory field: Project &gt; The project or customer contract associated with the expense claim, if the work performed was for a project or contract. Project Task The task associated with the contract or project."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInExpenseClaimDetailUpdateDto:
      description: The project or customer contract associated with the expense claim, if the work performed was for a project or contract. Project Task The task associated with the contract or project.
      properties:
        value:
          type: string
    projectInExpenseReceiptDto:
      description: Receipt details tab &gt; Expense details section &gt; Project/contract &gt; The project or contract, which should be specified if the employee incurred the expenses while working on a particular project or contract.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInInventoryIssueLineDto:
      description: Project
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInInventoryReceiptLineDto:
      description: Project
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInJournalTransactionLineDto:
      description: The table &gt; Project &gt; The project with which this batch is associated, or the code indicating that this batch is not associated with any project.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInProjectTransactionLineDto:
      description: Project &gt; The project associated with the transaction.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInPurchaseOrderLineDto:
      description: Project &gt; The project with which this purchase order line is associated.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInPurchaseReceiptLineDto:
      description: Document details tab &gt; Project &gt; The project with which the document is associated. If the document is based on a purchase order, the project is automatically copied from the respective purchase order line.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInSupplierInvoiceLineDto:
      description: The table &gt; Project &gt; The project associated with the invoice line.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInTimeCardMaterialsDto:
      description: "Mandatory field: Project* &gt; The project that the employee worked on."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInTimeCardMaterialsUpdateDto:
      description: The project that the employee worked on.
      properties:
        value:
          type: string
    projectInTimeCardSummaryDto:
      description: "Mandatory field: Project* &gt; The project that the employee worked on."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInTimeCardSummaryUpdateDto:
      description: The project that the employee worked on.
      properties:
        value:
          type: string
    projectInTransactionDetailDto:
      description: Project &gt; The project with which this transaction is associated, or the code indicating that this transaction is not associated with any project.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectInWarehouseLocationDto:
      description: Project &gt; The project to associate with this location by default.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectManagerInProjectDto:
      description: Summary tab &gt; Project properties section &gt; Project manager &gt; The person who is responsible for managing the project and authorised to approve the project task and task activities.
      properties:
        address:
          $ref: "#/components/schemas/addressInEmployeeDto"
        branch:
          $ref: "#/components/schemas/BranchNumberDto"
        calendarID:
          type: string
        contact:
          $ref: "#/components/schemas/contactInEmployeeDto"
        department:
          description: "Mandatory field: General information tab &gt; Employee section &gt; Department* &gt; The department the employee works for."
          type: string
        employeeClass:
          $ref: "#/components/schemas/employeeClassInEmployeeDto"
        employeeId:
          description: "Mandatory field: The top part &gt; Employee ID* &gt; The unique identifier, which is assigned to the employee in accordance with the configuration of the EMPLOYEE segmented key."
          format: int32
          type: integer
        employeeLogin:
          type: string
        employeeName:
          description: The top part &gt; Employee name &gt; The name of this employee.
          type: string
        employeeNumber:
          description: General information tab &gt; Employee settings section &gt; Employee ref. no. &gt; A reference number for the employee.
          type: string
        employeeUserId:
          description: Employee internal user ID. This is the ID of the user linked to the employee
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        status:
          description: "Mandatory field: The top part &gt; Status &gt; The status of the employee. The following options are available: Active, On hold, Hold payments, Inactive, One-time."
          enum:
            - Active
            - OnHold
            - HoldPayments
            - Inactive
            - OneTime
          type: string
        workGroupDescription:
          items:
            type: string
          type: array
    projectTaskIdInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The project task with which the document is associated.
      properties:
        value:
          type: string
    projectTaskIdInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The project task with which the document is associated.
      properties:
        value:
          type: string
    projectTaskIdInWarehouseLocationUpdateDto:
      description: Project task &gt; The project task to associate with this location by default.
      properties:
        value:
          type: string
    projectTaskInExpenseClaimDetailDto:
      description: Project task &gt; The task associated with the contract or project.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInExpenseClaimDetailUpdateDto:
      description: The task associated with the contract or project.
      properties:
        value:
          type: string
    projectTaskInExpenseReceiptDto:
      description: Receipt details tab &gt; Expense details section &gt; Project task &gt; The project task to which the expenses are related.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInInventoryIssueLineDto:
      description: Project Task
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInInventoryReceiptLineDto:
      description: Project Task
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInJournalTransactionLineDto:
      description: The table &gt; Project task &gt; The particular task of the project with which this batch is associated.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInProjectTransactionLineDto:
      description: Project task &gt; The project task associated with the transaction.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInPurchaseOrderLineDto:
      description: Project task &gt; The project task with which this purchase order is associated.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInPurchaseReceiptLineDto:
      description: Document details tab &gt; Project task &gt; The project task with which the document is associated.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInSupplierInvoiceLineDto:
      description: The table &gt; Project task &gt; The project task associated with the invoice line.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInTimeCardMaterialsDto:
      description: Project task &gt; The project task that the employee worked on.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInTimeCardMaterialsUpdateDto:
      description: The project task that the employee worked on.
      properties:
        value:
          type: string
    projectTaskInTimeCardSummaryDto:
      description: Project task &gt; The project task that the employee worked on.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInTimeCardSummaryUpdateDto:
      description: The project task that the employee worked on.
      properties:
        value:
          type: string
    projectTaskInTransactionDetailDto:
      description: Project task &gt; The particular task of the project with which this transaction is associated.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    projectTaskInWarehouseLocationDto:
      description: Project task &gt; The project task to associate with this location by default.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    propertyTaxInFixedAssetDto:
      description: The property tax group this fixed asset is conntected to
      properties:
        description:
          description: The description of the property tax group of this fixed asset
          type: string
        propertyTaxID:
          description: The property tax group id of this fixed asset
          type: string
    purchaseLineNbrInLinkLineDto:
      description: "PurchaseLineNbr refers to either PurchaseOrder or PurchaseReceipt line number depends on the value of {Visma.net.ERP.Web.Api.Model.V1.AP.LinkLineDto.PurchaseType}\r

        If {Visma.net.ERP.Web.Api.Model.V1.AP.LinkLineDto.PurchaseType} is set to {Visma.net.ERP.Web.Api.Model.V1.Enum.PurchaseType.PurchaseReceipt}, then it should refer to the PruchaseReceipt line number\r

        otherwise it refers to the PurchaseOrder"
      properties:
        value:
          format: int32
          type: integer
    purchaseNumberInLinkLineDto:
      description: "PurchaseNumber refers to either PurchaseOrder or PurchaseReceipt number depends on the value of {Visma.net.ERP.Web.Api.Model.V1.AP.LinkLineDto.PurchaseType}\r

        If {Visma.net.ERP.Web.Api.Model.V1.AP.LinkLineDto.PurchaseType} is set to {Visma.net.ERP.Web.Api.Model.V1.Enum.PurchaseType.PurchaseReceipt}, then it should refer to the PruchaseReceipt number\r

        otherwise it refers to the PurchaseOrder"
      properties:
        value:
          type: string
    quantityInAllocationsUpdateDto:
      description: Quantity &gt; The quantity of the stock item with the same lot number. It is 1 for items with serial numbers.
      properties:
        value:
          format: double
          type: number
    quantityInExpenseClaimDetailUpdateDto:
      description: The quantity of this expense item.
      properties:
        value:
          format: double
          type: number
    rateInCreateCurrencyRateDto:
      description: Currency rate.
      properties:
        value:
          format: double
          type: number
    rateInUpdateCurrencyRateDto:
      description: Currency rate.
      properties:
        value:
          format: double
          type: number
    rateTableInProjectDto:
      description: Summary tab &gt; Invoicing and allocation settings section &gt; Rate table &gt; The rate table to be used with the allocation rules, if applicable.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    rateTableInTaskExtendedDto:
      description: Rate table &gt; The rate table to be used in the allocation rules, if applicable.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    rateTypeInCreateCurrencyRateDto:
      description: Currency rate type.
      properties:
        value:
          type: string
    reasonCodeInInventoryAdjustmentLineDto:
      description: Reason code &gt; The reason code associated with the transferred goods.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    reasonCodeInInventoryIssueLineDto:
      description: Reason code &gt; The reason code associated with the transferred goods.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    reasonCodeInInventoryReceiptLineDto:
      description: Reason code &gt; The reason code associated with the transferred goods.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    reasonCodeInInventoryTransferLineDto:
      description: Reason code &gt; The reason code associated with the transferred goods.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    receiptLocationInWarehouseDto:
      description: Location table tab &gt; Receiving location &gt; The warehouse location to be used to receive goods.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    receiptQtyInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The quantity of the item in the specified UoM that has been received (listed on released receipts).
      properties:
        value:
          format: double
          type: number
    receiptQtyInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The quantity of the item in the specified UoM that has been received (listed on released receipts).
      properties:
        value:
          format: double
          type: number
    receiptsValidInWarehouseLocationUpdateDto:
      description: Receipts allowed &gt; You select this check box if receipts are allowed at this location.
      properties:
        value:
          type: boolean
    reclasificationAccountInEntryTypeDto:
      description: "Reclassification account &gt;  &gt; The cash account that is used to temporary hold payments that came to the bank account but cannot be entered as valid payments because the customer or supplier is unknown.\r

        The parameter is used together with the Use for payments reclassification check box."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    reclasificationAccountOverrideInEntryTypeDto:
      description: The account that should be used instead of the reclassification account specified as the default one on the Entry types tab.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    refNbrInExpenseClaimDetailUpdateDto:
      description: The identifier of the transaction.
      properties:
        value:
          type: string
    referenceNumberInInventoryAdjustmentUpdateDto:
      description: The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
      properties:
        value:
          type: string
    referenceNumberInInventoryIssueUpdateDto:
      description: The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
      properties:
        value:
          type: string
    referenceNumberInInventoryReceiptUpdateDto:
      description: The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
      properties:
        value:
          type: string
    referenceNumberInInventoryTransferUpdateDto:
      description: The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
      properties:
        value:
          type: string
    referenceNumberInPaymentUpdateDto:
      description: The top part &gt; Ref. no &gt; Reference number for the document. Can be used when manual numbering is enabled.
      properties:
        value:
          type: string
    registerInFixedAssetTransactionDto:
      description: The registration details
      properties:
        documentDate:
          description: The document date for this fixed asset transaction
          format: date-time
          type: string
        hold:
          description: Indecates whether this fixed asset transaction is on hold or not
          type: boolean
        status:
          description: Status can be
          enum:
            - Balanced
            - OnHold
            - Posted
            - Unposted
          type: string
    remitAddressInPurchaseOrderDto:
      description: Supplier info tab &gt; The Supplier address section &gt; The default contact setting for the supplier.
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInPurchaseOrderAddressDto"
        county:
          $ref: "#/components/schemas/countyInPurchaseOrderAddressDto"
        overrideAddress:
          description: The Supplier info tab &gt; The Supplier address section &gt; Override &gt; A check box that you select to override (that is, to edit ) the default shipping address for the supplier.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    remitAddressInSupplierDto:
      description: Payment settings tab &gt; Remittance address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    remitContactInPurchaseOrderDto:
      description: Supplier info tab &gt; The Supplier contact section &gt; The default contact settings for the supplier.
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        overrideContact:
          description: The Supplier information tab &gt; The Supplier contact section &gt; Override &gt; A check box that you select to override (edit) the default contact settings for the supplier.
          type: boolean
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    remitContactInSupplierDto:
      description: Payment settings tab &gt; Remittance contact section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    replenishmentClassInWarehouseDto:
      description: The top part &gt; Replenishment class &gt; The replenishment class associated with this warehouse.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    returnLocationInWarehouseDto:
      description: Location table tab &gt; RMA location &gt; The RMA warehouse location.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    saleOrderUpdateDtoInReopenSalesOrderActionDto:
      description: Mandatory
      properties:
        branchNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        cancelBy:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        canceled:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        cashAccount:
          $ref: "#/components/schemas/DtoValueOfString"
        contactId:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        currency:
          $ref: "#/components/schemas/DtoValueOfString"
        customer:
          $ref: "#/components/schemas/customerInSalesOrderUpdateDto"
        customerOrder:
          $ref: "#/components/schemas/DtoValueOfString"
        customerRefNo:
          $ref: "#/components/schemas/DtoValueOfString"
        customerVATZone:
          $ref: "#/components/schemas/DtoValueOfString"
        date:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        description:
          $ref: "#/components/schemas/DtoValueOfString"
        emailed:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        fobPoint:
          $ref: "#/components/schemas/DtoValueOfString"
        gln:
          $ref: "#/components/schemas/glnInSalesOrderUpdateDto"
        hold:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        insurance:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        invoiceSeparately:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        isRotRutDeductible:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        lines:
          items:
            $ref: "#/components/schemas/SalesOrderLineUpdateDto"
          type: array
        location:
          $ref: "#/components/schemas/DtoValueOfString"
        note:
          $ref: "#/components/schemas/DtoValueOfString"
        orderNumber:
          $ref: "#/components/schemas/DtoValueOfString"
        orderType:
          $ref: "#/components/schemas/orderTypeInSalesOrderUpdateDto"
        origOrderNbr:
          $ref: "#/components/schemas/DtoValueOfString"
        origOrderType:
          $ref: "#/components/schemas/DtoValueOfString"
        overrideNumberSeries:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        owner:
          $ref: "#/components/schemas/DtoValueOfNullableOfGuid"
        paymentMethod:
          $ref: "#/components/schemas/DtoValueOfString"
        paymentRef:
          $ref: "#/components/schemas/DtoValueOfString"
        preferredWarehouse:
          $ref: "#/components/schemas/DtoValueOfString"
        printDescriptionOnInvoice:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        printNoteOnExternalDocuments:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        printNoteOnInternalDocuments:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        priority:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt16"
        project:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        recalculateShipment:
          $ref: "#/components/schemas/DtoValueOfBoolean"
        requestOn:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        residentialDelivery:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        rotRutDetails:
          $ref: "#/components/schemas/RotRutUpdateDto"
        salesPerson:
          $ref: "#/components/schemas/DtoValueOfString"
        saturdayDelivery:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        schedShipment:
          $ref: "#/components/schemas/DtoValueOfNullableOfDateTime"
        shipComplete:
          $ref: "#/components/schemas/DtoValueOfNullableOfSalesOrderShipCompleteStatuses"
        shipSeparately:
          $ref: "#/components/schemas/DtoValueOfNullableOfBoolean"
        shipVia:
          $ref: "#/components/schemas/DtoValueOfString"
        shippingTerms:
          $ref: "#/components/schemas/DtoValueOfString"
        shippingZone:
          $ref: "#/components/schemas/DtoValueOfString"
        soBillingAddress:
          $ref: "#/components/schemas/DtoValueOfSalesOrderAddressUpdateDto"
        soBillingContact:
          $ref: "#/components/schemas/DtoValueOfSalesOrderContactUpdateDto"
        soShippingAddress:
          $ref: "#/components/schemas/DtoValueOfSalesOrderAddressUpdateDto"
        soShippingContact:
          $ref: "#/components/schemas/DtoValueOfSalesOrderContactUpdateDto"
        terms:
          $ref: "#/components/schemas/DtoValueOfString"
        transactionType:
          $ref: "#/components/schemas/DtoValueOfNullableOfInt32"
        vatRegistrationId:
          $ref: "#/components/schemas/vatRegistrationIdInSalesOrderUpdateDto"
    salesAccountInExpenseClaimDetailDto:
      description: Sales account &gt; The sales account to which the system should record the part of the amount to charge the customer for. This is applicable only when a customer has been specified.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    salesAccountInExpenseReceiptDto:
      description: Receipt details tab &gt; Financial details section &gt; Sales account &gt; The sales account to which the system records the part of the amount to charge the customer for.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    salesAccountInInventoryAccountInformationDto:
      description: "Mandatory field: Sales account *&gt; The income account to be used for this stock item to record sales."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    salesEuAccountInInventoryAccountInformationDto:
      description: Sales - EU account &gt; The income account to be used for this stock item to record EU sales.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    salesExportAccountInInventoryAccountInformationDto:
      description: Sales - export account &gt; The income account to be used for this stock item to record export sales.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    salesNonTaxableAccountInInventoryAccountInformationDto:
      description: Sales - non-taxable account &gt; The income account to be used for this stock item to record non-taxable sales.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    salesPersonIDInCashSaleUpdateDto:
      description: The field is deprecated for customer document endpoints, please use Salesperson instead
      properties:
        value:
          format: int32
          type: integer
    salesPersonIDInCreditNoteUpdateDto:
      description: The field is deprecated for customer document endpoints, please use Salesperson instead
      properties:
        value:
          format: int32
          type: integer
    salesPersonIDInCustomerCreditNoteUpdateDto:
      description: The field is deprecated for customer document endpoints, please use Salesperson instead
      properties:
        value:
          format: int32
          type: integer
    salesPersonIDInCustomerDebitNoteUpdateDto:
      description: The field is deprecated for customer document endpoints, please use Salesperson instead
      properties:
        value:
          format: int32
          type: integer
    salesPersonIDInCustomerInvoiceUpdateDto:
      description: The field is deprecated for customer document endpoints, please use Salesperson instead
      properties:
        value:
          format: int32
          type: integer
    salesPersonIDInCustomerOverdueChargeUpdateDto:
      description: The field is deprecated for customer document endpoints, please use Salesperson instead
      properties:
        value:
          format: int32
          type: integer
    salesPersonInCashSaleDto:
      description: The document details tab &gt; Salesperson ID &gt; The salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesPersonInCreditNoteDto:
      description: The document details tab &gt; Salesperson ID &gt; The salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesPersonInCustomerContractSummaryDto:
      description: Contract management &gt; Salesperson &gt; The salesperson associated with the contract.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesPersonInCustomerCreditNoteDto:
      description: The document details tab &gt; Salesperson ID &gt; The salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesPersonInCustomerDebitNoteDto:
      description: The document details tab &gt; Salesperson ID &gt; The salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesPersonInCustomerInvoiceDto:
      description: The document details tab &gt; Salesperson ID &gt; The salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesPersonInCustomerOverdueChargeDto:
      description: The document details tab &gt; Salesperson ID &gt; The salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesPersonInSalesOrderDto:
      description: The Commissions tab &gt; Salesperson ID &gt; The salesperson.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesPersonInSalesOrderLineDto:
      description: Salesperson ID &gt; The salesperson associated with the sale of the line item.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesSubInExpenseReceiptDto:
      description: Receipt details tab &gt; Financial details section &gt; Sales sub. &gt; The corresponding subaccount the system uses to record the amount to charge the customer for.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesSubaccountInExpenseClaimDetailDto:
      description: Sales sub. &gt; The corresponding subaccount the system uses to record the amount to charge the customer for. This is applicable only when a customer has been specified.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesSubaccountInInventoryAccountInformationDto:
      description: "Mandatory field: Sales sub. *&gt; The subaccount to be used for this item to record sales."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    salesValidInWarehouseLocationUpdateDto:
      description: Sales allowed &gt; You select this check box if sales are allowed from this location.
      properties:
        value:
          type: boolean
    salespersonInCashSaleUpdateDto:
      description: The identifier of the salesperson involved.
      properties:
        value:
          type: string
    salespersonInCreditNoteUpdateDto:
      description: The identifier of the salesperson involved.
      properties:
        value:
          type: string
    salespersonInCustomerCreditNoteUpdateDto:
      description: The identifier of the salesperson involved.
      properties:
        value:
          type: string
    salespersonInCustomerDebitNoteUpdateDto:
      description: The identifier of the salesperson involved.
      properties:
        value:
          type: string
    salespersonInCustomerInvoiceUpdateDto:
      description: The identifier of the salesperson involved.
      properties:
        value:
          type: string
    salespersonInCustomerOverdueChargeUpdateDto:
      description: The identifier of the salesperson involved.
      properties:
        value:
          type: string
    satInTimeCardMaterialsUpdateDto:
      description: The quantity reported for Saturday.
      properties:
        value:
          format: double
          type: number
    satInTimeCardSummaryUpdateDto:
      description: The work time reported for Saturday, including overtime.
      properties:
        value:
          format: int32
          type: integer
    sellerInCashSaleLineDto:
      description: Salesperson ID &gt; The identifier of the salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    sellerInCreditNoteLineDto:
      description: Salesperson ID &gt; The identifier of the salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    sellerInCustomerCreditNoteLineDto:
      description: Salesperson ID &gt; The identifier of the salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    sellerInCustomerDebitNoteLineDto:
      description: Salesperson ID &gt; The identifier of the salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    sellerInCustomerInvoiceLineDto:
      description: Salesperson ID &gt; The identifier of the salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    sellerInCustomerOverdueChargeLineDto:
      description: Salesperson ID &gt; The identifier of the salesperson involved.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    shipLocationInWarehouseDto:
      description: Location table tab &gt; Shipping location &gt; The warehouse location to be used to ship goods.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    shipToInPurchaseOrderDto:
      description: Shipping instructions tab &gt; The Delivery address section &gt; Ship to &gt; The particular destination of the selected type.
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    shipViaInSalesOrderDto:
      description: The Delivery settings tab &gt; Shipping information section &gt; Ship via &gt;  The Ship via code that represents the carrier and its service to be used for shipping the ordered goods.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    shipViaInShipmentDto:
      description: Delivery settings tab &gt; Shipping information section &gt; Ship via &gt; The carrier used for shipping the goods.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    shippingAddressInPurchaseOrderDto:
      description: Supplier info tab &gt; The Supplier address section &gt; The default shipping address for the supplier.
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInPurchaseOrderAddressDto"
        county:
          $ref: "#/components/schemas/countyInPurchaseOrderAddressDto"
        overrideAddress:
          description: The Supplier info tab &gt; The Supplier address section &gt; Override &gt; A check box that you select to override (that is, to edit ) the default shipping address for the supplier.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    shippingContactInPurchaseOrderDto:
      description: Supplier information tab &gt; The Supplier contact section &gt; The supplier contact for matters related to this purchase order.
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        overrideContact:
          description: The Supplier information tab &gt; The Supplier contact section &gt; Override &gt; A check box that you select to override (edit) the default contact settings for the supplier.
          type: boolean
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    shippingLocationInPurchaseOrderDto:
      description: "Mandatory field: The Shipping instructions tab &gt; The Delivery address section &gt; Shipping location* &gt; The location from which the order is to be shipped."
      properties:
        id:
          description: Click the magnifier &gt; The identifier
          format: int32
          type: integer
        name:
          description: Click the magnifier &gt; The displayed name
          type: string
    shippingTermsInSalesOrderDto:
      description: Delivery settings tab &gt; Shipping information section &gt; Shipping terms
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    shippingTermsInShipmentDto:
      description: Delivery settings tab &gt; Shipping information section &gt; Shipping terms &gt; The shipping terms used in relations with the customer.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    shippingZoneInSalesOrderDto:
      description: Delivery settings tab &gt; Shipping information section &gt; Shipping zone
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    shippingZoneInShipmentDto:
      description: Delivery settings tab &gt; Shipping information section &gt; Shipping zone ID &gt; The shipping zone of the customer.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    soBillingAddressInSalesOrderDto:
      description: Financial settings tab &gt; Invoice address section
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInSalesOrderAddressDto"
        county:
          $ref: "#/components/schemas/countyInSalesOrderAddressDto"
        overrideAddress:
          description: Override address &gt; A check box indicating that you want to override the default address information.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    soBillingContactInSalesOrderDto:
      description: The Financial settings tab &gt; The Invoice address section or on the Delivery address section
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        overrideContact:
          description: Override contact &gt; A check box indicating that you want to override the default contact information.
          type: boolean
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    soShippingAddressInSalesOrderDto:
      description: Delivery settings tab &gt; Delivery address section
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInSalesOrderAddressDto"
        county:
          $ref: "#/components/schemas/countyInSalesOrderAddressDto"
        overrideAddress:
          description: Override address &gt; A check box indicating that you want to override the default address information.
          type: boolean
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    soShippingContactInSalesOrderDto:
      description: Delivery settings tab &gt; Delivery address contact section
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        overrideContact:
          description: Override contact &gt; A check box indicating that you want to override the default contact information.
          type: boolean
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    startDateInProjectUpdateDto:
      description: Mandatory field
      properties:
        value:
          format: date-time
          type: string
    statusInEmployeeCreateDTO:
      description: "Mandatory field: The top part &gt; Status &gt; The status of the employee. The following options are available: Active, On hold, Hold payments, Inactive, One-time."
      properties:
        value:
          enum:
            - Active
            - Hold
            - HoldPayments
            - Inactive
            - OneTime
          type: string
    statusInEmployeeUpdateDto:
      description: "Mandatory field: The top part &gt; Status &gt; The status of the employee. The following options are available: Active, On hold, Hold payments, Inactive, One-time."
      properties:
        value:
          enum:
            - Active
            - Hold
            - HoldPayments
            - Inactive
            - OneTime
          type: string
    subInPurchaseOrderLineDto:
      description: Sub. ID &gt; The subaccount used to record the purchased non-stock item that does not require receipt (by default, the subaccount generated in accordance with the rule defined in the Combine COGS/expense sub. from field in the Posting classes (IN206000) window).
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subInPurchaseReceiptLineDto:
      description: Document details tab &gt; Sub ID &gt; The subaccount to be used to record the non-stock item amount on the purchase receipt (for non-stock items for which receipts are not required).
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    subaccountIdInSubAccountUpdateDto:
      description: The property is now considered obsolete, use SubaccountNumber instead. If SubaccountNumber is specified in a request, this property is ignored.
      properties:
        value:
          type: string
    subaccountInBudgetDto:
      description: "Mandatory field: The budget area &gt; The budget articles pane &gt; Subaccount* &gt; The subaccount of the budget article if the article is a leaf on the budget tree."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    subaccountInCashSaleDto:
      description: The Document details tab &gt; Subaccount* &gt; The corresponding subaccount used for this transaction.
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCashSaleLineDto:
      description: "Mandatory field: Subaccount* &gt; The corresponding subaccount used for this transaction."
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCreditNoteDto:
      description: The Document details tab &gt; Subaccount* &gt; The corresponding subaccount used for this transaction.
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCreditNoteLineDto:
      description: "Mandatory field: Subaccount* &gt; The corresponding subaccount used for this transaction."
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCustomerCreditNoteDto:
      description: The Document details tab &gt; Subaccount* &gt; The corresponding subaccount used for this transaction.
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCustomerCreditNoteLineDto:
      description: "Mandatory field: Subaccount* &gt; The corresponding subaccount used for this transaction."
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCustomerCreditWriteOffDto:
      description: The Document details tab &gt; Subaccount* &gt; The corresponding subaccount used for this transaction.
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCustomerDebitNoteDto:
      description: The Document details tab &gt; Subaccount* &gt; The corresponding subaccount used for this transaction.
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCustomerDebitNoteLineDto:
      description: "Mandatory field: Subaccount* &gt; The corresponding subaccount used for this transaction."
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCustomerDocumentDto:
      description: The Document details tab &gt; Subaccount* &gt; The corresponding subaccount used for this transaction.
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCustomerInvoiceDto:
      description: The Document details tab &gt; Subaccount* &gt; The corresponding subaccount used for this transaction.
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCustomerInvoiceLineDto:
      description: "Mandatory field: Subaccount* &gt; The corresponding subaccount used for this transaction."
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCustomerOverdueChargeDto:
      description: The Document details tab &gt; Subaccount* &gt; The corresponding subaccount used for this transaction.
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInCustomerOverdueChargeLineDto:
      description: "Mandatory field: Subaccount* &gt; The corresponding subaccount used for this transaction."
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInJournalTransactionLineDto:
      description: "Mandatory field: The table &gt; Subaccount &gt; The subaccount used with the account to detail a journal entry."
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInSalesOrderLineDto:
      description: Subaccount &gt; A subcategory of the account that carries identifying information.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    subaccountInSupplierDocumentDto:
      description: "Mandatory field: Document details tab &gt; Subaccount* &gt; The corresponding subaccount to be used for invoices and adjustments."
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountInSupplierInvoiceLineDto:
      description: "The table &gt; Mandatory field: Subaccount* &gt; The corresponding subaccount used for this invoice line."
      properties:
        active:
          description: Active &gt; The status of the identifier.
          type: boolean
        description:
          description: Description &gt; The description of the identifier.
          type: string
        errorInfo:
          type: string
        lastModifiedDateTime:
          description: System generated information.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        segments:
          description: Segments are entities that you use to define the structure of IDs for the subaccount.  This information is collected from window CS202000.
          items:
            $ref: "#/components/schemas/SegmentDto"
          type: array
        subaccountId:
          description: SubID &gt; The  identifier of the subaccount.
          format: int32
          type: integer
        subaccountNumber:
          description: "Mandatory field: Subaccount* &gt; The subaccount number. Format 9-XX."
          type: string
    subaccountNumberInSubAccountUpdateDto:
      description: Mandatory field, identifies the subaccount to update.
      properties:
        value:
          type: string
    summaryInCustomerContractDto:
      description: Summary tab &gt;
      properties:
        activationDate:
          description: Contract settings section &gt; Activation date &gt; The date to initiate the provision of the contract services.
          format: date-time
          type: string
        caseCountItem:
          $ref: "#/components/schemas/caseCountItemInCustomerContractSummaryDto"
        currency:
          description: "Mandatory field: Contract settings section &gt; Currency* &gt; The currency used in the contract."
          type: string
        expirationDate:
          description: Contract settings section &gt; Expiration date &gt; The date when the contract expires.
          format: date-time
          type: string
        gracePeriod:
          description: Contract settings section &gt; Grace period &gt; The number of days after the expiration date where the contract can still be renewed.
          format: int32
          type: integer
        invoiceAccount:
          $ref: "#/components/schemas/invoiceAccountInCustomerContractSummaryDto"
        invoiceLocation:
          $ref: "#/components/schemas/LocationNameDescriptionDto"
        invoiceTo:
          description: "Invoice information section &gt; Invoice to &gt; The setting that defines the customer account to be invoiced for a contract. The following options are available: Parent account, Customer account, Specific account."
          enum:
            - ParentAccount
            - CustomerAccount
            - SpecificAccount
          type: string
        invoicingPeriod:
          description: "Mandatory field: Invoicing schedule section &gt; Invoicing period* &gt; The type of invoicing schedule, which can be one of the following options: Weekly, Monthly; Quarterly, Half a year, Yearly, On demand, Statement based."
          enum:
            - Statement
            - Quarterly
            - Monthly
            - Annual
            - SemiAnnual
            - Weekly
            - OnDemand
          type: string
        invoicingScheduleStartsOn:
          description: Invoicing schedule section &gt; Invoice schedule starts on &gt; A read-only field that displays the start date of the first invoicing period.
          format: date-time
          type: string
        lastInvoicingDate:
          description: Invoicing schedule section &gt; Last invoicing date &gt; A read-only field that shows the date when the invoicing was performed most recently.
          format: date-time
          type: string
        massRenewal:
          description: Contract settings section &gt; Mass renewal &gt; A check box indicating renewal of all contract at expiration date.
          type: boolean
        nextInvoicingDate:
          description: Invoicing schedule section &gt; Next invoicing date &gt; The date of the next invoicing invoice, according to the invoicing schedule.
          format: date-time
          type: string
        owner:
          $ref: "#/components/schemas/ownerInCustomerContractSummaryDto"
        renewalPoint:
          description: Contract settings section &gt; Renewal point &gt; The number of days before expiration where the renewal process are to begin.
          format: int32
          type: integer
        salesPerson:
          $ref: "#/components/schemas/salesPersonInCustomerContractSummaryDto"
        setupDate:
          description: "Mandatory field: Contract settings section &gt; Setup date* &gt; The date of contract setup."
          format: date-time
          type: string
        terminationDate:
          description: Contract settings section &gt; Termination date &gt; The date when the contract will be cancelled; no services will be provided.
          format: date-time
          type: string
    sunInTimeCardMaterialsUpdateDto:
      description: The quantity reported for Sunday.
      properties:
        value:
          format: double
          type: number
    sunInTimeCardSummaryUpdateDto:
      description: The work time reported for Sunday, including overtime.
      properties:
        value:
          format: int32
          type: integer
    supplementaryMeasureUnitInIntrastatUpdateDto:
      description: "The requirement for Supplementary Measure Units applies only to certain classes of goods(NC8 Positions)\r

        that may be expressed from quantitative point of view in other measurement units but kilo also."
      properties:
        value:
          type: string
    supplierAccountInSupplierGlAccountsDto:
      description: "Mandatory field: Supplier account &gt; The liability account used to record the balance of supplier ledger transactions related to the supplier."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        type:
          type: string
    supplierAddressInSupplierDto:
      description: Purchase settings tab &gt; Shipping address section &gt;
      properties:
        addressId:
          format: int32
          type: integer
        addressLine1:
          description: Address 1 &gt; The first line of the customer's/supplier's/company's/employee's contact address.
          type: string
        addressLine2:
          description: Address 2 &gt; The second line of the address.
          type: string
        addressLine3:
          description: Address 3 &gt; The third line of the address.
          type: string
        city:
          description: City &gt; The city.
          type: string
        country:
          $ref: "#/components/schemas/countryInAddressDto"
        county:
          $ref: "#/components/schemas/countyInAddressDto"
        postalCode:
          description: Postcode &gt; The postcode.
          type: string
    supplierClassInSupplierDto:
      description: "Mandatory field: General information tab &gt; Financial settings section &gt; Supplier class* &gt; The class of the supplier."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    supplierContactInSupplierDto:
      description: Purchase settings tab &gt; Shipping contact information section &gt;
      properties:
        attention:
          description: Attention &gt; The attention line as it is used in your customer's/supplier's/company's business letters. The intention of this line is to direct the letter to the right person if the letter is not addressed to any specific person.
          type: string
        contactId:
          format: int32
          type: integer
        email:
          description: Email &gt; The email address of the customer/supplier/company as a business entity.
          type: string
        fax:
          description: Fax &gt; The fax number.
          type: string
        name:
          description: Name &gt; The legal name of to appear on the documents.
          type: string
        phone1:
          description: Phone 1 &gt; The default phone number.
          type: string
        phone2:
          description: Phone 2 &gt; An additional phone number.
          type: string
        web:
          description: Web &gt; The website of the company, if one exists.
          type: string
    supplierInLandedCostDto:
      description: "Mandatory field: Landed costs tab &gt; Supplier* &gt; The landed cost supplier to whom the landed cost amount will be paid."
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    supplierInPurchaseOrderBasicDto:
      description: "Mandatory field: The top part &gt; Supplier* &gt; The supplier from which the items will be purchased."
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    supplierInPurchaseOrderBasicUpdateDto:
      description: Mandatory field if GLN or VatRegistrationId is not specified.
      properties:
        value:
          type: string
    supplierInPurchaseOrderDto:
      description: "Mandatory field: The top part &gt; Supplier* &gt; The supplier from which the items will be purchased."
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    supplierInPurchaseOrderUpdateDto:
      description: Mandatory field if GLN or VatRegistrationId is not specified.
      properties:
        value:
          type: string
    supplierInPurchaseReceiptBasicDto:
      description: "Mandatory field: The top part &gt; Supplier* &gt; The supplier from which the items have been received or to which they will be returned."
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    supplierInPurchaseReceiptDto:
      description: "Mandatory field: The top part &gt; Supplier* &gt; The supplier from which the items have been received or to which they will be returned."
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    supplierInSupplierDocumentDto:
      description: The Top part &gt; Supplier* &gt; The identifier of the supplier referred to in the document.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    supplierInSupplierInvoiceDto:
      description: The Top part &gt; Supplier* &gt; The identifier of the supplier referred to in the document.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    supplierInSupplierPOBalanceDto:
      description: The name of the supplier
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    supplierInSupplierPaymentDto:
      description: "Mandatory field: The top part &gt; Supplier* &gt; The supplier."
      properties:
        internalId:
          format: int32
          type: integer
        name:
          description: The name of the particular destination of the selected type.
          type: string
        number:
          description: The identifier of the particular destination of the selected type.
          type: string
    supplierTaxZoneInSupplierInvoiceDto:
      description: The Financial details tab &gt; The VAT section &gt; Supplier VAT Zone &gt; The VAT zone of the supplier, which is specified in the  AP303000 window.
      properties:
        defaultTaxCategory:
          $ref: "#/components/schemas/TaxCategoryNumberDescriptionDto"
        defaultVatCategory:
          description: Click the magnifier. The Default VAT category for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        description:
          description: Click the magnifier. The description for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        errorInfo:
          type: string
        id:
          description: Click the magnifier. The identifier for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
    supplierVatZoneInPurchaseOrderDto:
      description: Supplier info tab &gt; The Info section &gt; Supplier VAT zone &gt; The VAT zone of the supplier's location.
      properties:
        defaultTaxCategory:
          $ref: "#/components/schemas/TaxCategoryNumberDescriptionDto"
        defaultVatCategory:
          description: Click the magnifier. The Default VAT category for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        description:
          description: Click the magnifier. The description for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        errorInfo:
          type: string
        id:
          description: Click the magnifier. The identifier for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
    taxCategoryIdInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The VAT category assigned to the stock item.
      properties:
        value:
          type: string
    taxCategoryIdInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The VAT category assigned to the stock item.
      properties:
        value:
          type: string
    taxCategoryInExpenseClaimDetailDto:
      description: VAT category &gt; The VAT category associated with the expense item.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    taxCategoryInExpenseClaimDetailUpdateDto:
      description: The tax category associated with the expense item.
      properties:
        value:
          type: string
    taxCategoryInExpenseReceiptDto:
      description: Receipt details tab &gt; Expense details section &gt; VAT category &gt; The tax category for the expense receipt.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    taxCategoryInLandedCostDto:
      description: Landed costs tab &gt; VAT category &gt; VAT category associated with supplier's VAT zone.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    taxCategoryInPurchaseOrderLineDto:
      description: VAT category &gt; The VAT category assigned to the ordered stock item.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    taxCategoryInPurchaseReceiptLineDto:
      description: Document details tab &gt; VAT category &gt; The VAT category assigned to the stock item.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    taxCategoryInTaskExtendedDto:
      description: VAT category &gt; The tax category for the project task.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    taxCategoryInTransactionDetailDto:
      description: VAT category &gt; The category that applies to the transaction.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    taxInCashTranTaxDetailDto:
      description: "Mandatory field: VAT ID &gt; The VAT that applies to the cash transaction."
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    taxZoneInFinancialsDetailDto:
      description: VAT settings section &gt; VAT zone &gt; The VAT zone that applies to the transaction.
      properties:
        defaultTaxCategory:
          $ref: "#/components/schemas/TaxCategoryNumberDescriptionDto"
        defaultVatCategory:
          description: Click the magnifier. The Default VAT category for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        description:
          description: Click the magnifier. The description for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        errorInfo:
          type: string
        id:
          description: Click the magnifier. The identifier for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
    templateInProjectDto:
      description: The top part &gt; Templated ID &gt; The template used for creating this project, if applicable.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
        status:
          enum:
            - Planned
            - Active
            - Completed
            - Cancelled
            - OnHold
            - PendingApproval
          type: string
    termsInLandedCostDto:
      description: Landed costs tab &gt; Terms &gt; The credit terms used in relations with the landed cost supplier.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    termsInPurchaseOrderDto:
      description: "Mandatory field: The Supplier info tab &gt; The Info section &gt; Terms* &gt; The specific credit terms to be used for the purchase order."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    termsInSalesOrderDto:
      description: "Mandatory field: Financial settings tab &gt; Financial information section &gt; Terms* &gt; The credit terms used in relations with the customer. See also window CS206500."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    thuInTimeCardMaterialsUpdateDto:
      description: The quantity reported for Thursday.
      properties:
        value:
          format: double
          type: number
    thuInTimeCardSummaryUpdateDto:
      description: The work time reported for Thursday, including overtime.
      properties:
        value:
          format: int32
          type: integer
    toCurrencyIdInCreateCurrencyRateDto:
      description: To currency id.
      properties:
        value:
          type: string
    toWarehouseInInventoryTransferDto:
      description: "Mandatory field: The top part &gt; To warehouse &gt; The warehouse to which the goods are transferred."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    toWarehouseInShipmentDto:
      description: The top part &gt; To warehouse &gt; The warehouse to which the goods should be shipped in case of a transfer.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    transactionDescriptionInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The description of the receipt or return transaction.
      properties:
        value:
          type: string
    transactionDescriptionInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The description of the receipt or return transaction.
      properties:
        value:
          type: string
    transactionTypeInSalesOrderDto:
      description: Delivery settings tab &gt; Intrastat section &gt; Transaction type
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          format: int32
          type: integer
    transactionTypeInShipmentDto:
      description: Delivery settings tab &gt; Intrastat section &gt; Transaction type &gt; The 1-digit code that describes the nature of the transaction (according to EU regulations for Intrastat reporting).
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          format: int32
          type: integer
    transferNumberInInventoryReceiptUpdateDto:
      description: The unique reference number of the receipt, which the system automatically assigns according to the numbering sequence selected for receipts on the Inventory Preferences IN.10.10.00) form.
      properties:
        value:
          type: string
    transferOrderLineNbrInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The line number in the transfer order to which this receipt is linked.
      properties:
        value:
          format: int32
          type: integer
    transferOrderLineNbrInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The line number in the transfer order to which this receipt is linked.
      properties:
        value:
          format: int32
          type: integer
    transferOrderNbrInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The reference number of the transfer order to which this receipt is linked.
      properties:
        value:
          type: string
    transferOrderNbrInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The reference number of the transfer order to which this receipt is linked.
      properties:
        value:
          type: string
    transferOrderTypeInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The type of the transfer order to which this receipt is linked.
      properties:
        value:
          enum:
            - CreditNote
            - DebitNote
            - Invoice
            - QuoteOrder
            - RMAOrder
            - SalesOrder
            - StandardOrder
            - TransferOrder
          type: string
    transferOrderTypeInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The type of the transfer order to which this receipt is linked.
      properties:
        value:
          enum:
            - CreditNote
            - DebitNote
            - Invoice
            - QuoteOrder
            - RMAOrder
            - SalesOrder
            - StandardOrder
            - TransferOrder
          type: string
    transfersValidInWarehouseLocationUpdateDto:
      description: Transfers allowed &gt; You select this check box if transfers are allowed for this location.
      properties:
        value:
          type: boolean
    tueInTimeCardMaterialsUpdateDto:
      description: The quantity reported for Tuesday.
      properties:
        value:
          format: double
          type: number
    tueInTimeCardSummaryUpdateDto:
      description: The work time reported for Tuesday, including overtime.
      properties:
        value:
          format: int32
          type: integer
    typeInFixedAssetDto:
      description: The type of this fixed asset
      properties:
        assetTypeID:
          description: The type id of this fixed asset
          type: string
        description:
          description: The type description
          type: string
    typeInPaymentUpdateDto:
      description: "The top part &gt; Type &gt; The type of a document: Payment, Credit note, Prepayment, Customer refund, Void payment, Balance write-off."
      properties:
        value:
          enum:
            - Payment
            - CreditNote
            - Prepayment
            - Refund
            - VoidPayment
            - SmallBalanceWo
            - VoidRefund
            - Undefined
          type: string
    typeInSupplierPaymentUpdateDto:
      description: Reference number for the document. Can be used when manual numbering is enabled.
      properties:
        value:
          enum:
            - Payment
            - DebitAdj
            - Prepayment
            - Refund
            - VoidPayment
            - VoidRefund
          type: string
    typeOfWorkInCustomerInvoiceLinesUpdateDto:
      description: The property is now considered obsolete. Please define typeOfWork on the item level instead.
      properties:
        value:
          type: string
    unitCostInExpenseClaimDetailUpdateDto:
      description: The cost of a unit of the item.
      properties:
        value:
          format: double
          type: number
    unitCostInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The cost of a unit of the purchased item.
      properties:
        value:
          format: double
          type: number
    unitCostInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The cost of a unit of the purchased item.
      properties:
        value:
          format: double
          type: number
    uoMInTimeCardMaterialsUpdateDto:
      description: The unit of measure of item
      properties:
        value:
          type: string
    uomInAllocationsUpdateDto:
      description: UoM &gt; The unit of measure for the specified quantity of the inventory item.
      properties:
        value:
          type: string
    uomInExpenseClaimDetailUpdateDto:
      description: The unit of measure in which the quantity is shown.
      properties:
        value:
          type: string
    uomInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The unit of measure (UoM) used for the purchased or transferred item. By default, it is the purchase unit.
      properties:
        value:
          type: string
    uomInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The unit of measure (UoM) used for the purchased or transferred item. By default, it is the purchase unit.
      properties:
        value:
          type: string
    validateLineDetailsInSupplierInvoiceUpdateDto:
      description: If this flag is set/true, the system will surface any line validation errors to the clients rather than silently ignoring these.
      properties:
        value:
          type: boolean
    vatAgencyIdInVatInformationDto:
      description: VAT settings tab &gt; Tax agency &gt; The name of the tax agency to receive the VAT.
      properties:
        name:
          description: Click the magnifier. &gt; The name.
          type: string
        number:
          description: Click the magnifier. &gt; The identifier.
          type: string
    vatClaimableAccountInVatGlAccountsDto:
      description: VAT Claimable account &gt; The account that accumulates the VAT amounts to be claimed from the tax agency for the VAT reporting period.
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    vatClaimableSubccountInVatGlAccountsDto:
      description: VAT claimable subaccount &gt; The corresponding tax claimable subaccount.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatCodeInCashSaleLineDto:
      description: VAT category &gt; The VAT category (if applied) for the transaction. The category represents the type of goods or services.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatCodeInCreditNoteLineDto:
      description: VAT category &gt; The VAT category (if applied) for the transaction. The category represents the type of goods or services.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatCodeInCustomerCreditNoteLineDto:
      description: VAT category &gt; The VAT category (if applied) for the transaction. The category represents the type of goods or services.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatCodeInCustomerDebitNoteLineDto:
      description: VAT category &gt; The VAT category (if applied) for the transaction. The category represents the type of goods or services.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatCodeInCustomerInvoiceLineDto:
      description: VAT category &gt; The VAT category (if applied) for the transaction. The category represents the type of goods or services.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatCodeInCustomerOverdueChargeLineDto:
      description: VAT category &gt; The VAT category (if applied) for the transaction. The category represents the type of goods or services.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatCodeInInventoryDto:
      description: "Mandatory field: General information tab &gt; Item defaults section &gt; VAT category* &gt; The VAT code of the stock item, which by default is the VAT code associated with the item class."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatCodeInInventoryUpdateDto:
      description: The vat category of the item, which by default is the vat category associated with the item class.
      properties:
        value:
          type: string
    vatCodeInJournalTransactionLineDto:
      description: The table &gt; VAT code &gt; The VAT code based on which the taxable amount is calculated.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatCodeInSupplierInvoiceLineDto:
      description: The table &gt; VAT category &gt; The VAT category (if applied) for the transaction. Unless you specify otherwise, it is the default VAT category of the supplier location's VAT zone.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatIdInTaxDetailDto:
      description: VAT ID &gt; The ID of the specific VAT applied.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    vatInJournalTransactionLineDto:
      description: The table &gt; VAT ID &gt; The VAT used to calculate the VAT amount.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatPayableAccountInVatGlAccountsDto:
      description: "Mandatory field: VAT payable account* &gt; The liability account that accumulates the VAT amounts to be paid to a tax agency for the VAT reporting period."
      properties:
        description:
          description: Name of item/description
          type: string
        externalCode1:
          description: Account class &gt; The identifier of the account class.
          type: string
        externalCode2:
          description: Account class &gt; The name of the account class.
          type: string
        number:
          description: Number of item
          type: string
        type:
          description: Account &gt; The account number.
          enum:
            - Asset
            - Liability
            - Income
            - Expense
          type: string
    vatPayableSubaccountInVatGlAccountsDto:
      description: "Mandatory field: VAT payable subaccount* &gt; The corresponding VAT payable subaccount."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatRegistrationIdInPurchaseOrderBasicUpdateDto:
      description: Mandatory field if Supplier or GLN is not specified.
      properties:
        value:
          type: string
    vatRegistrationIdInPurchaseOrderUpdateDto:
      description: Mandatory field if Supplier or GLN is not specified.
      properties:
        value:
          type: string
    vatRegistrationIdInSalesOrderBasicUpdateDto:
      description: Mandatory field if Customer or GLN is not specified.
      properties:
        value:
          type: string
    vatRegistrationIdInSalesOrderUpdateDto:
      description: Mandatory field if Customer or GLN is not specified.
      properties:
        value:
          type: string
    vatZoneInBranchDto:
      description: The Delivery settings tab &gt; Delivery instruction section &gt; VAT zone ID &gt; The VAT zone of the delivery location.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    vatZoneInCustomerDto:
      description: "Mandatory field: Delivery settings tab &gt; Default location settings section &gt; VAT Zone* &gt; The VAT zone of the customer's default location."
      properties:
        defaultTaxCategory:
          $ref: "#/components/schemas/TaxCategoryNumberDescriptionDto"
        defaultVatCategory:
          description: Click the magnifier. The Default VAT category for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        description:
          description: Click the magnifier. The description for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        errorInfo:
          type: string
        id:
          description: Click the magnifier. The identifier for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
    vatZoneInEntryTypeDto:
      description: VAT zone &gt; The VAT zone to be used by default with this entry type.
      properties:
        defaultTaxCategory:
          $ref: "#/components/schemas/TaxCategoryNumberDescriptionDto"
        defaultVatCategory:
          description: Click the magnifier. The Default VAT category for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        description:
          description: Click the magnifier. The description for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        errorInfo:
          type: string
        id:
          description: Click the magnifier. The identifier for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
    vatZoneInExtendedOrganizationDto:
      description: Vat Zone
      properties:
        defaultTaxCategory:
          $ref: "#/components/schemas/TaxCategoryNumberDescriptionDto"
        defaultVatCategory:
          description: Click the magnifier. The Default VAT category for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        description:
          description: Click the magnifier. The description for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        errorInfo:
          type: string
        id:
          description: Click the magnifier. The identifier for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
    vatZoneInLocationDto:
      description: General information tab &gt; Location address section &gt; VAT zone &gt; The VAT zone associated with the account location.
      properties:
        defaultTaxCategory:
          $ref: "#/components/schemas/TaxCategoryNumberDescriptionDto"
        defaultVatCategory:
          description: Click the magnifier. The Default VAT category for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        description:
          description: Click the magnifier. The description for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        errorInfo:
          type: string
        id:
          description: Click the magnifier. The identifier for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
    vatZoneInSupplierDto:
      description: Purchase settings tab &gt; Default location settings section &gt; VAT zone &gt; The VAT zone of the supplier's default location.
      properties:
        defaultTaxCategory:
          $ref: "#/components/schemas/TaxCategoryNumberDescriptionDto"
        defaultVatCategory:
          description: Click the magnifier. The Default VAT category for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        description:
          description: Click the magnifier. The description for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        errorInfo:
          type: string
        id:
          description: Click the magnifier. The identifier for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
    vatZoneInSupplierLocationDto:
      description: General information tab &gt; Location address section &gt; VAT zone &gt; The VAT zone associated with the account location.
      properties:
        defaultTaxCategory:
          $ref: "#/components/schemas/TaxCategoryNumberDescriptionDto"
        defaultVatCategory:
          description: Click the magnifier. The Default VAT category for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        description:
          description: Click the magnifier. The description for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        errorInfo:
          type: string
        id:
          description: Click the magnifier. The identifier for the VAT zone of the supplier, which is specified in the  AP303000 window.
          type: string
        metadata:
          $ref: "#/components/schemas/MetadataDto"
    visibilityInProjectBasicDto:
      description: Summary tab &gt; Visibility settings section &gt;
      properties:
        visibleInAp:
          description: Supplier ledger
          type: boolean
        visibleInAr:
          description: Customer ledger
          type: boolean
        visibleInCa:
          description: Cash management
          type: boolean
        visibleInCr:
          type: boolean
        visibleInEa:
          description: Expenses
          type: boolean
        visibleInGl:
          description: General ledger
          type: boolean
        visibleInIn:
          description: Inventory
          type: boolean
        visibleInPo:
          description: Purchases
          type: boolean
        visibleInSo:
          description: Sales
          type: boolean
        visibleInTa:
          description: Time entries
          type: boolean
    visibilityInProjectDto:
      description: Summary tab &gt; Visibility settings section &gt;
      properties:
        visibleInAp:
          description: Supplier ledger
          type: boolean
        visibleInAr:
          description: Customer ledger
          type: boolean
        visibleInCa:
          description: Cash management
          type: boolean
        visibleInCr:
          type: boolean
        visibleInEa:
          description: Expenses
          type: boolean
        visibleInGl:
          description: General ledger
          type: boolean
        visibleInIn:
          description: Inventory
          type: boolean
        visibleInPo:
          description: Purchases
          type: boolean
        visibleInSo:
          description: Sales
          type: boolean
        visibleInTa:
          description: Time entries
          type: boolean
    visibilityInTaskExtendedDto:
      description: Information retrieved from the Summary tab
      properties:
        visibleInAp:
          description: Supplier ledger
          type: boolean
        visibleInAr:
          description: Customer ledger
          type: boolean
        visibleInCa:
          description: Cash management
          type: boolean
        visibleInCr:
          type: boolean
        visibleInEa:
          description: Expenses
          type: boolean
        visibleInGl:
          description: General ledger
          type: boolean
        visibleInIn:
          description: Inventory
          type: boolean
        visibleInPo:
          description: Purchases
          type: boolean
        visibleInSo:
          description: Sales
          type: boolean
        visibleInTa:
          description: Time entries
          type: boolean
    volumeUOMInPackagingUpdateDto:
      description: The <see cref="!:INUnit">Unit of Measure</see> used for the <see cref="P:Visma.net.ERP.Web.Api.Model.V1.IN.PackagingUpdateDto.BaseItemVolume">Volume</see> of the item.
      properties:
        value:
          type: string
    warehouseIdInPurchaseReceiptLineBasicUpdateDto:
      description: The Document details tab &gt; The warehouse where the item has been received.
      properties:
        value:
          type: string
    warehouseIdInPurchaseReceiptLineUpdateDto:
      description: The Document details tab &gt; The warehouse where the item has been received.
      properties:
        value:
          type: string
    warehouseInInventoryAdjustmentLineDto:
      description: "Mandatory field: Warehouse* &gt; The warehouse where the item is stocked."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInInventoryIssueLineDto:
      description: "Mandatory field: Warehouse &gt; (This column appears only if the Warehouses functionality is enabled in your system.) The warehouse from which the item is issued."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInInventoryReceiptLineDto:
      description: "Mandatory field: Warehouse* &gt; The warehouse where the stock item is received."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInInventorySummaryDto:
      description: The top part &gt; Warehouse &gt; The warehouse for which you want to view data.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInInventoryTransferDto:
      description: "Mandatory field: The top part &gt; From warehouse* &gt; The warehouse from which the goods are transferred."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInPurchaseOrderDto:
      description: Document details tab &gt; Warehouse &gt; The warehouse to receive the item listed on the order.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInPurchaseOrderLineDto:
      description: Warehouse &gt; The warehouse to receive the item listed on the order.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInPurchaseReceiptBasicDto:
      description: "Mandatory field: The top part or the Documents details tab &gt; Warehouse* &gt; The warehouse from which the items have been received for transfer orders."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInPurchaseReceiptDto:
      description: "Mandatory field: The top part or the Documents details tab &gt; Warehouse* &gt; The warehouse from which the items have been received for transfer orders."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInPurchaseReceiptLineDto:
      description: "Mandatory field: Document details tab &gt; Warehouse* &gt; The warehouse where the item has been received."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInShipmentDetailLineDto:
      description: "Mandatory field: Document details tab &gt; Warehouse* &gt; The warehouse from which the items is shipped."
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInStocktakeLineDto:
      description: The top part &gt; Warehouse &gt; An info field that shows the warehouse where the stocktaking count is performed.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    warehouseInStocktakeLineV2Dto:
      description: The top part &gt; Warehouse &gt; An info field that shows the warehouse where the stocktaking count is performed.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
    wedInTimeCardMaterialsUpdateDto:
      description: The quantity reported for Wednesday.
      properties:
        value:
          format: double
          type: number
    wedInTimeCardSummaryUpdateDto:
      description: The work time reported for Wednesday, including overtime.
      properties:
        value:
          format: int32
          type: integer
    weekInTimeCardDto:
      description: The top part &gt; Week &gt; The week for which the time card has been created.
      properties:
        description:
          description: Name of item/description
          type: string
        number:
          description: Number of item
          type: string
    weightUOMInPackagingUpdateDto:
      description: The <see cref="!:INUnit">Unit of Measure</see> used for the <see cref="P:Visma.net.ERP.Web.Api.Model.V1.IN.PackagingUpdateDto.BaseItemWeight">Weight</see> of the item.
      properties:
        value:
          type: string
    writeOffReasonCodeInPaymentLineDto:
      description: Write-off reason code &gt; A reason code that defines an account and subaccount to be used for writing off credits or balances.
      properties:
        description:
          description: Click on the magnifier. &gt; The description.
          type: string
        id:
          description: Click on the magnifier. &gt; The identifier.
          type: string
  securitySchemes:
    oauth2:
      description: OAuth2 Authorization Code Grant
      flows:
        authorizationCode:
          authorizationUrl: https://connect.visma.com/connect/authorize
          scopes:
            vismanet_erp_interactive_api:create: vismanet_erp_interactive_api:create
            vismanet_erp_interactive_api:delete: vismanet_erp_interactive_api:delete
            vismanet_erp_interactive_api:read: vismanet_erp_interactive_api:read
            vismanet_erp_interactive_api:update: vismanet_erp_interactive_api:update
          tokenUrl: https://connect.visma.com/connect/token
      type: oauth2
